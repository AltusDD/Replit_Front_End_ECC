Here are zero-drift, copy-paste Replit prompts that (1) restore live asset cards only, (2) remove placeholder pages, and (3) re-apply the light-grey object surface so what you see matches the screenshots. Each prompt is surgical and follows the ECC Replit playbooks.

PROMPT A — Lock routes to the live card pages (Wouter)

Open src/App.tsx (or the file where routes are defined). Replace only the card routes block. Do not add any generic/wildcard routes for /card/*. Keep all other routes unchanged.

// Card pages: use ONLY the live pages under src/pages/card/*
// (No placeholders, no generic '/card/:type/:id' routes.)

import PropertyCardPage from "./pages/card/property";
import UnitCardPage from "./pages/card/unit";
import LeaseCardPage from "./pages/card/lease";
import TenantCardPage from "./pages/card/tenant";
import OwnerCardPage from "./pages/card/owner";

// ...inside your router JSX (keep your existing layout/header/sidebar)
<Route path="/card/property/:id" component={PropertyCardPage} />
<Route path="/card/unit/:id" component={UnitCardPage} />
<Route path="/card/lease/:id" component={LeaseCardPage} />
<Route path="/card/tenant/:id" component={TenantCardPage} />
<Route path="/card/owner/:id" component={OwnerCardPage} />


Now search this file for any of the following and delete them if present:

Route path="/card/:type/:id"

Route path="/card/*"

Any imports from ./features/cards/*

Save. Do not wrap these five routes in a Suspense/lazy block for now.

PROMPT B — Remove placeholder pages that were covering live pages

Delete these files if they exist. Do not touch anything else.

src/features/cards/PropertyCardPage.tsx
src/features/cards/UnitCardPage.tsx
src/features/cards/LeaseCardPage.tsx
src/features/cards/TenantCardPage.tsx
src/features/cards/OwnerCardPage.tsx
src/features/cards/components/CardTabs.tsx
src/features/cards/components/HeroBlock.tsx
src/features/cards/components/RightRail.tsx
src/features/cards/components/ActivityTimeline.tsx
src/features/cards/hooks/usePropertyCardData.ts


Also remove any leftover imports of those files from other files (Replit will show them as red squiggles—delete those imports).
Do not delete anything under src/pages/card/* (those are the live pages).

PROMPT C — Ensure the light-grey object surface styles are loaded and applied

Open src/main.tsx (or your single entry). Make sure these two imports appear once at the top-level. If they’re already there, leave them (do not duplicate).

import "./styles/theme.css";
import "./styles/card-enhancer.css";


Create/overwrite src/styles/card-enhancer.css with the following. This version uses :where() and !important so it wins over older dark-theme rules without changing your page code.

/* --- ECC Object Surface Tokens (global) --- */
:root {
  --ecc-object-bg: #2A2F38;                 /* light grey interior on dark theme */
  --ecc-object-border: rgba(255,255,255,0.06);
  --ecc-object-radius: 16px;
  --ecc-object-pad: 16px;
}

/* Apply the surface to any card/panel/section we use across the app */
:where(.ecc-object, .section, .card, .panel, .gen-card, .gen-panel) {
  background: var(--ecc-object-bg) !important;
  border: 1px solid var(--ecc-object-border) !important;
  border-radius: var(--ecc-object-radius) !important;
  padding: var(--ecc-object-pad) !important;
}

/* Standard header row inside cards (title + actions) */
:where(.ecc-object) .ecc-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 12px;
  margin-bottom: 12px;
}

/* Optional shimmer (safe if already present) */
@keyframes ecc-shimmer {
  0% { background-position: 0% 0; }
  100% { background-position: 200% 0; }
}


Do not change the live page markup; these styles attach to your existing .section/.panel classes.

PROMPT D — Prevent any “covering screen” overlays

Open src/App.tsx and search for any always-mounted overlays or catch-all routes. Remove or hard-gate them:

Remove any <Route path="/card/*" component={...} />

Ensure any <Modal/>, <Drawer/>, <Overlay/> components are only rendered when an open flag is true. If you see a persistent overlay wrapper, wrap it like this:

{isOverlayOpen ? <OverlayComponent /> : null}


Also search globally for z-index: values over 1000. If you find a global container with position: fixed and very high z-index, ensure it only mounts when needed.

PROMPT E — Restart the dev server cleanly

In the Replit Shell:

# stop dev server if running (Ctrl+C in the shell tab), then:
npm run dev


In the browser, hard refresh the preview (Shift+Reload).

PROMPT F — Quick smoke test (live pages only)

Visit /card/property/42 (or any known working id from your list).

Confirm:

The page renders once (no second screen covering it).

All panels/sections have the light-grey interior.

Tabs, right rail, KPIs, and lists are visible.

Visit /card/unit/<id>, /card/lease/<id>, /card/tenant/<id>, /card/owner/<id> — confirm the same.

What this fixes (and why)

Placeholder removal: prevents double-rendering and “covered by another screen.”

Route hard binding: the app now routes only to the live pages under src/pages/card/*.

Style re-application: the object surface is enforced with :where() + !important so it shows across all card sections without touching your working components.

Overlay guard: eliminates any global layer inadvertently sitting above the card pages.