PLAN
Operating Mode: UI-Nav Engineer, Consistency Enforcer
Files to Touch: 
- `src/features/dashboard/hooks/useDashboardData.ts`
- `src/features/dashboard/pages/DashboardPage.tsx`
- `src/features/dashboard/components/KpiCard.tsx`
- `src/features/dashboard/components/PortfolioGoogleMap.tsx`
- `src/features/dashboard/components/FinancialsAndLeasing.tsx` (new file)
- `src/features/dashboard/components/OccupancyByCity.tsx` (new file)
- `src/styles/Dashboard.css`
Guardrails: 
- The backend Supabase database is now fully aligned with the "Data Contract" and `DATA_DICTIONARY.md`. All properties now have `lat` and `lng` coordinates.
- All data must flow from the `useDashboardData` hook. The hook's transformation logic is now correct.
- Use the `recharts` library for all charts and `wouter` for navigation links.
- All styling must strictly use the design tokens from `tokens.css`.

CHANGESET
- **1. Enhance KPI Cards with Visualizations:**
  - **File:** `src/features/dashboard/components/KpiCard.tsx`
  - Modify the component to accept chart data.
  - In the "Occupancy" card, render a small `recharts` Donut chart.
  - In the "Collections MTD" card, render a `recharts` Sparkline chart.
  - The hook `useDashboardData` must be updated to provide the necessary data series for these charts.

- **2. Implement the Interactive Map:**
  - **File:** `src/features/dashboard/components/PortfolioGoogleMap.tsx`
  - The `useDashboardData` hook now provides `lat` and `lng` for all properties.
  - Render an `<AdvancedMarker>` for each property on the map.
  - Implement pin color-coding based on property status (occupied, vacant, delinquent), using the design token colors.
  - Add clustering for high-density areas.
  - On marker click, show an InfoWindow with the property address, status, and a link to its detail page.

- **3. Build the Financials & Leasing Funnel:**
  - **File:** `src/features/dashboard/components/FinancialsAndLeaching.tsx` (New File)
  - Create a new component to replace the two placeholder panels.
  - It must contain a `recharts` ComposedChart for Cash Flow (Income/Expense bars, NOI line).
  - Add a horizontal bar chart for the Leasing Funnel.
  - Include a 30/60/90 day toggle that can re-fetch the data for the selected range.

- **4. Build the Occupancy by City Table:**
  - **File:** `src/features/dashboard/components/OccupancyByCity.tsx` (New File)
  - Create a new component to replace the placeholder panel.
  - Fetch and display data from the `v_occupancy_by_city` view.
  - The table columns must be sortable.
  - The "Occupancy %" column should contain a visual progress bar styled with `var(--altus-gold)`.
  - Clicking on a row should navigate the user to the properties list, filtered for that city.

- **5. Assemble the Final Dashboard:**
  - **File:** `src/features/dashboard/pages/DashboardPage.tsx`
  - Replace the remaining placeholder `div`s with the new, final components (`FinancialsAndLeasing`, `OccupancyByCity`).

VERIFICATION CHECKLIST
- All five main dashboard panels are now populated with live, interactive components.
- The Occupancy and Collections KPI cards contain their respective donut and sparkline charts.
- The map is fully populated with color-coded, clustered pins that show an InfoWindow on click.
- The Financials, Leasing Funnel, and Occupancy by City components are all functional and displaying correct data.
- The entire dashboard is styled according to the "Genesis Grade" spec, is fully responsive, and has no console errors.