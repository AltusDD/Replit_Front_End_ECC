1) Update vite.config (TS or JS — pick the one you have)
If you have vite.config.ts
import { defineConfig } from "vite";
import react from "@vitejs/plugin-react";
import path from "node:path";

export default defineConfig({
  plugins: [react()],
  resolve: {
    alias: { "@": path.resolve(__dirname, "src") },
  },
  server: {
    host: true,          // 0.0.0.0
    port: 5173,
    strictPort: true,
    // EITHER allow everything in dev…
    allowedHosts: true,
    // …or explicitly allow Replit preview hosts (comment out one approach)
    // allowedHosts: [
    //   "localhost",
    //   "127.0.0.1",
    //   "repl.co",
    //   "replit.dev",
    //   // your dynamic preview host:
    //   "258f1742-e4c0-4f32-8100-1f937c055471-00-z25yygrpls5w.worf.replit.dev",
    // ],
    proxy: { "/api": "http://localhost:8787" },
    hmr: { clientPort: 443 }, // Replit runs preview over HTTPS
  },
});

If you have vite.config.js
import { defineConfig } from "vite";
import react from "@vitejs/plugin-react";
import path from "node:path";

export default defineConfig({
  plugins: [react()],
  resolve: {
    alias: { "@": path.resolve(__dirname, "src") },
  },
  server: {
    host: true,
    port: 5173,
    strictPort: true,
    allowedHosts: true,
    // allowedHosts: [
    //   "localhost",
    //   "127.0.0.1",
    //   "repl.co",
    //   "replit.dev",
    //   "258f1742-e4c0-4f32-8100-1f937c055471-00-z25yygrpls5w.worf.replit.dev",
    // ],
    proxy: { "/api": "http://localhost:8787" },
    hmr: { clientPort: 443 },
  },
});


Dev-only note: allowedHosts: true is the quickest unbrick in Replit; if you want to lock it down later, switch to the explicit list and include your current preview host.

2) Restart the dev servers

Click Run (or stop/start).

In the preview, hard refresh (Ctrl/Cmd+Shift+R).

3) Quick sanity checks (optional, but useful)

In the browser Network tab you should see /@vite/client (status 200).

Visiting the app should no longer show “Blocked request…host is not allowed”.

If you still see “Booting ECC…” after this, the problem will be a normal runtime error (not host blocking). With allowed hosts fixed, your error boundary should now surface the real stack so we can squash it fast.