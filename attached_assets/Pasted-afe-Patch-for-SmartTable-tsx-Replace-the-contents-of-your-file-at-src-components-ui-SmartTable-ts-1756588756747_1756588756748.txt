afe Patch for SmartTable.tsx

Replace the contents of your file at:

src/components/ui/SmartTable.tsx


with this:

import React, { useState } from 'react';

type Props = {
  rows: any[];
  loading?: boolean;
  error?: any;
  title?: string;
  onRowDoubleClick?: (id: string | number) => void;
};

function primitiveColumns(rows: any[]): string[] {
  if (!rows?.length) return [];
  const first = rows.find((r: any) => r && typeof r === 'object') ?? {};
  return Object.keys(first)
    .filter((k) => ['string', 'number', 'boolean'].includes(typeof (first as any)[k]))
    .slice(0, 12);
}

function fmt(v: any) {
  if (v == null) return '';
  if (typeof v === 'boolean') return v ? 'Yes' : 'No';
  if (typeof v === 'object') return JSON.stringify(v);
  return String(v);
}

export default function SmartTable({ rows, loading, error, title, onRowDoubleClick }: Props) {
  const cols = primitiveColumns(rows);
  const [sortCol, setSortCol] = useState<string | null>(null);
  const [sortAsc, setSortAsc] = useState(true);
  const [filters, setFilters] = useState<{ [key: string]: string }>({});

  const filteredRows = rows.filter((r) =>
    cols.every((col) => {
      const filter = filters[col];
      return !filter || fmt(r[col]).toLowerCase().includes(filter.toLowerCase());
    })
  );

  const sortedRows = sortCol
    ? [...filteredRows].sort((a, b) => {
        const valA = fmt(a[sortCol]);
        const valB = fmt(b[sortCol]);
        return sortAsc ? valA.localeCompare(valB) : valB.localeCompare(valA);
      })
    : filteredRows;

  const handleSort = (col: string) => {
    if (sortCol === col) {
      setSortAsc(!sortAsc);
    } else {
      setSortCol(col);
      setSortAsc(true);
    }
  };

  const handleFilterChange = (col: string, value: string) => {
    setFilters((prev) => ({ ...prev, [col]: value }));
  };

  const handleDoubleClick = (r: any) => {
    const id = r.id ?? r._id;
    if (onRowDoubleClick && id != null) {
      onRowDoubleClick(id);
    }
  };

  return (
    <div className="panel">
      {title && <h3>{title}</h3>}
      {loading ? (
        <div>Loadingâ€¦</div>
      ) : error ? (
        <div style={{ color: 'var(--danger)' }}>
          API error: {String(error?.message ?? error)}
        </div>
      ) : !rows?.length ? (
        <div>No results</div>
      ) : (
        <div className="table-wrap">
          <table className="table">
            <thead>
              <tr>
                {cols.map((col) => (
                  <th key={col} onClick={() => handleSort(col)} style={{ cursor: 'pointer' }}>
                    {col} {sortCol === col ? (sortAsc ? 'â–²' : 'â–¼') : ''}
                  </th>
                ))}
              </tr>
              <tr>
                {cols.map((col) => (
                  <th key={col}>
                    <input
                      type="text"
                      placeholder="Search"
                      value={filters[col] || ''}
                      onChange={(e) => handleFilterChange(col, e.target.value)}
                      style={{ width: '100%', fontSize: '0.8em' }}
                    />
                  </th>
                ))}
              </tr>
            </thead>
            <tbody>
              {sortedRows.map((r: any, i: number) => (
                <tr key={r.id ?? r._id ?? i} onDoubleClick={() => handleDoubleClick(r)}>
                  {cols.map((c) => (
                    <td key={c}>{fmt(r[c])}</td>
                  ))}
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      )}
    </div>
  );
}

ðŸ§© Integration Tips:

In PropertiesPage.tsx, pass a handleRowDoubleClick callback to open the detail card:

<SmartTable
  rows={properties}
  loading={loading}
  error={error}
  onRowDoubleClick={(id) => navigate(`/property/${id}`)}
/>