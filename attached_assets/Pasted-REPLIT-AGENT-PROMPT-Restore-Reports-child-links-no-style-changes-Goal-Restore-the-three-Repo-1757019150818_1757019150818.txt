REPLIT AGENT PROMPT — Restore “Reports” child links (no style changes)

Goal: Restore the three Reports sub-pages and their sidebar links under Reports:

Create

Saved

(3rd link = auto-detect from repo history; if none found, use “Templates” as a non-breaking placeholder)

Hard guardrails (do not violate):

Do not modify any CSS, theme tokens, Tailwind config, or component styles.
No color/spacing/typography changes. Reuse existing classes only.

No renames or removals of existing exports, files, or routes.
Additive changes only.

Keep all existing pages working; do not touch tables, data hooks, or portfolio logic.

Do not introduce new deps.

If there are multiple nav systems, prefer the existing one used by the sidebar (do not add a second system).

Tasks (in order)
1) Discover the current nav & routes

Locate the sidebar/nav source (one of the following typical files):

src/config/nav.ts or src/config/navigation.ts

src/components/layout/Sidebar*.tsx or src/components/Sidebar/*.tsx

src/routes.tsx / src/router.tsx / src/app/router/*

Print the relevant file(s) and confirm how Reports is currently represented (section id, icon, children array, etc.).

2) Detect (or recover) the 3rd Reports child name

Search the codebase for past Reports child routes or components:

grep for: reports, SavedReports, CreateReport, Templates, Scheduled, Exports

If the 3rd historical child is found (e.g., “Scheduled” or “Exports”), use that label & path.

If nothing is found, use “Templates” as the 3rd child (path /reports/templates) and add a // TODO: confirm name comment—no other changes.

3) Define/restore routes (no style changes)

Ensure the following routes exist and render within the same layout used by other pages:

/reports/create

/reports/saved

/reports/<third> (detected name, else templates)

Page files live here (create if missing, keep tiny):

src/pages/reports/Create/index.tsx
src/pages/reports/Saved/index.tsx
src/pages/reports/<Third>/index.tsx  // name from step 2


Each page must:

Export a default React component.

Use the existing page wrapper/layout (whatever we already use—e.g., <Page>, <Content>, existing grid) and existing utility classes only.

Contain only minimal placeholder content (title + one line) so we don’t alter look & feel:

export default function ReportsCreatePage() {
  return (
    <div className="ecc-page">
      <h1>Reports – Create</h1>
      <p className="text-muted">Use this screen to create a new report.</p>
    </div>
  );
}


Do not add styles or inline CSS.

4) Add/restore the 3 nav children under “Reports”

In the sidebar/nav config, add (or un-hide) children with labels and routes:

Create → /reports/create

Saved → /reports/saved

<Third> → /reports/<third> (detected or templates)

Use the same icon/chevron treatment and the same class names as other sub-links.

Keep the ordering: Create, Saved, Third.

5) Keep active/selected state working

Ensure the active route highlighting for the 3 new links behaves exactly like other sidebar children (same isActive logic / NavLink usage).

Confirm keyboard focus/ARIA roles match existing sidebar items (copy pattern only).

6) Sanity checks (no regressions)

Start the dev server and verify:

Sidebar Reports expands/collapses exactly as before.

The 3 links render and navigate to the pages.

No console errors; no layout shift.

Theme unchanged.

Output a short “Changed files” list and a diff summary.

7) Tiny test (optional but preferred if we already have test infra)

If Playwright or RTL exists, add a minimal test that:

Navigates to /reports/create

Asserts sidebar shows “Reports” with 3 children

Asserts page heading contains “Reports – Create”

If no test infra, skip this step.

Acceptance criteria

Three child links under Reports are visible and working.

No CSS/theme changes anywhere.

All existing pages & nav behavior remain intact.

If the third historical child was found, it’s restored with original label/path; otherwise a safely named placeholder Templates is provided with a TODO note.

Implementation notes

If the app uses a central routes list to build the sidebar, add route objects only—no styling.

If the sidebar is hard-coded, add the three <NavLink> entries using the same components and classes already in use.

If /reports has an index page, do not change it. We are only adding three child pages and links.

Do not refactor beyond these additions. Keep the PR minimal and additive.

END PROMPT