You’re right — that skinny icon rail plus a second column of text means our collapsed rail is still showing inner text and the hover fly-out is “occupying space” instead of overlaying. We’ll fix both, and also hard-hide any other sidebar variants.

Apply these two patches only.

1) src/components/Sidebar.tsx — tighten fly-out toggle + expand button

Find the fly-out render near the bottom and ensure it only renders when collapsed and we’re hovering (no pre-allocated space):

{/* Collapsed hover flyout */}
{collapsed && hovering && (
  <div className="flyout show" aria-hidden={!hovering} ref={flyoutRef}>
    <div className="flyout-header">
      <img src="/logo.png" alt="Altus" />
    </div>
    <div className="flyout-body">
      {/* ...unchanged contents... */}
    </div>
  </div>
)}


Also keep the rail expand button (if you don’t have it yet) so you can open the rail without hover:

{collapsed && (
  <button
    className="railExpand"
    onClick={() => setCollapsed(false)}
    title="Expand navigation"
    aria-label="Expand navigation"
  >
    <Lucide.ChevronRight size={18} />
  </button>
)}


(Everything else in the component stays the same.)

2) src/styles/_ecc-override.css — force true “icon-only” rail, overlay fly-out, hide any duplicates

Append these rules to the end of the file (they win without touching global CSS):

/* ——— Icon-only when collapsed ——— */
.sidebar.collapsed{ overflow: hidden !important; }
.sidebar.collapsed .section-title,
.sidebar.collapsed .label,
.sidebar.collapsed .expand{
  display: none !important;
}
.sidebar .sidebar-scroll{ overflow-x: hidden !important; }

/* ——— Fly-out must overlay (no layout shift) ——— */
.sidebar{ position: fixed; }
.sidebar .flyout{
  position: absolute !important;
  top: 0; left: calc(var(--ecc-sidebar-w-collapsed, 72px) - 2px);
  height: 100vh;
  max-width: var(--ecc-flyout-w, 280px) !important;
  z-index: 60;
  display: none;            /* default: no space taken */
  opacity: 0;
  transform: translateX(-8px);
  pointer-events: none;
  transition: opacity .18s ease, transform .18s ease;
}
.sidebar .flyout.show{
  display: block;           /* only when collapsed + hovering */
  opacity: 1;
  transform: translateX(0);
  pointer-events: auto;
}
/* Never show fly-out while expanded */
.sidebar:not(.collapsed) .flyout{ display: none !important; }

/* ——— Kill any legacy/duplicate sidebars ——— */
.sidebar:not([data-ecc="primary"]){ display: none !important; }
[data-ecc="primary"] ~ .sidebar{ display: none !important; }
html[data-sidebar-mounted="1"] [data-role="sidebar"]:not([data-ecc="primary"]){
  display: none !important;
}

/* ——— Link/visited color discipline inside the sidebar ——— */
.sidebar a,
.sidebar a:link,
.sidebar a:visited,
.sidebar a:active{
  color: var(--ecc-text) !important;
  text-decoration: none !important;
}

/* ——— Icon colors ——— */
.sidebar .icon.parent{ color: var(--ecc-gold) !important; }
.sidebar .icon.child { color: var(--ecc-dim)  !important; }

/* ——— Rail expand button ——— */
.sidebar .railExpand{
  position: absolute; bottom: 16px; left: 50%;
  transform: translateX(-50%);
  width: 38px; height: 38px; border-radius: 999px;
  display: inline-flex; align-items: center; justify-content: center;
  border: 1px solid var(--ecc-seam);
  background: var(--ecc-hover); color: var(--ecc-text);
  box-shadow: 0 6px 16px rgba(0,0,0,.25);
  cursor: pointer; z-index: 70;
  transition: transform .15s ease;
}
.sidebar .railExpand:hover{ transform: translateX(-50%) scale(1.05); }
.sidebar:not(.collapsed) .railExpand{ display: none; }

Quick sanity steps

Hard refresh the app.

If the rail still starts collapsed and you want to view expanded once:

localStorage.removeItem('ecc:nav:collapsed'); location.reload();


Hover over the collapsed rail → you should see a bounded fly-out panel overlaying the page (not pushing it).

When expanded, there’s no second pane: no section titles or labels should appear outside the fly-out, and the fly-out is hidden.

This kills the “two panes” effect (the stray text column was the rail’s inner content peeking through + a fly-out occupying layout space). If you still spot a ghost element, snap one more screenshot—I’ll give you a one-line selector targeting that exact node.