The AI's report is incorrect, the application is not working, and this cycle of failed steps is unacceptable. This is a classic case of an AI "hallucinating" a successful outcome without actually verifying its work.

We are going to stop this now.

The problem is not the plan itselfâ€”the "Cards Up" prompt you were given is technically sound. The problem is that the Replit AI is failing to execute it correctly and is not being held accountable.

The solution is to give the Replit AI a new, more forceful and deterministic prompt that breaks the plan into micro-steps and demands verification at each stage. It will not be allowed to proceed until it proves a step is complete.

The "System Reset" Prompt for Replit
Here is the new prompt. Copy this entire block and paste it into the Replit chat. This will reset the process and force the AI to execute the fix correctly, once and for all.

Markdown

TITLE: SYSTEM RESET: Execute "Cards Up" Fixes Deterministically

Your previous reports of success are incorrect. The application is not working, and the asset cards are still crashing. We are performing a system reset to fix this.

You will now execute the following plan exactly as written, in order. You must stop after each of the three main steps and provide the requested verification output. Do not deviate or report success until the final verification passes.

---
### **Step 1: Execute Boot Hardening & Stabilize the Environment**

**Your Task:**
1.  In `vite.config.ts`, ensure `server.allowedHosts` is set to `true`.
2.  Refactor `src/components/EccErrorBoundary.tsx` to be a pure React component with no DOM manipulation. It should only render an `<h2>` and the error message.
3.  Ensure `src/main.tsx` uses a default import for `EccErrorBoundary`.
4.  Clean up `index.html` to only contain the single script tag for `/src/main.tsx`.
5.  Move any dev-only pages like `src/dev/AtomsGallery.tsx` to a disabled directory and remove any imports pointing to them.

**Verification Required:**
After completing this step, **STOP** and report the following:
* Confirm that both the Vite and Express API servers start without errors.
* Confirm that the browser loads the basic application shell and does **not** show a white screen or a "removeChild" overlay error.

---
### **Step 2: Fix the API Contracts**

**Your Task:**
1.  Open the file `server/routes/rpc.ts`.
2.  Add the required helper functions (`pick`, `toCents`, `fetchOneMulti`, `normAddress`, `ok`, `fail`).
3.  **Replace** the existing `/api/rpc/get_property_card` route handler with the new, robust implementation that guarantees `kpis.units` is always a number (>=0).
4.  Apply the same robust pattern to the other four RPC endpoints (Unit, Lease, Owner, Tenant) to ensure they always return their required root objects and use `null` for missing relationships, never `undefined`.

**Verification Required:**
After completing this step, **STOP** and provide the **exact, full JSON output** of the following command run from the shell:
```bash
curl -s "http://localhost:8787/api/rpc/get_property_card?id=42" | jq .
The output must show a kpis object where units is a number.

Step 3: Align the Frontend with CardKit
Your Task:

Perform a repository-wide search for the legacy <FieldRows> component.

Replace all instances of <FieldRows> with the new <FieldGroup> component from @/components/cardkit/FieldGroup.

Verify that all Overview.tsx files for the five entities import their paneling and display components from the @/components/cardkit/ directory.

Verification Required:
After completing this step, STOP and confirm that no files in the src/ directory import the old FieldRows component.

Final Verification
Once you have completed all three steps above and provided the verification for each, proceed with the final UI smoke tests.

Your Task:

Visit the following six routes in the application:

/portfolio/properties

/card/property/42

/card/unit/45

/card/lease/1

/card/owner/1

/card/tenant/1

Final Report:
Confirm that all six routes now render without any red error overlays and without any Zod contract violation errors.