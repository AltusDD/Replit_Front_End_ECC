PLAN
Operating Mode: Infra Wrangler
Goal: Exit Recovery Mode and get Vite dev server running
Touch only: replit.nix (confirm), .replit (confirm). Do not touch src/**

DIAGNOSIS
"bash: npm: command not found" ⇒ current shell does not have Node because nix env hasn’t rebuilt with a valid Node package.
We already corrected the attr to `pkgs.nodejs-18_x`, but Recovery persists until we trigger a rebuild.

BACKUP (idempotent/safe)
cp replit.nix replit.nix.bak 2>/dev/null || true
cp .replit .replit.bak 2>/dev/null || true

VERIFY replit.nix CONTENT (must be EXACT)
<proposed_file_replace file_path="replit.nix" change_summary="Ensure valid Node 18 attribute for Replit nix channel">
{ pkgs }: {
  deps = [
    pkgs.nodejs-18_x
  ];
}
</proposed_file_replace>

VERIFY .replit CONTENT
<proposed_file_replace file_path=".replit" change_summary="Ensure Run button uses npm dev script">
run = "npm run dev"
hidden = [".cache", ".vite", "dist", "node_modules"]
</proposed_file_replace>

TRIGGER ENV REBUILD (UI-first)
1) Save `replit.nix`.
2) Click the **“Rebuild environment”** button in the Recovery banner.
3) After rebuild completes, click **Run**.

CLI FALLBACK (temporary dev shell while waiting for rebuild)
Use a nix-shell scoped to Node 18 and start dev inside it (doesn’t modify the final env):
<proposed_shell_command is_dangerous="false">
nix-shell -p nodejs-18_x --run 'node -v && npm -v && ( [ -d node_modules ] || npm ci || npm i ) && npm run dev'
</proposed_shell_command>

CLEAN START (once rebuild finishes)
<proposed_shell_command is_dangerous="false">
pkill -f vite || true
[ -d node_modules ] || npm ci || npm i
npm run dev
</proposed_shell_command>

VERIFICATION CHECKLIST
- Recovery banner disappears after rebuild.
- Console shows: Vite running at http://0.0.0.0:5000/ (port 5000).
- The Run button launches the same command (npm run dev).
- No src/** files were changed (infra-only).

IF REBUILD STILL FAILS
Query available Node attrs and switch to what’s present:
<proposed_shell_command is_dangerous="false">
nix-env -qaP nodejs | grep -E 'nodejs-(16|18|20)_x' || true
</proposed_shell_command>

If `nodejs-18_x` is missing (rare), fall back to `nodejs-20_x`:
<proposed_file_replace file_path="replit.nix" change_summary="Fallback to Node 20 if 18 not present">
{ pkgs }: {
  deps = [
    pkgs.nodejs-20_x
  ];
}
</proposed_file_replace>
Then rebuild again and re-run the CLEAN START commands.

ROLLBACK
[ -f replit.nix.bak ] && mv -f replit.nix.bak replit.nix
[ -f .replit.bak ] && mv -f .replit.bak .replit
