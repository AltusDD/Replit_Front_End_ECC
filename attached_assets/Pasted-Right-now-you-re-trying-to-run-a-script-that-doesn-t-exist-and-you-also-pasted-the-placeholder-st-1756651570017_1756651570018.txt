Right now you’re trying to run a script that doesn’t exist, and you also pasted the placeholder -<stamp>.zip literally (so bash split on - and errored). Let’s fix both cleanly.

1) Create the restore script (once)
# make sure the scripts/ folder exists
mkdir -p scripts

# write the restore helper
cat > scripts/genesis-restore.sh <<'EOF'
#!/usr/bin/env bash
set -euo pipefail

# Usage:
#   bash scripts/genesis-restore.sh            # auto-pick latest .archive/*.zip
#   bash scripts/genesis-restore.sh .archive/estatecommand-snapshot-YYYYMMDD-HHMMSS.zip

ZIP="${1:-}"

# Auto-pick the newest snapshot if none provided
if [[ -z "${ZIP}" ]]; then
  ZIP="$(ls -t .archive/*.zip 2>/dev/null | head -1 || true)"
fi

if [[ -z "${ZIP:-}" || ! -f "${ZIP}" ]]; then
  echo "❌ No snapshot zip found. Expected at .archive/*.zip"
  exit 1
fi

echo "⏪ Restoring from: ${ZIP}"
# remove build caches that can fight the restore
rm -rf dist .vite .cache || true

# restore (do not overwrite node_modules or .git)
unzip -o "${ZIP}" -x "node_modules/*" ".git/*" >/dev/null

echo "📦 Reinstalling deps..."
npm ci

echo "✅ Restore complete. Start dev with: npm run dev"
EOF

# make it executable
chmod +x scripts/genesis-restore.sh

2) Find your latest snapshot (so you use a real filename)
ls -l .archive
# or just
ls -t .archive/*.zip | head -1


You should see something like:

.archive/estatecommand-snapshot-2025-09-01_10-42-33.zip

3) Run the restore

Use either the latest automatically:

bash scripts/genesis-restore.sh


…or pass the exact file (copy the real name you saw above):

bash scripts/genesis-restore.sh ".archive/estatecommand-snapshot-2025-09-01_10-42-33.zip"


(Quotes are important if your path ever contains spaces.)

4) Bring the app back up
npm run dev


If your dev script isn’t binding to the right host/port, set it in package.json:

"scripts": {
  "dev": "vite --host --port 5000",
  "clean:genesis": "bash scripts/genesis-clean.sh"
}


Then:

npm run dev

Why you saw those errors

chmod: cannot access 'scripts/genesis-restore.sh': the file didn’t exist yet. We created it above.

bash: stamp: No such file or directory: you pasted the placeholder -<stamp>.zip; bash treated -<stamp> as a separate word. Always use the real filename from .archive/, or just run the script with no args to auto-pick the newest snapshot.

If anything weird pops up (e.g., “no snapshot zip found”), send me the output of ls -l .archive and I’ll adjust the one-liner.