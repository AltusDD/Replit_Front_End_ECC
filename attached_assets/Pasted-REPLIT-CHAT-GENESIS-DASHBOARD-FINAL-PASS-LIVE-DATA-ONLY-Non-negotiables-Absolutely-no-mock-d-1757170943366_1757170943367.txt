REPLIT CHAT — “GENESIS DASHBOARD: FINAL PASS (LIVE DATA ONLY)”
Non-negotiables

Absolutely no mock data. Every widget must read from live /api/portfolio/{properties|units|leases|tenants|workorders|transactions} etc. If a field is missing, show an explicit empty state in the UI and surface it in the QA overlay; do not silently fake.

Genesis standards only: Altus Black background, Inter font, Altus Gold accents. Replace any “brown tint” with approved light neutral contrast.

Keep existing routes and deep links. Every card/button must navigate to the correct pre-filtered page.

All dates formatted as Mon D, YYYY (e.g., Sep 9, 2025) via a single formatter used everywhere.

0) Packages and housekeeping

Ensure we’re using Google Maps React lib and clusterer:

npm i @vis.gl/react-google-maps @googlemaps/markerclusterer


Keep eruda out of the bundle (already fixed). No other debug libs.

1) Theme + readability polish (no visual drift, just higher contrast)

Files

src/styles/tokens.css

src/styles/Dashboard.css

Changes

Update the panel neutrals to kill the brown tint and improve contrast:

:root {
  --altus-black:#0b0e12;
  --altus-gold:#d6b36a;

  /* Surfaces (slightly cooler neutrals) */
  --panel-bg:#171a1f;     /* card bg */
  --panel-elev:#1c2026;   /* elevated card bg */
  --line:#2a2f36;         /* borders */

  --text:#e8eaf0;         /* primary text */
  --text-dim:#a6adbb;     /* secondary text */

  --good:#2cc38a;         /* success */
  --warn:#f3c969;         /* warning */
  --bad:#ef5953;          /* error */
  --neutral:#8b93a3;      /* neutral gray */
}


KPI cards and panels: add breathing room + stronger hierarchy.

.ecc-kpi min-height 96px, padding 16px 18px, title 12px/uppercase/letter-spacing 0.06em, value 24px/600.

Chart panels use box-shadow: 0 8px 24px rgba(0,0,0,.35); border:1px solid var(--line); border-radius:12px;.

2) Global formatting utilities

File: src/utils/format.ts

Enforce single date format and fix money/percent readability:

export const fmtDate = (iso?: string | null) =>
  !iso ? "—" : new Date(iso).toLocaleDateString(undefined, { month:"short", day:"numeric", year:"numeric" });

export const fmtMoney = (n?: number | null) => {
  if (n == null || Number.isNaN(n)) return "—";
  if (n === 0) return "$0";
  return (typeof n === "number" ? n : 0).toLocaleString(undefined, { style:"currency", currency:"USD", maximumFractionDigits:0 });
};

export const fmtPct = (n?: number | null, dp = 1) => {
  if (n == null || Number.isNaN(n)) return "—";
  return `${n.toFixed(dp)}%`;
};


Replace any ad-hoc formatting in dashboard components with these.

3) Data hooks — live only, with completeness QA

File: src/features/dashboard/hooks/useDashboardData.ts

Do

Keep the single source useDashboardData() but ensure all series and counts come from live endpoints:

properties → id, address, city, state, zip, lat/lng (do not randomize); active flag.

units → id, property_id, beds, baths, sqft, status, rent_amount.

leases → id, unit_id, property_id, status, start_date, end_date, rent_cents, tenant_ids[] or primary_tenant_id.

tenants → id, display_name/full_name, type, balance_cents, delinquency_age_days (if available).

workorders → id, property_id, priority, status, created_at, title/description.

transactions → type (“rent”, “expense”), amount_cents, posted_on (for 90-day cashflow).

No synthesized/random map coords. If any property lacks lat/lng, push an item to the QA overlay (qa.missingGeo++) and exclude it from the map until present.

Collections (MTD) = sum of “rent” receipts in current month / sum of billed rent for active leases in current month. Show both numerator/denominator in tooltip.

NOI (MTD) = rent income – operating expenses (exclude capex if we have a flag).

Add a dev-only QA overlay object returned by the hook:

qa: {
  api:{ properties, units, leases, tenants, workorders, transactions }, // counts
  missing:{ geo:number, tenantEmail:number, ownerPhone:number },
  lastUpdated: new Date().toISOString()
}


Show this only when ?debug=1 is in the URL.

4) KPI Ticker — make it bold, clickable, and legible

File: src/features/dashboard/components/KpiTicker.tsx

Do

KPIs (4):

Portfolio Occupancy (donut) + trend vs last month.

Rent Ready / Vacant (e.g., 8 / 15), click → /portfolio/units?status=vacant&rent_ready=true.

Collections Rate (MTD) with small sparkline of daily receipts.

Critical Work Orders count (High/Critical), click → /maintenance?priority=high,critical&status=open.

Increase donut thickness; values at 24px; labels at 12px dim text.

Make each card a <button> or <Link> with hover/active states.

5) Google Map — real data, clustering, purposeful styles

File: src/features/dashboard/components/PortfolioGoogleMap.tsx

Do

Use @vis.gl/react-google-maps. API key via VITE_GOOGLE_MAPS_API_KEY.

No random coords. Only plot properties with real lat/lng. Count missing in QA.

Pin colors:

Green: occupied + current.

Yellow: vacant + rent-ready.

Orange: vacant + not rent-ready.

Red: occupied + delinquent.

Enable clustering with MarkerClusterer. Cluster color uses Altus Gold ring with dark fill.

InfoWindow content: property name, address, status chip, current tenant (if any), and actions:

“View Details” → /card/property/{id}

“Open Work Orders” → /maintenance?property_id={id}&status=open

“View Tenants” → /portfolio/tenants?property_id={id}

If qa.missing.geo > 0, show a small notice pill in the map header: “{n} properties missing geo — click to view”. Clicking opens a list of property names with deep links to their asset cards.

6) Priority Action Feed — real alerts, real actions

File: src/features/dashboard/components/PriorityActionFeed.tsx

Do

Delinquency Alerts (Top 3): tenant, property, balance (red), days overdue; buttons: Send Reminder, Start Eviction (both route to Communication/Legal with preselected tenant).

Lease Renewals (Next 45 days, Top 3): tenant, property, expires {fmtDate}; buttons: Prepare Renewal, Do Not Renew.

Maintenance Hotlist (Top 3): property, age in days, priority; button: Assign Vendor.

Empty states must be positive (“No delinquent tenants 🎉”).

7) Financials & Leasing — actionable visuals

File: src/features/dashboard/components/FinancialsAndLeasing.tsx

Do

Cash Flow (Last 90 Days): ComposedChart with Income (green bars), Expenses (neutral bars), NOI line (Altus Gold). Mouse tooltip shows all three and the variance vs previous month.

Leasing Funnel (Last 30 Days): Horizontal steps:

Leads → Tours → Applications → Approved → Leases Signed

Show conversion % per stage. Add CTA: “View Vacants” and “View Applications”.

Range controls (30/60/90) at top-right: active state highlighted with Altus Gold underline.

8) Occupancy by City — readability + drilldown

File: src/features/dashboard/components/OccupancyByCity.tsx

Do

Sortable headers; right-align numeric columns; progressive disclosure (show top 10 by default with “Show all”).

Progress bar uses Altus Gold foreground on a neutral track. Click row → /portfolio/properties?city=XYZ.

9) Dashboard page layout — spacing and skeletons

File: src/features/dashboard/pages/DashboardPage.tsx

Do

Grid:

Row 1: KPI Ticker (full width).

Row 2: Map (2/3) + Action Feed (1/3).

Row 3: Financials (1/2) + Leasing (1/2).

Row 4: Occupancy by City (full).

Add skeletons for each section using the panel styles; ensure no layout shift.

Add the QA Overlay (dev only):

When ?debug=1: floating drawer (right) listing counts and missing data (geo, emails, phones), lastUpdated time, and a “Copy report” button.

10) Deep links (actionability)

Make every widget actionable:

KPI clicks → prefiltered pages (as listed above).

Chart legends allow toggling series (Income/Expense/NOI).

Leasing funnel stages clickable → /portfolio/units?status=vacant or /portfolio/leases?status=pending etc.

11) Tests / acceptance checklist (block PR until 100% passes)

No mock data anywhere in dashboard code (grep for “mock-data”, hardcoded arrays, Math.random).

Zero console errors/warnings in dev (including AbortErrors on unmount).

Map renders with real property pins; if any missing lat/lng, the QA pill appears and count matches.

All dates display Mon D, YYYY.

KPI clickthroughs route to correct filtered pages.

Collections (MTD) equals live receipts/billed computations (show numerator/denominator on hover).

NOI line equals Income – Expenses per period.

Leasing funnel numbers match counts on Portfolio pages for the same date window.

Contrast: audit with DevTools—minimum AA contrast on text and data labels.

Responsive: desktop, tablet, mobile—no overlap or clipped legends.

Commit message

feat(dashboard): Genesis-grade final pass — live data only, high-contrast neutrals, actionable KPIs, clustered Google Map, priority action feed, cashflow+NOI, leasing funnel, occupancy table; global date format; QA overlay

Notes for the implementer

If any endpoint cannot provide a required field (e.g., property lat/lng), do not synthesize. Render the QA notice and keep the UI honest.

Use AbortController in useDashboardData() and swallow abort errors; log only real fetch failures.

Keep all colors from token vars; no ad-hoc hex in components.

Run this exactly and report back with:

Screenshots (desktop + mobile width),

QA overlay output with the current missing-data counts,

A short diff summary of files touched.