Prompt 0 — Switch to Build
Switch to **Build** mode.

Task: I’m going to paste 4 sequential prompts (Phase 1 → Phase 4). Apply each patch completely, restart the dev server, and post screenshots + notes after every phase. Do not re-theme; respect our dark tokens. Keep existing routes working:

/card/property/:id, /card/unit/:id, /card/lease/:id, /card/tenant/:id, /card/owner/:id

Guardrails:
- Use only our tokens.css for colors/spacing.
- Read integration flags from /api/config/integrations for badges & action gating.
- Right rail widgets must have min-heights + skeletons (no layout shift).
- No inline fetches in UI components; use the data hooks.
- Keep ?debug=1 minimal (tiny badge only).

Prompt 1 — Phase 1: Populate Hero & Right Rail
PHASE 1: Context & Command Layer (Hero & Right Rail)

Files to create/update
- Components: 
  src/features/portfolio/components/{HeroBlock.tsx, RightRail.tsx, Kpi.tsx, Widget.tsx, BadgePills.tsx}
- Hooks (enhance to expose KPI + rail data):
  src/features/portfolio/hooks/{usePropertyData.ts, useUnitData.ts, useLeaseData.ts, useTenantData.ts, useOwnerData.ts}
- Pages: wire the new props into each card page component.

Rules
- Hero = Title + Source Badges + 4 KPIs + role-gated primary actions (disable with tooltip if gated).
- Right Rail = 2–3 read-only widgets per entity, each with minHeight + skeletons.
- Use /api/config/integrations for badges & gating.
- Derive KPIs in hooks when possible; if unknown, return null + hint "—".

KPI & Right-Rail mapping
- Property
  KPIs: Occupancy %, Delinquency $, Avg Rent $, Open WOs
  Actions: Record Payment, Add WO, Send Notice (M365-gated), Export PDF
  Rail: Risk Score (CoreLogic), Key Dates (Next inspection, Insurance), Pinned Files
- Unit
  KPIs: Status, Market Rent, Current Rent, Days Vacant
  Actions: New Lease, Add WO, Schedule Tour
  Rail: Parent Property summary, Quick Stats, Pinned Files
- Lease
  KPIs: Status, Rent Amount, Balance Due, Days to Expiry
  Actions: Record Payment, Add Charge, Send Renewal, Terminate Lease
  Rail: Tenant Quick View, Payment History (last 5), Pinned Files
- Tenant
  KPIs: Total Balance Due, Active Leases, On-time %, Portal Status
  Actions: Record Payment, Send Message, Add Note
  Rail: Contact Info, Next Payment Due, Pinned Files
- Owner
  KPIs: Properties Owned, Total Units, Portfolio Occupancy, Net Distribution (Est.)
  Actions: Transfer Ownership (/owners/transfer?ownerId=:id), Generate Statement, Send Message
  Rail: Contact Info, Portfolio Highlights (top 3 properties), Pinned Files

Endpoints to use (read-only this phase)
- /api/entities/{properties|units|leases|tenants|owners}/:id
- /api/portfolio/{properties|units|leases|tenants}?{owner_id|property_id|tenant_id|lease_id}=…
- /api/files/doorloop/list?table={entity}&ref_id={id}
- /api/config/integrations

Acceptance (attach screenshots for each URL)
- /card/property/42, /card/unit/45, /card/lease/1, /card/tenant/1, /card/owner/1 show:
  - Hero with 4 KPIs, badges, actions (disabled appropriately with tooltip reasons).
  - Right rail with 3 widgets (skeleton on load, no layout shift).
  - Consistent dark theme (no “page underneath” look).

Prompt 2 — Phase 2: Interactive Hubs (Linked, Files, Activity)
PHASE 2: Build Linked, Files, Activity tabs (interactive core)

New components
- src/features/portfolio/components/MiniCards.tsx
  Small, clickable rows for related entities (title + meta + chevron).
- src/features/portfolio/components/UnifiedFilesExplorer.tsx
  Header search input + two sub-tabs: DoorLoop | Dropbox.
  - DoorLoop: /api/files/doorloop/list?table={entity}&ref_id={id}
  - Dropbox (graceful empty/error if DROPBOX_ACCESS_TOKEN missing)
- src/features/portfolio/components/ActivityTimeline.tsx
  Slack-style chips: monochrome icon, single-line text, right-aligned timestamp.
  Filter bar: [Source] [From] [To]. High-signal events = colored left border.

Server route to add (if missing) for activity
- POST /api/audit/by-ref  OR GET /api/audit/by-ref?table=properties&ref_id=42
  Query audit_events by (ref_table, ref_id) ordered desc, limit 200.
  Response: { events: [{id, created_at, event_type, label, payload}] }
  Tag events with a normalized `source` ("doorloop" | "system" | "m365" | "corelogic") for filtering.

Wire the tabs
- Linked tab (per entity)
  Property → Owner (1), Units (N), Leases (N)
  Unit → Property (1), Active Lease (0/1)
  Lease → Property (1), Tenants (N)
  Tenant → Leases (N)
  Owner → Properties (N)
  Prefetch hover: on mouseenter, prefetch the target’s entity via its /api/entities endpoint.

- Files tab
  Use UnifiedFilesExplorer.tsx. Search above sub-tabs queries both sources; show merged results list with source icon, and keep sub-tab views below.

- Activity tab
  Use ActivityTimeline.tsx backed by /api/audit/by-ref.
  Add empty state: “No events. Try a wider date range.”

Acceptance
- Each card’s Linked tab shows correct relationships with clickable mini-cards.
- Files tab renders DL/DB sub-tabs; DL list works now; DB tab shows “Connect Dropbox to view” if not configured.
- Activity tab filters by source/date and renders chips; no layout shift; pagination or lazy-load acceptable.
- Server route /api/audit/by-ref returns data for properties/ref_id you tested in Phase 1.

Prompt 3 — Phase 3: Data & Financials (Details, Financials, Legal)
PHASE 3: Populate Details, Financials, Legal tabs

New components
- src/features/portfolio/components/FieldGroups.tsx
  Render labeled field groups; supports provenance badge (e.g., “(DoorLoop)”).
- src/features/portfolio/components/LedgerTable.tsx
  Virtualized table for financial ledger; sticky header; lazy data chunks.
- src/features/portfolio/components/Charts.tsx
  Recharts: Cash Flow (bar/line), Aging (stacked). Use tokens; no custom colors.

Server (if needed)
- If ledger endpoint is missing, add read-only:
  GET /api/ledger/by-ref?table={leases|tenants|properties}&ref_id={id}
  Response: { rows:[{id,date,type,amount,balance,source,notes}], summary:{...} }
  If no backing data exists, return empty rows; UI shows empty state (“No ledger entries”).

Tab content
- Details
  Show identity fields with provenance tags; group by section (Identity, Location, Contacts, Meta).
- Financials
  LedgerTable backed by /api/ledger/by-ref (or empty state).
  Charts: Cash Flow (last 12m), Aging (current buckets) using summary.
  Action Panel: Record Payment, Add Charge, Adjust (visually present; actions can be disabled if not implemented).
- Legal
  Table of legal cases/statuses/dates. If API not present, implement placeholder structure with empty state.

Acceptance
- Details tab renders dense labeled groups with subtle provenance text.
- Financials tab: virtualized ledger (or empty state), two charts render with skeletons first.
- Legal tab: table structure present; empty state allowed.
- Performance: ledger virtualized; tab panels lazy-loaded; initial card load remains snappy.

Prompt 4 — Phase 4: Polish, A11y, Performance, E2E
PHASE 4: Polish, Accessibility, Performance, E2E

Motion & Feedback
- Tab change: opacity cross-fade 150ms.
- Modal/preview: scale(0.98)→1 + opacity 180ms.
- Toasts for actions (bottom-right) with Undo/View Details.

Accessibility
- Add aria-labels to all action buttons.
- Ensure tablist/tabs/panels use correct roles and keyboard focus order.
- Contrast: verify tokens meet WCAG AA on dark bg.

Performance
- Ensure all heavy panels (Financials, Activity) are lazy-mounted.
- Memoize derived KPIs; avoid request waterfalls in hooks.
- Add simple cache in hooks for relationship fetches (in-memory).

E2E Tests (Playwright)
- Tests folder: tests/e2e/cards.spec.ts
  - Loads each card route; asserts hero KPIs render.
  - Toggles tabs; asserts right rail remains stable (no layout shift).
  - Activity filters by source/date; asserts chips render.
  - Files tab DL list renders; DB tab shows “Connect Dropbox” if missing.
  - Owner → Transfer Ownership button deep-links correctly.

Acceptance
- Lighthouse or equivalent shows no major a11y violations.
- Playwright suite passes locally (headless).
- Screenshots attached: before/after motion, a11y audit output, and charts.

Final “Done” checklist for Replit to confirm

 All five cards show Hero + Right Rail with real data and action gating.

 Linked / Files / Activity tabs are interactive and stable.

 Details / Financials / Legal tabs are populated (or graceful empty states), with ledger virtualization and charts.

 A11y + performance polish complete; Playwright tests pass.

 Provide screenshots for each entity and a short note on any KPIs still placeholdered.

When Replit posts back the screenshots + notes for each phase, share them here and I’ll do a fast pass to spot any gaps and issue a micro-prompt to close them.