PLAN
Operating Mode: Consistency Enforcer, Infra Wrangler
Files to Touch:
- `src/features/owners/pages/OwnerTransferPage.tsx`
- `src/features/owners/pages/OwnerTransferDetailPage.tsx`
- `src/features/ownerTransfer/hooks/useOwnerTransfer.ts`
- `src/features/ownerTransfer/components/TransferDryRun.tsx`
- `src/features/ownerTransfer/components/TransferPreflightCheck.tsx`
- `src/features/ownerTransfer/components/TransferStepper.tsx` (for deletion)
Guardrails:
- The goal is to unify the Owner Transfer feature by integrating the best components into the existing, functional pages.
- Standardize all data fetching to use the `useOwnerTransfer` hook.
- Standardize all styling to use the modern Tailwind CSS classes.
- The end-to-end user flow must remain functional.

CHANGESET
- **1. Delete Duplicate Components:**
  - Delete the orphaned modal-based stepper file to eliminate the largest piece of conflicting code: `src/features/ownerTransfer/components/TransferStepper.tsx`.

- **2. Unify Data Fetching with the Hook:**
  - Modify the active pages (`OwnerTransferPage.tsx` and `OwnerTransferDetailPage.tsx`).
  - Remove all direct `fetch("/api/owner-transfer/...")` calls.
  - Import and use the `useOwnerTransfer` hook for all data operations (e.g., `initiateTransfer`, `approveTransfer`). This will centralize logic and improve validation.

- **3. Integrate the Sophisticated UI Components:**
  - Modify the `OwnerTransferDetailPage.tsx` page.
  - In the appropriate section (likely near the final approval buttons), import and render the `<TransferPreflightCheck />` and `<TransferDryRun />` components.
  - Wire them up to the data provided by the `useOwnerTransfer` hook so they display a real-time preview of the transfer before execution.

- **4. Standardize Styling:**
  - Inspect the newly integrated `TransferPreflightCheck` and `TransferDryRun` components.
  - Remove any legacy CSS class names (e.g., `ecc-modal`, `ecc-input`).
  - Replace them with the modern Tailwind classes (e.g., `bg-neutral-900`, `border-neutral-800`) to ensure a consistent look and feel with the rest of the page.

VERIFICATION CHECKLIST
- The duplicate `TransferStepper.tsx` file has been successfully deleted from the codebase.
- The primary pages (`OwnerTransferPage.tsx`, `OwnerTransferDetailPage.tsx`) no longer use direct `fetch` calls and now exclusively use the `useOwnerTransfer` hook.
- The `TransferPreflightCheck` and `TransferDryRun` components are now visible and functional within the owner transfer detail page.
- All components within the feature now use a consistent set of Tailwind CSS classes for styling.
- The double scrollbar issue on the owner page is resolved.
- The complete owner transfer process, from initiation to final approval, is fully functional.