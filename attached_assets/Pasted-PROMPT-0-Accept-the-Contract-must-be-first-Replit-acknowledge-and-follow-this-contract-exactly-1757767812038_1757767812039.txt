PROMPT 0 — Accept the Contract (must be first)

Replit, acknowledge and follow this contract exactly.

Do not install libraries.

Do not introduce Tailwind, CSS Modules, or styled-components.

Do not move/rename style files.

Do not alter router or page structure except where explicitly instructed in later prompts.
Respond “ACK: Contract loaded.”

PROMPT 1 — Canonical Style File Layout (create/verify only these files)

Do not create any other global CSS files. Do not inline large style blocks into pages.

src/styles/theme.css             # brand tokens, base resets, animations
src/styles/card-enhancer.css     # object surface & panel styling


If other global style files exist, leave them but do not edit them unless this contract explicitly says so.

Page/layout CSS must stay inside each page/component file or an adjacent small .css (scoped selectors only).

Respond “ACK: Files present” and list any missing ones you created.

PROMPT 2 — Single Source of Truth: Brand & Theme Tokens

Open src/styles/theme.css and ensure the block below exists ONCE. If tokens already exist, merge keys without removing existing ones. Do not duplicate.

/* ===== ECC_STYLE_CONTRACT::THEME_TOKENS (DO NOT REMOVE) ===== */
:root{
  /* Brand (Altus) */
  --altus-black: #0B0E12;
  --altus-gold:  #FFD700;   /* primary accent */
  --altus-green: #10B981;   /* positive */
  --altus-red:   #EF4444;   /* negative */
  /* Absolutely NO orange anywhere. */

  /* Text */
  --text-strong:  #E9EDF4;
  --text-normal:  #C2C7D0;
  --text-muted:   #8C93A1;

  /* Surfaces */
  --surface-app:     #0F141B;
  --surface-panel:   #161C24;   /* background behind cards */
  --surface-object:  #2A2F38;   /* light-grey inner box per design contract */
  --surface-border:  rgba(255,255,255,0.06);

  /* Radius/Spacing */
  --radius-lg: 16px;
  --pad-lg:    16px;

  /* Motion */
  --ease-std: cubic-bezier(.2,.8,.2,1);
}

html, body {
  background: var(--surface-app);
  color: var(--text-normal);
}

/* Skeleton shimmer (shared) */
@keyframes ecc-shimmer {
  0% { background-position: 0% 0; }
  100% { background-position: 200% 0; }
}
/* ===== END THEME_TOKENS ===== */


Respond “ACK: Theme tokens verified/updated.”

PROMPT 3 — Object Surface & Panel Styling (applies without changing markup)

Overwrite src/styles/card-enhancer.css with the exact block below.
This enforces the light-grey inner surface and header rail everywhere, even if legacy classes are used.

/* ===== ECC_STYLE_CONTRACT::OBJECT_SURFACE (DO NOT REMOVE) ===== */
:root{
  --ecc-object-bg:     var(--surface-object);
  --ecc-object-border: var(--surface-border);
  --ecc-object-radius: var(--radius-lg);
  --ecc-object-pad:    var(--pad-lg);
}

/* Attach surface to all our card-like containers */
:where(.ecc-object,.section,.panel,.card,.module,.box,.detail-panel){
  background: var(--ecc-object-bg) !important;
  border: 1px solid var(--ecc-object-border) !important;
  border-radius: var(--ecc-object-radius) !important;
  padding: var(--ecc-object-pad) !important;
  color: var(--text-normal);
}

/* Standard header region inside cards (title + actions) */
:where(.ecc-object) .ecc-header{
  display:flex; align-items:center; justify-content:space-between;
  gap:12px; margin-bottom:12px;
}

/* Utility: muted label text */
.ecc-label { opacity:.75; font-size:12px; }

/* ===== END OBJECT_SURFACE ===== */


Respond “ACK: Object surface enforced.”

PROMPT 4 — Import Order Lock (so styles actually take effect)

Open src/main.tsx (or your app entry) and ensure these two imports exist ONCE at top-level and after any CSS reset.
If duplicates exist, delete the duplicates.

import "./styles/theme.css";
import "./styles/card-enhancer.css";


Respond “ACK: Import order locked.”

PROMPT 5 — Allowed CSS Usage (rules Replit must follow)

From now on, abide by these rules. Confirm each item with “ACK”.

Global tokens live only in theme.css.

You may add new CSS variables there if needed.

You may NOT redefine brand colors elsewhere.

Object surface lives only in card-enhancer.css.

Do not add competing global backgrounds in other files.

Use the .ecc-object class or existing .section/.panel/.card to pick up styling.

No new design systems.

Do not add Tailwind, CSS Modules, styled-components, MUI theme overrides, or global resets.

No hidden overlays.

Any position: fixed overlay must render conditionally (mounted only when open).

Avoid z-index above 1000 unless it’s a modal; never mount modals by default.

No orange.

Brand accents limited to --altus-gold, --altus-green, --altus-red.

Typography & spacing.

Use existing font; do not import new fonts.

Prefer grid/flex; avoid absolute positioning for structure.

Respond “ACK: CSS rules accepted.”

PROMPT 6 — Component Contract (how to build/modify panels)

When editing any page or component, follow this exact pattern—do not redesign.

Header/Section pattern (reference only; do not create a new Section if one already exists):

<section className="ecc-object">
  <div className="ecc-header">
    <div className="ecc-title">Title</div>
    <div className="ecc-actions">
      <button>Edit</button>
    </div>
  </div>
  {/* content */}
</section>


Field rows:

<div style={{ display: "grid", gap: 8 }}>
  <div style={{ display: "grid", gridTemplateColumns: "160px 1fr", gap: 8 }}>
    <div className="ecc-label">Label</div>
    <div>Value</div>
  </div>
</div>


KPIs (tiles):

<div style={{ display:"grid", gridTemplateColumns:"repeat(4, minmax(0,1fr))", gap:12 }}>
  <div className="ecc-object" style={{ padding:12 }}>
    <div className="ecc-label">Units</div>
    <div style={{ fontSize:20, fontWeight:700 }}>42</div>
  </div>
  <!-- repeat -->
</div>


Respond “ACK: Component contract understood.”

PROMPT 7 — Guard Rails: What Replit must NOT do

Confirm each with “ACK”.

Do not replace Wouter with another router.

Do not re-route /card/* to experimental pages. Only use live pages under src/pages/card/*.

Do not add Suspense/lazy around the five card routes unless explicitly instructed.

Do not remove or rename .ecc-object, .section, .panel, .card.

Do not add global body { background: ... } that overrides --surface-app.

Do not add theme code anywhere except theme.css and card-enhancer.css.

PROMPT 8 — Compliance Pass (auto-fix any drift)

Do the following surgical checks and fix violations:

Search repo for import "./styles/theme.css" and import "./styles/card-enhancer.css" → ensure exactly one import each in the app entry file.

Search for position: fixed or z-index: over 1000 in global-level components → ensure those components mount only when open.

Search for orange or #FFA, #FF8, #F90 variants → replace with approved tokens or remove.

Search for any :root { ... } definitions outside theme.css → move tokens into theme.css.

Ensure all card sections on /card/property/:id, /card/unit/:id, /card/lease/:id, /card/tenant/:id, /card/owner/:id have .ecc-object or .section/.panel/.card.

Report back with a short summary: files changed, lines updated. Respond “ACK: Compliance pass complete.”

PROMPT 9 — Visual Smoke (no placeholders)

Run dev server and visually verify on live data:

/card/property/:id shows the light-grey interior on all panels.

Right rail widgets and tab panels inherit .ecc-object.

No overlay is covering the card.
If any violation remains, fix it without altering routes or adding placeholders.

Respond “ACK: Visual smoke passed / or list exact files needing micro-fix.”

PROMPT 10 — Future Edits Checklist (repeat every time)

Before making any style or UI change, Replit must do this checklist:

 Are we editing only theme.css (tokens) or card-enhancer.css (surface/panels) for global changes?

 Are we keeping page code intact and just applying .ecc-object where needed?

 Did we avoid new libraries and global resets?

 Did we keep routes on src/pages/card/* only?

 Did we validate no orange and no rogue overlays?

Respond “ACK: Future edits checklist stored.”

Why this works

Two files, one import order = predictable CSS precedence.

:where(...) + !important ensures your light-grey object surface wins over older rules without needing markup churn.

Explicit do/don’t rules keep Replit from re-theming or re-routing the app.

Compliance pass catches the usual “nothing shows” culprits (wrong imports, overlays, rogue colors).

If you want, I can also drop a tiny audit script that logs a console warning if a card page renders without any .ecc-object section detected—say the word: “Add ECC surface sentinel.”