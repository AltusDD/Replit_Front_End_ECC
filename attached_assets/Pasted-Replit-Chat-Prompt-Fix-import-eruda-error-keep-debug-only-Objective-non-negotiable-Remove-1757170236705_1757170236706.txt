Replit Chat Prompt — Fix “import eruda” error (keep debug-only)

Objective (non-negotiable):

Remove all module imports of eruda so Vite doesn’t try to resolve it.

Keep dev-only, opt-in debug via ?eruda without adding any npm deps.

No mock data changes. No style drift.

1) Replace the eruda code in src/main.tsx

Open src/main.tsx and delete any import('eruda') or import eruda from 'eruda' usage. Insert this guarded CDN loader below our global CSS import:

// src/main.tsx
import "./styles/app.css";

/**
 * Dev-only, opt-in mobile console:
 * Load Eruda from CDN only when URL includes ?eruda.
 * No bundler import => Vite won't try to resolve a package.
 */
if (import.meta.env.DEV && window.location.search.includes("eruda")) {
  const script = document.createElement("script");
  script.src = "https://cdn.jsdelivr.net/npm/eruda@3.2.3/eruda.min.js";
  script.async = true;
  script.onload = () => {
    // @ts-expect-error (eruda is injected on window)
    if (window.eruda && typeof window.eruda.init === "function") {
      // @ts-expect-error
      window.eruda.init();
    }
  };
  document.head.appendChild(script);
}

2) Add a tiny type shim so TS is happy

Create src/types/global.d.ts (or update it if it exists):

// src/types/global.d.ts
export {};

declare global {
  interface Window {
    eruda?: { init: () => void };
  }
}


Make sure tsconfig.json includes "src/types" in "include".

3) Sanity sweep

Search the project for eruda and ensure there are no remaining ESM imports of it.

Do not add eruda to dependencies. We want zero build impact.

4) Verify & accept

Start dev server. The import-analysis error must be gone.

Open /dashboard normally → no errors, no eruda.

Open /dashboard?eruda → eruda console appears; still no Vite or DOM exceptions.

StrictMode/Abort fixes from earlier remain intact; no “AbortError” spam.

Commit message:

chore(devtools): gate eruda via CDN script (no bundler import); remove failing dynamic import; add global type shim


If you’d rather keep Eruda as a devDependency instead of the CDN loader, install it and keep the gated dynamic import:

npm i -D eruda@3.2.3


Then revert to:

if (import.meta.env.DEV && location.search.includes("eruda")) {
  // @vite-ignore is optional but harmless here
  import(/* @vite-ignore */ "eruda").then(m => m.default.init()).catch(() => {});
}


…but the CDN approach above is lighter and guarantees Vite won’t try to resolve a missing package.