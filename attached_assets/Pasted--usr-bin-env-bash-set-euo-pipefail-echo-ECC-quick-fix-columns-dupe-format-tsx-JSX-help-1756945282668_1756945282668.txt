#!/usr/bin/env bash
set -euo pipefail

echo "==> ECC quick-fix: columns dupe, format.tsx JSX helpers, KPI CSS, cache reset"

# 0) Sanity: run from repo root
if [[ ! -d src ]]; then
  echo "!! Can't find src/. Run this from your project root." >&2
  exit 1
fi

# 1) Kill duplicate columns.ts if columns.tsx exists
if [[ -f src/pages/portfolio/columns.tsx && -f src/pages/portfolio/columns.ts ]]; then
  echo "-- Removing duplicate src/pages/portfolio/columns.ts (keeping .tsx)"
  cp src/pages/portfolio/columns.ts src/pages/portfolio/columns.ts.bak.$(date +%s) || true
  rm -f src/pages/portfolio/columns.ts
else
  echo "-- No duplicate columns.ts found (good)."
fi

# 2) Ensure utils/format is .tsx and contains JSX-safe helpers
mkdir -p src/utils
if [[ -f src/utils/format.ts && ! -f src/utils/format.tsx ]]; then
  echo "-- Renaming src/utils/format.ts -> src/utils/format.tsx"
  mv -f src/utils/format.ts src/utils/format.tsx
fi

echo "-- Writing src/utils/format.tsx"
cat > src/utils/format.tsx <<'TSX'
// src/utils/format.tsx
import * as React from "react";

export function money(n?: number | null): string {
  if (n == null || Number.isNaN(n)) return "—";
  const sign = n < 0 ? "-" : "";
  const abs = Math.abs(n);
  return `${sign}$${abs.toLocaleString(undefined, {
    minimumFractionDigits: 2,
    maximumFractionDigits: 2,
  })}`;
}

export function percent(n?: number | null, digits = 1): string {
  if (n == null || Number.isNaN(n)) return "—";
  return `${Number(n).toFixed(digits)}%`;
}

export function shortDate(s?: string | null): string {
  if (!s) return "—";
  const d = new Date(s);
  if (isNaN(d.getTime())) return "—";
  return d.toISOString().slice(0, 10); // YYYY-MM-DD
}

/** Small colored badge. kind: ok | warn | bad | muted */
export function badge(text: string, kind: "ok" | "warn" | "bad" | "muted" = "muted") {
  const cls =
    kind === "ok"
      ? "ecc-badge ecc-badge--ok"
      : kind === "warn"
      ? "ecc-badge ecc-badge--warn"
      : kind === "bad"
      ? "ecc-badge ecc-badge--bad"
      : "ecc-badge";
  return <span className={cls}>{text}</span>;
}

/** True/false pill with your badge styling */
export function boolText(value: unknown, truthy = "true", falsy = "false") {
  const isTrue = !!value;
  const cls = isTrue ? "ecc-badge ecc-badge--ok" : "ecc-badge ecc-badge--bad";
  return <span className={cls}>{isTrue ? truthy : falsy}</span>;
}
TSX

# 3) Add KPI strip + Genesis zebra banding + badge styles to table.css (idempotent)
mkdir -p src/styles
touch src/styles/table.css
if ! grep -q 'GENESIS THEME: KPI & table helpers' src/styles/table.css; then
  echo "-- Appending Genesis KPI + zebra styles to src/styles/table.css"
  cat >> src/styles/table.css <<'CSS'
/* GENESIS THEME: KPI & table helpers */
:root{
  /* Use your existing theme tokens if defined; these fallbacks keep it readable */
  --ecc-bg-0: var(--surface-0, #0b0b0b);
  --ecc-bg-1: var(--surface-1, #111111);
  --ecc-bg-2: var(--surface-2, #161616);
  --ecc-ink-1: var(--ink-1, #e6e6e6);
  --ecc-ink-2: var(--ink-2, #c7c7c7);
  --ecc-ink-3: var(--ink-3, #9aa0a6);
  --ecc-line-1: var(--line-1, #2a2a2a);
}

.ecc-table { width: 100%; border-collapse: separate; border-spacing: 0; }
.ecc-table thead th { position: sticky; top: 0; background: var(--ecc-bg-0); z-index: 1; }

/* Zebra banding (Genesis black/grey) */
.ecc-table tbody tr:nth-child(odd){ background: var(--ecc-bg-1); }
.ecc-table tbody tr:nth-child(even){ background: var(--ecc-bg-2); }

/* Row hover */
.ecc-table tbody tr:hover { background: color-mix(in srgb, var(--ecc-bg-2), white 2%); }

/* Pills / badges */
.ecc-badge{
  display:inline-block; padding:2px 8px; border-radius:999px;
  font-size:12px; line-height:18px; background:var(--ecc-line-1); color:var(--ecc-ink-1);
}
.ecc-badge--ok   { background: color-mix(in srgb, #1e7f37, black 20%); }
.ecc-badge--bad  { background: color-mix(in srgb, #b3261e, black 25%); }
.ecc-badge--warn { background: color-mix(in srgb, #e5a500, black 40%); }

/* KPI strip */
.ecc-kpis { display:grid; grid-template-columns:repeat(4,minmax(0,1fr)); gap:12px; margin-bottom:10px; }
.ecc-kpi  { background: var(--ecc-bg-1); border:1px solid var(--ecc-line-1); border-radius:12px; padding:12px; }
.ecc-kpi-n{ font-weight:700; font-size:20px; color:var(--ecc-ink-1); }
.ecc-kpi-l{ font-size:12px; color:var(--ecc-ink-3); }
CSS
else
  echo "-- KPI + zebra styles already present (skipping)."
fi

# 4) Light check for SUPABASE_URL type
if env | grep -q '^SUPABASE_URL=postgresql://'; then
  echo "!! WARNING: Your SUPABASE_URL looks like a postgres:// connection string."
  echo "   The server expects the REST URL like: https://<project-ref>.supabase.co"
  echo "   Update it in Replit -> Secrets to avoid backend 500s."
fi

# 5) Clear Vite caches (prevents stubborn HMR issues)
echo "-- Clearing Vite cache"
rm -rf node_modules/.vite .vite 2>/dev/null || true

echo "==> Done."
echo "Next: restart dev server"
echo "     pnpm install --silent && pnpm dev"
