ECC Audit-Only Task — Owner Transfer, Asset Cards, Health Nav

Mode: Audit-only.
Do not modify files, install packages, or run dev server.
Return: A single structured report with code excerpts.

Objectives

Diagnose why Owner Transfer is mock-only and not wired (buttons/inputs inert).

Diagnose Asset Cards “Failed to load property”.

Diagnose why Systems › Integrations › Health doesn’t show in navigation.

Repo Standards (for reference, do NOT edit)

Feature-first layout, nav SSOT at src/config/navigation.ts, routes at src/routes/index.tsx.

Enhancers must be listed in src/boot/mountEnhancer.tsx.

Use audit flow from ECC_Replit_Full_Audit_Guide.

Please run these read-only checks and compile a report

Use shell commands below; do not write/commit files. Include excerpts (first/last 30 lines where helpful).

A) Owner Transfer UI — wiring vs mock

Files & imports present

rg -n "OwnerTransfer" src | sort
rg -n "/owners/transfer" src/routes/index.tsx src/config/navigation.ts || true


Feature-flag gate present?

rg -n "config/integrations|transfer" -S src/features src/routes || true


Buttons → API endpoints (and method/payload)

rg -n "initiateTransfer|approveTransfer|authorize|executeTransfer" -S src/features/owners -g '!**/*.map' || true


Mock data present

rg -n "dummy|mock|TODO|// TODO|hardcode" -S src/features/owners src/lib src/server || true


Admin token gating

rg -n "ADMIN_SYNC_TOKEN|VITE_ADMIN_SYNC_TOKEN" -S src || true


Summarize: Which calls are wired? Which are placeholders? What props/state block actual submission?

B) Asset Cards — “Failed to load property”

Property enhancer(s) exist & mounted

rg -n "Property.*Enhancer|PropertyCard|useProperty" -S src/features || true
rg -n "mountEnhancer|register.*Enhancer" -S src/boot || true


Route & fetch paths

rg -n "/card/property|/api/property|useProperty" -S src || true
rg -n "VITE_API_BASE_URL|fetch\(|axios\(" -S src/features/property src/lib || true


Exact error origin

rg -n "Failed to load property" -S src || true


Path alias sanity

jq '.compilerOptions.paths' tsconfig.json 2>/dev/null || cat tsconfig.json


Summarize: Is the enhancer unmounted, the route missing, or the fetch/alias broken? Quote the failing line(s) and inferred cause.

C) Systems › Integrations › Health — nav + routes

Page files present

rg -n "IntegrationsHealthPage|Live Logs|DLQPanel" -S src/features/systems/integrations || true


Route registration present

rg -n "/systems/integrations" -S src/routes/index.tsx || true


Nav SSOT item present

sed -n '1,240p' src/config/navigation.ts | nl | sed -n '1,240p' | rg -n "Integrations|Health|systems|/systems/integrations" -n || true


Feature-flag gating

rg -n "config/integrations|features" -S src/features/systems/integrations || true


Summarize: Why no nav item? (Missing SSOT entry, name mismatch, feature flag false, or group collapsed.) Cite the exact lines.

D) Data layer sanity (non-destructive)

React Query provider mounted

rg -n "QueryClientProvider" src/main.tsx || true


Package presence only (no install)

jq '.dependencies["@tanstack/react-query"], .dependencies["wouter"]' package.json 2>/dev/null


API base usage

rg -n "VITE_API_BASE_URL" -S src || true


Summarize: If provider missing or wrong import path, call it out (do NOT fix).

E) Produce a single report

Return one markdown report with these sections:

Owner Transfer (UI wiring) — Findings & blockers

Files found, endpoints referenced, any mocks, missing feature-flag or admin token gates.

Asset Cards (Property) — Findings & root cause

Enhancer mount, route presence, failing fetch/alias with code excerpt.

Integrations Health — Nav/Route audit

SSOT nav item present/missing, route present/missing, gating flags.

Data Layer — Provider & deps check

Query provider present, deps present, API base usage.

Top 5 Fixes (do not implement)

List the 5 minimal, surgical changes we should apply next (file + line refs).

Keep this audit-only. Don’t create/modify/commit any files. Cite exact file paths and line numbers in your report.