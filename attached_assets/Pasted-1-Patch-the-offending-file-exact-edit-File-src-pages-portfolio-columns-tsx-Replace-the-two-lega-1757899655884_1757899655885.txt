1) Patch the offending file (exact edit)

File: src/pages/portfolio/columns.tsx
Replace the two legacy imports at the top with CardKit:

- import ProgressBar from "../../features/portfolio/components/ProgressBar";
- import StatusTag from "../../features/portfolio/components/StatusTag";
+ import ProgressBar from "@/components/cardkit/ProgressBar";
+ import StatusTag from "@/components/cardkit/StatusTag";


Nothing else in the file changes. Names (ProgressBar, StatusTag) stay the same; only the import paths switch to CardKit.

2) Make the guardrail catch this forever (repo-wide, not just cards)

File: scripts/guardrail-check.mjs — append this simple, repo-wide detector (it flags any use of features/portfolio/components anywhere):

// --- Repo-wide legacy import ban (alias or relative) ---
import fs from "fs"; import path from "path"; import glob from "glob";
let legacyFailures = 0;
for (const rel of glob.sync("src/**/*.{ts,tsx,js,jsx}", { cwd: process.cwd() })) {
  const s = fs.readFileSync(path.join(process.cwd(), rel), "utf8");
  if (s.includes("features/portfolio/components/") || s.includes("@/features/portfolio/components")) {
    console.error("[guardrail] forbidden legacy import in", rel);
    legacyFailures++;
  }
}
if (legacyFailures) process.exit(1);


Run:

npm run guardrail


It should FAIL before the columns.tsx import fix, and PASS after you fix it.

3) Clean out Vite’s caches and restart

(You’ve still got HMR bundles referencing the deleted path. Blow them away.)

rm -rf node_modules/.vite .vite dist .cache .parcel-cache 2>/dev/null || true

# Optional: silence Vite warning — remove `optimizeDeps: { disabled: ... }` from vite.config.*
# Open vite.config.* and delete that block if present.

npm ci
npm run guardrail
npm run dev


You should now see:

Guardrail: PASS

Vite: no “Failed to resolve …/features/portfolio/components/ProgressBar”

API: up on :8787; UI on :5173

4) Quick runtime checks

Open http://localhost:5173/portfolio/properties → table renders, any progress/status cells show CardKit components (Altus gold bar, status pill).

Open http://localhost:5173/card/property/<real-id> → hero KPIs render, no console errors.

The [auto-sync] Unexpected token '<' messages are from a background sync hitting an HTML page; not a blocker for UI. Cards/tables will render once the import error is gone.

If anything else throws features/portfolio/components in the logs, it’s another lingering import. Change it to @/components/cardkit/<Component> exactly like above; the updated guardrail will catch every instance