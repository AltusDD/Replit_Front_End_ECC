WP4 MASTER PROMPT — Clone Architecture to Unit/Lease/Tenant/Owner

Goal: Implement Unit, Lease, Tenant, Owner card pages to the same standard structure as Property, using one-hook resolvers and a 7-tab shell. No overlays/Suspense; map only on Property.

Do NOT change workflows, package.json, or ops files. Code only.

0) Library: Consolidate card resolvers (DTO-first + /api/entities fallback)

Create/overwrite src/lib/ecc-card-queries.ts with exactly:

// src/lib/ecc-card-queries.ts
import { useQuery } from '@tanstack/react-query';

async function j<T = any>(u: string): Promise<T> {
  const r = await fetch(u, { credentials: 'include' });
  if (!r.ok) throw new Error(`${r.status} ${r.statusText}`);
  return r.json();
}

// ---------- PROPERTY ----------
export function usePropertyCard(id: string | number) {
  return useQuery({
    queryKey: ['property-card', id],
    queryFn: async () => {
      try {
        return await j(`/api/rpc/get_property_card?id=${id}`);
      } catch {
        const property = await j(`/api/entities/properties/${id}`);
        const units = property?.doorloop_id
          ? await j(`/api/entities/units?doorloop_property_id=eq.${property.doorloop_id}`)
          : [];
        const leases = property?.id != null
          ? await j(`/api/entities/leases?property_id=eq.${property.id}`)
          : [];
        // owner may not be modeled; use null if absent
        let owner = null;
        try {
          if (property?.owner_id != null) owner = await j(`/api/entities/owners/${property.owner_id}`);
        } catch {}
        return { property, units, leases, owner };
      }
    },
    staleTime: 60_000,
  });
}

// ---------- UNIT ----------
export function useUnitCard(id: string | number) {
  return useQuery({
    queryKey: ['unit-card', id],
    queryFn: async () => {
      try {
        return await j(`/api/rpc/get_unit_card?id=${id}`);
      } catch {
        const unit = await j(`/api/entities/units/${id}`);
        const property = unit?.doorloop_property_id
          ? (await j(`/api/entities/properties?doorloop_id=eq.${unit.doorloop_property_id}`))?.[0] ?? null
          : null;
        const leases = unit?.id != null
          ? await j(`/api/entities/leases?unit_id=eq.${unit.id}`)
          : [];
        const activeLease = Array.isArray(leases)
          ? leases.find((l: any) => String(l?.status ?? '').toLowerCase() === 'active') ?? null
          : null;
        const tenant = activeLease?.primary_tenant_id
          ? await j(`/api/entities/tenants/${activeLease.primary_tenant_id}`)
          : null;
        return { unit, property, activeLease, tenant };
      }
    },
    staleTime: 60_000,
  });
}

// ---------- LEASE ----------
export function useLeaseCard(id: string | number) {
  return useQuery({
    queryKey: ['lease-card', id],
    queryFn: async () => {
      try {
        return await j(`/api/rpc/get_lease_card?id=${id}`);
      } catch {
        const lease = await j(`/api/entities/leases/${id}`);
        const property = lease?.property_id != null
          ? await j(`/api/entities/properties/${lease.property_id}`)
          : null;
        const unit = lease?.unit_id != null
          ? await j(`/api/entities/units/${lease.unit_id}`)
          : null;
        const tenant = lease?.primary_tenant_id != null
          ? await j(`/api/entities/tenants/${lease.primary_tenant_id}`)
          : null;
        return { lease, property, unit, tenant };
      }
    },
    staleTime: 60_000,
  });
}

// ---------- TENANT ----------
export function useTenantCard(id: string | number) {
  return useQuery({
    queryKey: ['tenant-card', id],
    queryFn: async () => {
      try {
        return await j(`/api/rpc/get_tenant_card?id=${id}`);
      } catch {
        const tenant = await j(`/api/entities/tenants/${id}`);
        const leases = tenant?.id != null
          ? await j(`/api/entities/leases?primary_tenant_id=eq.${tenant.id}`)
          : [];
        const activeLease = Array.isArray(leases)
          ? leases.find((l: any) => String(l?.status ?? '').toLowerCase() === 'active') ?? null
          : null;
        return { tenant, leases, activeLease };
      }
    },
    staleTime: 60_000,
  });
}

// ---------- OWNER ----------
export function useOwnerCard(id: string | number) {
  return useQuery({
    queryKey: ['owner-card', id],
    queryFn: async () => {
      try {
        return await j(`/api/rpc/get_owner_card?id=${id}`);
      } catch {
        const owner = await j(`/api/entities/owners/${id}`);
        const properties = owner?.id != null
          ? await j(`/api/entities/properties?owner_id=eq.${owner.id}`)
          : [];
        // units optional until modeled
        return { owner, properties, units: [] };
      }
    },
    staleTime: 60_000,
  });
}


DoD (step 0): npx tsc -p tsconfig.cards.json must be clean (cards only).

1) UNIT CARD
1.1 HeroBlock
// src/pages/card/unit/HeroBlock.tsx
import React from 'react';
import Section from '@/components/Section';
import { KPI, KPIRow } from '@/features/portfolio/components/KPI';
import ActionButton from '@/features/portfolio/components/ActionButton';
import { fmtMoneyCents } from '@/lib/format';

export default function HeroBlock({ unit, activeLease }:{ unit?: any|null; activeLease?: any|null }) {
  const title = unit?.unit_number ? `Unit ${unit.unit_number}` : (unit?.id ? `Unit #${unit.id}` : 'Unit');
  const hasActive = String(activeLease?.status ?? '').toLowerCase() === 'active';
  const money = (c?: number|null) => (c!=null ? (fmtMoneyCents?fmtMoneyCents(c):`$${(c/100).toFixed(0)}`) : '—');

  return (
    <Section title={title} actions={
      <div className="flex gap-2">
        <ActionButton label="Edit" icon="✏️" variant="secondary" />
        <ActionButton label="Export PDF" icon="📄" variant="ghost" />
        <ActionButton label="Send Notice" icon="📨" comingSoon />
      </div>
    }>
      <KPIRow>
        <KPI label="Status" value={unit?.status ?? '—'} />
        <KPI label="Beds/Baths" value={[unit?.beds ?? '—', unit?.baths ?? '—'].join(' / ')} />
        <KPI label="Market Rent" value={money(unit?.rent_cents)} />
        <KPI label="Active Lease" value={hasActive ? 'Yes' : 'No'} />
      </KPIRow>
    </Section>
  );
}

1.2 RightRail
// src/pages/card/unit/RightRail.tsx
import React from 'react';
import Section from '@/components/Section';
import MiniCard from '@/features/portfolio/components/MiniCard';

export default function RightRail({ property }:{ property?: any|null }) {
  return (
    <div className="space-y-3">
      <Section title="Parent Property">
        {property ? (
          <MiniCard
            title={property.display_name || property.street_1 || `Property #${property.id}`}
            subtitle={[property.city, property.state].filter(Boolean).join(', ') || undefined}
            href={`/card/property/${property.id}`}
          />
        ) : <div className="opacity-70 text-sm">No property linked.</div>}
      </Section>

      <Section title="Maintenance">
        <div className="text-sm opacity-70">Filter changes, inspections (placeholder).</div>
      </Section>

      <Section title="Pinned Files">
        <ul className="text-sm list-disc pl-5">
          <li>Floor plan.pdf</li>
          <li>Photos.zip</li>
        </ul>
      </Section>
    </div>
  );
}

1.3 Tabs + Panels
// src/pages/card/unit/Tabs.tsx
import React from 'react';
export type UnitTabKey = 'overview'|'details'|'financials'|'legal'|'files'|'linked'|'activity';
export interface TabDef { key: UnitTabKey; label: string; content: React.ReactNode; }
export default function UnitTabs({tabs, defaultKey='overview'}:{tabs:TabDef[];defaultKey?:UnitTabKey;}){
  const [active,setActive]=React.useState<UnitTabKey>(defaultKey);
  return (
    <div className="ecc-object">
      <nav className="flex gap-2 mb-3">
        {tabs.map(t=>(
          <button key={t.key} className={`px-3 py-1.5 rounded ${active===t.key?'bg-white/10':'hover:bg-white/5'}`} onClick={()=>setActive(t.key)}>
            {t.label}
          </button>
        ))}
      </nav>
      <div>{tabs.find(t=>t.key===active)?.content}</div>
    </div>
  );
}

// src/pages/card/unit/Overview.tsx
import React from 'react';
import { FieldRows } from '@/features/portfolio/components/FieldRows';
export default function Overview({ unit, property }:{ unit?: any|null; property?: any|null }) {
  const rows = [
    { label:'Property', value: property?.display_name || property?.street_1 || '—', href: property?`/card/property/${property.id}`:undefined },
    { label:'Unit Number', value: unit?.unit_number ?? '—' },
    { label:'Beds', value: unit?.beds ?? '—' },
    { label:'Baths', value: unit?.baths ?? '—' },
    { label:'Sqft', value: unit?.sqft ?? '—' },
    { label:'Market Rent', value: unit?.rent_cents!=null? `$${Math.round(unit.rent_cents/100)}`:'—' },
    { label:'Status', value: unit?.status ?? '—' },
  ];
  return <FieldRows rows={rows} columns={2} />;
}

// src/pages/card/unit/Details.tsx
import React from 'react';
import { FieldRows } from '@/features/portfolio/components/FieldRows';
export default function Details({ fields }:{ fields?: {label:string; value:any}[] }) {
  return <FieldRows rows={fields ?? []} columns={2} />;
}

// src/pages/card/unit/Financials.tsx
import React from 'react';
import Section from '@/components/Section';
export default function Financials(){
  return (
    <div className="space-y-3">
      <Section title="Unit Ledger"><div className="text-sm opacity-70">Placeholder.</div></Section>
    </div>
  );
}

// src/pages/card/unit/Legal.tsx
import React from 'react';
import Section from '@/components/Section';
export default function Legal(){
  return (
    <div className="space-y-3">
      <Section title="Compliance"><div className="text-sm opacity-70">Placeholder.</div></Section>
    </div>
  );
}

// src/pages/card/unit/Files.tsx
import React from 'react';
import Section from '@/components/Section';
export default function Files(){
  return (
    <div className="space-y-3">
      <Section title="Files"><div className="text-sm opacity-70">Dropbox/DoorLoop (placeholder).</div></Section>
    </div>
  );
}

// src/pages/card/unit/Linked.tsx
import React from 'react';
import MiniCard from '@/features/portfolio/components/MiniCard';
export default function Linked({ activeLease, tenant }:{ activeLease?: any|null; tenant?: any|null }) {
  return (
    <div className="grid gap-3">
      <MiniCard title={activeLease ? `Lease ${activeLease.doorloop_id ?? activeLease.id}` : 'No lease'} href={activeLease?`/card/lease/${activeLease.id}`:undefined}/>
      <MiniCard title={tenant?.display_name ?? 'No tenant'} href={tenant?`/card/tenant/${tenant.id}`:undefined}/>
    </div>
  );
}

// src/pages/card/unit/Activity.tsx
import React from 'react';
import Section from '@/components/Section';
export default function Activity(){ return <Section title="Activity"><div className="text-sm opacity-70">No recent activity.</div></Section>; }

1.4 Page Assembly
// src/pages/card/unit/index.tsx
import React from 'react';
import { useParams } from 'wouter';
import Section from '@/components/Section';
import { useUnitCard } from '@/lib/ecc-card-queries';
import HeroBlock from './HeroBlock';
import UnitTabs, { TabDef } from './Tabs';
import Overview from './Overview';
import Details from './Details';
import Financials from './Financials';
import Legal from './Legal';
import Files from './Files';
import Linked from './Linked';
import Activity from './Activity';
import RightRail from './RightRail';

export default function UnitCardPage() {
  const { id } = useParams<{id:string}>();
  const { data, isLoading, error } = useUnitCard(id!);
  const unit = data?.unit ?? null;
  const property = data?.property ?? null;
  const activeLease = data?.activeLease ?? null;
  const tenant = data?.tenant ?? null;

  const tabs: TabDef[] = [
    { key:'overview', label:'Overview', content:<Overview unit={unit} property={property}/> },
    { key:'details', label:'Details', content:<Details fields={[{label:'Sqft',value:unit?.sqft??'—'},{label:'Status',value:unit?.status??'—'}]}/> },
    { key:'financials', label:'Financials', content:<Financials/> },
    { key:'legal', label:'Legal', content:<Legal/> },
    { key:'files', label:'Files', content:<Files/> },
    { key:'linked', label:'Linked', content:<Linked activeLease={activeLease} tenant={tenant}/> },
    { key:'activity', label:'Activity', content:<Activity/> },
  ];

  return (
    <div className="p-4 space-y-3">
      <HeroBlock unit={unit} activeLease={activeLease}/>
      {!unit && !isLoading && <Section title="Unit not found"><div className="opacity-70">Check the ID and try again.</div></Section>}
      <div className="grid grid-cols-1 lg:grid-cols-[1fr_320px] gap-3">
        <div className="space-y-3"><UnitTabs tabs={tabs}/></div>
        <div className="space-y-3"><RightRail property={property}/></div>
      </div>
    </div>
  );
}


DoD (Unit): Cards typecheck clean; navigate to /card/unit/{realId} → Hero KPIs, 7 tabs, RightRail (no map).

2) LEASE CARD

Create these files similarly (no map):

// src/pages/card/lease/HeroBlock.tsx
import React from 'react';
import Section from '@/components/Section';
import { KPI, KPIRow } from '@/features/portfolio/components/KPI';
import ActionButton from '@/features/portfolio/components/ActionButton';
import { fmtMoneyCents } from '@/lib/format';
export default function HeroBlock({ lease }:{ lease?: any|null }) {
  const term = [lease?.start_date, lease?.end_date].filter(Boolean).join(' – ') || '—';
  const rent = lease?.rent_cents!=null ? (fmtMoneyCents?fmtMoneyCents(lease.rent_cents):`$${(lease.rent_cents/100).toFixed(0)}`) : '—';
  return (
    <Section title={`Lease ${lease?.id ?? ''}`} actions={
      <div className="flex gap-2">
        <ActionButton label="Edit" icon="✏️" variant="secondary" />
        <ActionButton label="Export PDF" icon="📄" variant="ghost" />
        <ActionButton label="Send Notice" icon="📨" comingSoon />
      </div>
    }>
      <KPIRow>
        <KPI label="Status" value={lease?.status ?? '—'} />
        <KPI label="Term" value={term} />
        <KPI label="Rent" value={rent} />
        <KPI label="Balance" value="—" />
        <KPI label="Last Payment" value="—" />
      </KPIRow>
    </Section>
  );
}

// src/pages/card/lease/RightRail.tsx
import React from 'react';
import Section from '@/components/Section';
import MiniCard from '@/features/portfolio/components/MiniCard';
export default function RightRail({ tenant }:{ tenant?: any|null }) {
  return (
    <div className="space-y-3">
      <Section title="Primary Tenant">
        {tenant ? <MiniCard title={tenant.display_name || `Tenant #${tenant.id}`} href={`/card/tenant/${tenant.id}`}/> : <div className="opacity-70 text-sm">No tenant.</div>}
      </Section>
      <Section title="Key Dates"><div className="text-sm opacity-70">Renewal reminders (placeholder).</div></Section>
      <Section title="Pinned Files"><ul className="text-sm list-disc pl-5"><li>Lease.pdf</li></ul></Section>
    </div>
  );
}

// src/pages/card/lease/Tabs.tsx
import React from 'react';
export type LeaseTabKey = 'overview'|'details'|'financials'|'legal'|'files'|'linked'|'activity';
export interface TabDef { key: LeaseTabKey; label: string; content: React.ReactNode; }
export default function LeaseTabs({tabs, defaultKey='overview'}:{tabs:TabDef[];defaultKey?:LeaseTabKey;}){
  const [active,setActive]=React.useState<LeaseTabKey>(defaultKey);
  return (
    <div className="ecc-object">
      <nav className="flex gap-2 mb-3">{tabs.map(t=>
        <button key={t.key} className={`px-3 py-1.5 rounded ${active===t.key?'bg-white/10':'hover:bg-white/5'}`} onClick={()=>setActive(t.key)}>{t.label}</button>
      )}</nav>
      <div>{tabs.find(t=>t.key===active)?.content}</div>
    </div>
  );
}

// src/pages/card/lease/Overview.tsx
import React from 'react';
import { FieldRows } from '@/features/portfolio/components/FieldRows';
export default function Overview({ lease, property, unit, tenant }:{ lease?: any; property?: any; unit?: any; tenant?: any }) {
  const rows = [
    { label:'Property', value: property?.display_name || property?.street_1 || '—', href: property?`/card/property/${property.id}`:undefined },
    { label:'Unit', value: unit?.unit_number ?? unit?.id ?? '—', href: unit?`/card/unit/${unit.id}`:undefined },
    { label:'Primary Tenant', value: tenant?.display_name ?? '—', href: tenant?`/card/tenant/${tenant.id}`:undefined },
    { label:'Status', value: lease?.status ?? '—' },
    { label:'Start', value: lease?.start_date ?? '—' },
    { label:'End', value: lease?.end_date ?? '—' },
    { label:'Rent', value: lease?.rent_cents!=null? `$${Math.round(lease.rent_cents/100)}`:'—' },
  ];
  return <FieldRows rows={rows} columns={2} />;
}

// src/pages/card/lease/Details.tsx
import React from 'react'; import { FieldRows } from '@/features/portfolio/components/FieldRows';
export default function Details({ lease }:{ lease?: any }){ return <FieldRows rows={[{label:'DoorLoop ID',value:lease?.doorloop_id??'—'}]} columns={2}/>; }

// src/pages/card/lease/Financials.tsx
import React from 'react'; import Section from '@/components/Section';
export default function Financials(){ return <Section title="Ledger"><div className="text-sm opacity-70">Placeholder.</div></Section>; }

// src/pages/card/lease/Legal.tsx
import React from 'react'; import Section from '@/components/Section';
export default function Legal(){ return <Section title="Cases"><div className="text-sm opacity-70">Placeholder.</div></Section>; }

// src/pages/card/lease/Files.tsx
import React from 'react'; import Section from '@/components/Section';
export default function Files(){ return <Section title="Files"><div className="text-sm opacity-70">Placeholder.</div></Section>; }

// src/pages/card/lease/Linked.tsx
import React from 'react'; import MiniCard from '@/features/portfolio/components/MiniCard';
export default function Linked({ property, unit, tenant }:{ property?: any; unit?: any; tenant?: any; }){
  return <div className="grid gap-3">
    <MiniCard title={property?.display_name || property?.street_1 || 'Property'} href={property?`/card/property/${property.id}`:undefined}/>
    <MiniCard title={unit?.unit_number ? `Unit ${unit.unit_number}` : (unit?`Unit #${unit.id}`:'Unit')} href={unit?`/card/unit/${unit.id}`:undefined}/>
    <MiniCard title={tenant?.display_name || 'Tenant'} href={tenant?`/card/tenant/${tenant.id}`:undefined}/>
  </div>;
}

// src/pages/card/lease/Activity.tsx
import React from 'react'; import Section from '@/components/Section';
export default function Activity(){ return <Section title="Activity"><div className="text-sm opacity-70">No recent activity.</div></Section>; }

// src/pages/card/lease/index.tsx
import React from 'react';
import { useParams } from 'wouter';
import Section from '@/components/Section';
import { useLeaseCard } from '@/lib/ecc-card-queries';
import HeroBlock from './HeroBlock';
import LeaseTabs, { TabDef } from './Tabs';
import Overview from './Overview';
import Details from './Details';
import Financials from './Financials';
import Legal from './Legal';
import Files from './Files';
import Linked from './Linked';
import Activity from './Activity';
import RightRail from './RightRail';

export default function LeaseCardPage(){
  const { id } = useParams<{id:string}>();
  const { data, isLoading } = useLeaseCard(id!);
  const lease = data?.lease ?? null, property = data?.property ?? null, unit = data?.unit ?? null, tenant = data?.tenant ?? null;

  const tabs: TabDef[] = [
    { key:'overview', label:'Overview', content:<Overview lease={lease} property={property} unit={unit} tenant={tenant}/> },
    { key:'details', label:'Details', content:<Details lease={lease}/> },
    { key:'financials', label:'Financials', content:<Financials/> },
    { key:'legal', label:'Legal', content:<Legal/> },
    { key:'files', label:'Files', content:<Files/> },
    { key:'linked', label:'Linked', content:<Linked property={property} unit={unit} tenant={tenant}/> },
    { key:'activity', label:'Activity', content:<Activity/> },
  ];

  return (
    <div className="p-4 space-y-3">
      <HeroBlock lease={lease}/>
      {!lease && !isLoading && <Section title="Lease not found"><div className="opacity-70">Check the ID and try again.</div></Section>}
      <div className="grid grid-cols-1 lg:grid-cols-[1fr_320px] gap-3">
        <div className="space-y-3"><LeaseTabs tabs={tabs}/></div>
        <div className="space-y-3"><RightRail tenant={tenant}/></div>
      </div>
    </div>
  );
}


DoD (Lease): navigate /card/lease/{realId} → KPIs + tabs + RightRail (no map).

3) TENANT CARD
// src/pages/card/tenant/HeroBlock.tsx
import React from 'react';
import Section from '@/components/Section';
import { KPI, KPIRow } from '@/features/portfolio/components/KPI';
import ActionButton from '@/features/portfolio/components/ActionButton';
export default function HeroBlock({ tenant, activeLease }:{ tenant?: any|null; activeLease?: any|null }){
  const hasActive = !!activeLease;
  return (
    <Section title={tenant?.display_name || `Tenant #${tenant?.id ?? ''}`} actions={
      <div className="flex gap-2">
        <ActionButton label="Edit" icon="✏️" variant="secondary" />
        <ActionButton label="Export PDF" icon="📄" variant="ghost" />
        <ActionButton label="Send Message" icon="✉️" comingSoon />
      </div>
    }>
      <KPIRow>
        <KPI label="Current Balance" value="—" />
        <KPI label="Last Payment" value="—" />
        <KPI label="Active Lease" value={hasActive?'Yes':'No'} />
        <KPI label="Notices YTD" value="—" />
      </KPIRow>
    </Section>
  );
}

// src/pages/card/tenant/RightRail.tsx
import React from 'react';
import Section from '@/components/Section';
import MiniCard from '@/features/portfolio/components/MiniCard';
export default function RightRail({ activeLease }:{ activeLease?: any|null }){
  return (
    <div className="space-y-3">
      <Section title="Active Lease">
        {activeLease ? <MiniCard title={`Lease ${activeLease.doorloop_id ?? activeLease.id}`} href={`/card/lease/${activeLease.id}`}/> : <div className="text-sm opacity-70">No active lease.</div>}
      </Section>
      <Section title="Contact Methods"><div className="text-sm opacity-70">Email, phone (placeholder).</div></Section>
      <Section title="Pinned Files"><ul className="text-sm list-disc pl-5"><li>ID Verification.pdf</li></ul></Section>
    </div>
  );
}

// src/pages/card/tenant/Tabs.tsx
import React from 'react';
export type TenantTabKey = 'overview'|'details'|'financials'|'legal'|'files'|'linked'|'activity';
export interface TabDef { key: TenantTabKey; label: string; content: React.ReactNode; }
export default function TenantTabs({tabs, defaultKey='overview'}:{tabs:TabDef[];defaultKey?:TenantTabKey;}){
  const [active,setActive]=React.useState<TenantTabKey>(defaultKey);
  return (
    <div className="ecc-object">
      <nav className="flex gap-2 mb-3">{tabs.map(t=>
        <button key={t.key} className={`px-3 py-1.5 rounded ${active===t.key?'bg-white/10':'hover:bg-white/5'}`} onClick={()=>setActive(t.key)}>{t.label}</button>
      )}</nav>
      <div>{tabs.find(t=>t.key===active)?.content}</div>
    </div>
  );
}

// src/pages/card/tenant/Overview.tsx
import React from 'react';
import { FieldRows } from '@/features/portfolio/components/FieldRows';
export default function Overview({ tenant }:{ tenant?: any }) {
  const rows = [
    { label:'Name', value: tenant?.display_name ?? '—' },
    { label:'Email', value: tenant?.primary_email ?? '—' },
    { label:'Phone', value: tenant?.primary_phone ?? '—' },
    { label:'DoorLoop ID', value: tenant?.doorloop_id ?? '—' },
  ];
  return <FieldRows rows={rows} columns={2} />;
}

// src/pages/card/tenant/Details.tsx
import React from 'react'; import { FieldRows } from '@/features/portfolio/components/FieldRows';
export default function Details({ tenant }:{ tenant?: any }){ return <FieldRows rows={[{label:'Notes',value:'—'}]} columns={2}/>; }

// src/pages/card/tenant/Financials.tsx
import React from 'react'; import Section from '@/components/Section';
export default function Financials(){ return <Section title="Payment History"><div className="text-sm opacity-70">Placeholder.</div></Section>; }

// src/pages/card/tenant/Legal.tsx
import React from 'react'; import Section from '@/components/Section';
export default function Legal(){ return <Section title="Notices"><div className="text-sm opacity-70">Placeholder.</div></Section>; }

// src/pages/card/tenant/Files.tsx
import React from 'react'; import Section from '@/components/Section';
export default function Files(){ return <Section title="Files"><div className="text-sm opacity-70">Placeholder.</div></Section>; }

// src/pages/card/tenant/Linked.tsx
import React from 'react'; import MiniCard from '@/features/portfolio/components/MiniCard';
export default function Linked({ leases }:{ leases?: any[] }){
  return <div className="grid gap-3">
    {(leases??[]).map((l:any)=>(
      <MiniCard key={l.id} title={`Lease ${l.doorloop_id ?? l.id}`} href={`/card/lease/${l.id}`}/>
    ))}
  </div>;
}

// src/pages/card/tenant/Activity.tsx
import React from 'react'; import Section from '@/components/Section';
export default function Activity(){ return <Section title="Activity"><div className="text-sm opacity-70">No recent activity.</div></Section>; }

// src/pages/card/tenant/index.tsx
import React from 'react';
import { useParams } from 'wouter';
import Section from '@/components/Section';
import { useTenantCard } from '@/lib/ecc-card-queries';
import HeroBlock from './HeroBlock';
import TenantTabs, { TabDef } from './Tabs';
import Overview from './Overview';
import Details from './Details';
import Financials from './Financials';
import Legal from './Legal';
import Files from './Files';
import Linked from './Linked';
import Activity from './Activity';
import RightRail from './RightRail';

export default function TenantCardPage(){
  const { id } = useParams<{id:string}>();
  const { data, isLoading } = useTenantCard(id!);
  const tenant = data?.tenant ?? null, leases = data?.leases ?? [], activeLease = data?.activeLease ?? null;

  const tabs: TabDef[] = [
    { key:'overview', label:'Overview', content:<Overview tenant={tenant}/> },
    { key:'details', label:'Details', content:<Details tenant={tenant}/> },
    { key:'financials', label:'Financials', content:<Financials/> },
    { key:'legal', label:'Legal', content:<Legal/> },
    { key:'files', label:'Files', content:<Files/> },
    { key:'linked', label:'Linked', content:<Linked leases={leases}/> },
    { key:'activity', label:'Activity', content:<Activity/> },
  ];

  return (
    <div className="p-4 space-y-3">
      <HeroBlock tenant={tenant} activeLease={activeLease}/>
      {!tenant && !isLoading && <Section title="Tenant not found"><div className="opacity-70">Check the ID and try again.</div></Section>}
      <div className="grid grid-cols-1 lg:grid-cols-[1fr_320px] gap-3">
        <div className="space-y-3"><TenantTabs tabs={tabs}/></div>
        <div className="space-y-3"><RightRail activeLease={activeLease}/></div>
      </div>
    </div>
  );
}


DoD (Tenant): /card/tenant/{realId} renders hero, 7 tabs, RightRail (no map).

4) OWNER CARD
// src/pages/card/owner/HeroBlock.tsx
import React from 'react';
import Section from '@/components/Section';
import { KPI, KPIRow } from '@/features/portfolio/components/KPI';
import ActionButton from '@/features/portfolio/components/ActionButton';
export default function HeroBlock({ owner, properties, units }:{ owner?: any|null; properties?: any[]; units?: any[] }){
  const pCount = Array.isArray(properties)?properties.length:0;
  const uCount = Array.isArray(units)?units.length:0;
  const occupancy = 0; // compute when data available
  return (
    <Section title={owner?.display_name || `Owner #${owner?.id ?? ''}`} actions={
      <div className="flex gap-2">
        <ActionButton label="Edit" icon="✏️" variant="secondary" />
        <ActionButton label="Export PDF" icon="📄" variant="ghost" />
        <ActionButton label="Transfer Ownership" icon="🔁" comingSoon />
      </div>
    }>
      <KPIRow>
        <KPI label="Properties" value={String(pCount)}/>
        <KPI label="Total Units" value={String(uCount)}/>
        <KPI label="Occupancy" value={`${occupancy.toFixed(1)}%`}/>
        <KPI label="Open WOs" value="—"/>
      </KPIRow>
    </Section>
  );
}

// src/pages/card/owner/RightRail.tsx
import React from 'react';
import Section from '@/components/Section';
export default function RightRail({ owner }:{ owner?: any|null }){
  return (
    <div className="space-y-3">
      <Section title="Portfolio Summary"><div className="text-sm opacity-70">Placeholder.</div></Section>
      <Section title="Contact Methods"><div className="text-sm opacity-70">Email/Phone (placeholder).</div></Section>
      <Section title="Pinned Files"><ul className="text-sm list-disc pl-5"><li>Management Agreement.pdf</li></ul></Section>
    </div>
  );
}

// src/pages/card/owner/Tabs.tsx
import React from 'react';
export type OwnerTabKey = 'overview'|'details'|'financials'|'legal'|'files'|'linked'|'activity';
export interface TabDef { key: OwnerTabKey; label: string; content: React.ReactNode; }
export default function OwnerTabs({tabs, defaultKey='overview'}:{tabs:TabDef[];defaultKey?:OwnerTabKey;}){
  const [active,setActive]=React.useState<OwnerTabKey>(defaultKey);
  return (
    <div className="ecc-object">
      <nav className="flex gap-2 mb-3">{tabs.map(t=>
        <button key={t.key} className={`px-3 py-1.5 rounded ${active===t.key?'bg-white/10':'hover:bg-white/5'}`} onClick={()=>setActive(t.key)}>{t.label}</button>
      )}</nav>
      <div>{tabs.find(t=>t.key===active)?.content}</div>
    </div>
  );
}

// src/pages/card/owner/Overview.tsx
import React from 'react';
import { FieldRows } from '@/features/portfolio/components/FieldRows';
export default function Overview({ owner }:{ owner?: any }) {
  const rows = [
    { label:'Name', value: owner?.display_name ?? '—' },
    { label:'Email', value: owner?.primary_email ?? '—' },
    { label:'Phone', value: owner?.primary_phone ?? '—' },
    { label:'DoorLoop ID', value: owner?.doorloop_id ?? '—' },
  ];
  return <FieldRows rows={rows} columns={2} />;
}

// src/pages/card/owner/Details.tsx
import React from 'react'; import { FieldRows } from '@/features/portfolio/components/FieldRows';
export default function Details({ owner }:{ owner?: any }){ return <FieldRows rows={[{label:'Notes',value:'—'}]} columns={2}/>; }

// src/pages/card/owner/Financials.tsx
import React from 'react'; import Section from '@/components/Section';
export default function Financials(){ return <Section title="Distributions"><div className="text-sm opacity-70">Placeholder.</div></Section>; }

// src/pages/card/owner/Legal.tsx
import React from 'react'; import Section from '@/components/Section';
export default function Legal(){ return <Section title="Compliance"><div className="text-sm opacity-70">Placeholder.</div></Section>; }

// src/pages/card/owner/Files.tsx
import React from 'react'; import Section from '@/components/Section';
export default function Files(){ return <Section title="Files"><div className="text-sm opacity-70">Placeholder.</div></Section>; }

// src/pages/card/owner/Linked.tsx
import React from 'react'; import MiniCard from '@/features/portfolio/components/MiniCard';
export default function Linked({ properties }:{ properties?: any[] }){
  return <div className="grid gap-3">
    {(properties??[]).map((p:any)=>(
      <MiniCard key={p.id} title={p.display_name || p.street_1 || `Property #${p.id}`} href={`/card/property/${p.id}`}/>
    ))}
  </div>;
}

// src/pages/card/owner/Activity.tsx
import React from 'react'; import Section from '@/components/Section';
export default function Activity(){ return <Section title="Activity"><div className="text-sm opacity-70">No recent activity.</div></Section>; }

// src/pages/card/owner/index.tsx
import React from 'react';
import { useParams } from 'wouter';
import Section from '@/components/Section';
import { useOwnerCard } from '@/lib/ecc-card-queries';
import HeroBlock from './HeroBlock';
import OwnerTabs, { TabDef } from './Tabs';
import Overview from './Overview';
import Details from './Details';
import Financials from './Financials';
import Legal from './Legal';
import Files from './Files';
import Linked from './Linked';
import Activity from './Activity';
import RightRail from './RightRail';

export default function OwnerCardPage(){
  const { id } = useParams<{id:string}>();
  const { data, isLoading } = useOwnerCard(id!);
  const owner = data?.owner ?? null, properties = data?.properties ?? [], units = data?.units ?? [];

  const tabs: TabDef[] = [
    { key:'overview', label:'Overview', content:<Overview owner={owner}/> },
    { key:'details', label:'Details', content:<Details owner={owner}/> },
    { key:'financials', label:'Financials', content:<Financials/> },
    { key:'legal', label:'Legal', content:<Legal/> },
    { key:'files', label:'Files', content:<Files/> },
    { key:'linked', label:'Linked', content:<Linked properties={properties}/> },
    { key:'activity', label:'Activity', content:<Activity/> },
  ];

  return (
    <div className="p-4 space-y-3">
      <HeroBlock owner={owner} properties={properties} units={units}/>
      {!owner && !isLoading && <Section title="Owner not found"><div className="opacity-70">Check the ID and try again.</div></Section>}
      <div className="grid grid-cols-1 lg:grid-cols-[1fr_320px] gap-3">
        <div className="space-y-3"><OwnerTabs tabs={tabs}/></div>
        <div className="space-y-3"><RightRail owner={owner}/></div>
      </div>
    </div>
  );
}


DoD (Owner): /card/owner/{realId} renders hero, 7 tabs, RightRail (no map).

✅ Final Verification (copy to Replit AI after code applies)
RUN VERIFICATION:
1) npx tsc -p tsconfig.cards.json   // expect 0 errors
2) node scripts/guardrail-overlays.mjs  // expect pass
3) node scripts/guardrail-mega.mjs      // expect pass

DEMO ROUTES (use real IDs from your portfolio tables):
- /card/unit/45
- /card/lease/1
- /card/tenant/1
- /card/owner/6

EXPECTED:
- Each page shows Hero KPIs, 7 tabs with visible content, RightRail (no map on these).
- No overlays, no blank screens, no “return null”.
- Data supplied by single resolver hook per page (DTO-first with /api/entities fallback).