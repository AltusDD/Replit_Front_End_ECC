Task: Kill interfering layout rules + clamp fly-out (final shim)

Mode(s): UI-Nav Engineer, Consistency Enforcer
Files to change:

src/styles/_ecc-override.css (patch)

src/components/Sidebar.tsx (tiny enhancement)

1) Patch src/styles/_ecc-override.css

Add/replace the blocks below (keep your tokens). These raise specificity, add fallbacks, and neutralize global resets without leaking styles.

/* ——— Ensure tokens have fallbacks ——— */
.sidebar{ width: var(--ecc-sidebar-w, 280px); }
.sidebar.collapsed{ width: var(--ecc-sidebar-w-collapsed, 72px); }

/* ——— Sidebar must be fixed & above content ——— */
.sidebar{
  position: fixed;
  top: 0; left: 0;
  height: 100vh;
  z-index: 50;
  background: var(--ecc-panel);
}

/* ——— Reserve space for sidebar across common wrappers (high specificity) ——— */
html[data-sidebar-mounted="1"] body,
html[data-sidebar-mounted="1"] body[data-theme],
html[data-sidebar-mounted="1"] #root,
html[data-sidebar-mounted="1"] #root > :not(.sidebar),
html[data-sidebar-mounted="1"] main,
html[data-sidebar-mounted="1"] .app,
html[data-sidebar-mounted="1"] .page,
html[data-sidebar-mounted="1"] .container,
html[data-sidebar-mounted="1"] .content {
  padding-left: var(--ecc-sidepad, var(--ecc-sidebar-w)) !important;
  box-sizing: border-box;
}

/* Don’t let global layouts re-grid us into oblivion */
html[data-sidebar-mounted="1"] #root{
  margin-left: 0 !important;
  max-width: 100% !important;
}

/* Prevent horizontal scrollbars caused by 100vw layouts */
html[data-sidebar-mounted="1"],
html[data-sidebar-mounted="1"] body{
  overflow-x: hidden;
}

/* Make sure our internal scroll survives any resets */
.sidebar .sidebar-scroll{
  height: calc(100vh - 110px) !important;
  overflow-y: auto !important;
  -webkit-overflow-scrolling: touch;
  scrollbar-width: none;
}
.sidebar .sidebar-scroll::-webkit-scrollbar{ width: 0; height: 0; }

/* Fly-out must never span full screen */
.sidebar .flyout{
  left: calc(var(--ecc-sidebar-w-collapsed, 72px) - 2px);
  max-width: var(--ecc-flyout-w, 280px);
  z-index: 60;
  opacity: 0;
  transform: translateX(-8px);
  pointer-events: none;
  transition: opacity .18s ease, transform .18s ease;
}
.sidebar .flyout.show{
  opacity: 1;
  transform: translateX(0);
  pointer-events: auto;
}

/* Readability + icon color discipline */
.sidebar .label{ color: var(--ecc-text) !important; }
.sidebar .icon.parent{ color: var(--ecc-gold) !important; }
.sidebar .icon.child{  color: var(--ecc-dim) !important; }

/* Logo prominence */
.sidebar .brand-logo{
  height: 48px;
  filter: brightness(1.15) drop-shadow(0 2px 6px rgba(255,212,0,.2));
  transition: transform .3s ease, opacity .3s ease, height .3s ease;
}
.sidebar.collapsed .brand-logo{ height: 32px; }

/* Tiny seam so content never looks "caught" on the left */
.sidebar::after{
  content:""; position:absolute; top:0; right:-1px; width:1px; height:100%;
  background: var(--ecc-seam);
}

2) Tiny enhancement in src/components/Sidebar.tsx

We already set data-sidebar-mounted and --ecc-sidepad. Add this one more line to make sure the variable is initialized even before the first effect runs (helps when persistent collapsed state loads):

// right after the collapsed state is created
useEffect(() => {
  document.documentElement.style.setProperty(
    "--ecc-sidepad",
    (collapsed ? "var(--ecc-sidebar-w-collapsed)" : "var(--ecc-sidebar-w)")
  );
}, []); // run once on mount


(You already have the main effect that updates on [collapsed]; this just primes it at mount.)

Quick verification

Sidebar visible? (collapsed/expanded)

Page content indented 72px when collapsed, 280px when expanded.

No horizontal scrollbar; header no longer clipped.

Hovering the collapsed rail → bounded fly-out panel appears (≤280px).

Parent icons (gold) + child icons (blue) show in both states.

Logo is bigger/brighter; pin persists.

If anything still fights us, it’s almost certainly a very specific selector in theme.css/app.css (e.g., body[data-theme="altus"] { padding-left:0 !important; } or #root { width:100vw !important; }). In that case, send one more screenshot and I’ll give you a micro-override for that exact rule—no collateral damage.