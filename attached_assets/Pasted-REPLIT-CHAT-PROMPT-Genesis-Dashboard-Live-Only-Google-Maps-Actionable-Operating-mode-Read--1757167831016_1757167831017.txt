REPLIT CHAT PROMPT ‚Äî ‚ÄúGenesis Dashboard (Live-Only, Google Maps, Actionable)‚Äù

Operating mode: Read ‚Üí Plan ‚Üí Small, atomic diffs ‚Üí Test.
Guardrails (non-negotiable):

Live data only. Remove/forbid all mock/fixture/dev data. Search the repo for mock, fixture, exampleData, __dev__, seed, faker and fail the task if found referenced by Dashboard.

Keep the existing route structure and layouts outside of the Dashboard.

No visual ‚Äúbrown tint‚Äù. Replace with our approved panel grey.

Global date format: Mon D, YYYY (e.g., Sep 5, 2025).

Must remain performant (memoization, AbortController, skeleton loaders, no console errors).

Phase 0 ‚Äî Inventory & No-Mock Audit (read only)

List current dashboard files and imports:

src/features/dashboard/pages/DashboardPage.tsx

src/features/dashboard/components/*

src/features/dashboard/hooks/*

Identify data sources used now (Supabase / REST endpoints already used by Portfolio pages).

Search the project for any mock/fixture data; paste matches (filename + import site). If any mock is referenced by Dashboard, stop and report.

Phase 1 ‚Äî Theme & Formatting Polish (replace brown tint; enforce date format)

Update tokens & dashboard styles

Add/ensure tokens (or equivalent) in src/styles/tokens.css (or global CSS):

:root{
  --altus-black:#0b0e12;
  --altus-gold:#d6b36a;

  /* Approved neutrals (no brown) */
  --panel-bg:#1a1d21;     /* card/panel background */
  --panel-elev:#20242a;   /* elevated surface */
  --line:#2a2d31;
  --text:#e6e7ea;
  --text-dim:#a8adb7;

  --good:#31c48d;   /* green */
  --warn:#f3c969;   /* yellow */
  --bad:#ef5953;    /* red */
  --neutral:#7b818a;
}


Ensure src/styles/Dashboard.css uses these tokens for all panels/cards (no brown background anywhere).

Add global format helpers in src/utils/format.ts and refactor dashboard usage to them:

export const fmtDate = (iso?: string|null) =>
  !iso ? "‚Äî" : new Date(iso).toLocaleDateString(undefined,{month:"short",day:"numeric",year:"numeric"});
export const fmtMoney = (n?: number|null) => n==null||Number.isNaN(n) ? "‚Äî" : n===0 ? "$0" :
  n.toLocaleString(undefined,{style:"currency",currency:"USD",maximumFractionDigits:2});
export const fmtPct = (v?: number|null, d=1) => v==null? "‚Äî" : `${v.toFixed(d)}%`;


Acceptance: All dashboard panels use --panel-bg; all dates show as Mon D, YYYY.

Phase 2 ‚Äî Live API Hooks (no mocks)

Create/replace src/features/dashboard/hooks/useDashboardData.ts with live data only. Abort safe, typed, memoized. Return:

kpis:

occupancyPct = occupied units / total units (from Units & Leases)

rentReadyVacant: { ready, vacant } (from Units status; ready = vacant && rent_ready flag)

collectionsRatePct (MTD): sum(received payments this month) / sum(billed charges this month)

openCriticalWO: count Work Orders where priority in (‚ÄúHigh‚Äù, ‚ÄúCritical‚Äù) and status not closed

noiMTD: income MTD ‚àí expenses MTD (transactions ledger)

propertiesForMap: { id, lat, lng, address, city, state, status, delinquent:boolean, rentReady:boolean, currentTenant?:string }[]

incomeVsExpenses90: last 90 days by week or month: { period, income, expenses, noi }[]

valueVsDebtQuarters: last 8 quarters { quarter, value, debt }[]

leasingFunnel30: { leads, tours, applications, signed } (last 30 days)

occByCity: { city, properties, occUnits, vacUnits, occPct }[]

actionFeed:

delinquentsTop: top 3 { tenantId, tenant, property, balance, daysOverdue }

leasesExpiring45: top 3 { leaseId, tenant, property, endDate, daysToEnd }

workOrdersHotlist: top 3 { woId, property, summary, priority, ageDays }

Use existing normalized tables/endpoints already powering Portfolio pages (properties/units/leases/tenants/transactions/work_orders). Use AbortController in useEffect, memoize derived computations, and return empty arrays on no data (widgets show graceful empty states).

Phase 3 ‚Äî Widgets (actionable, polished)
3.1 KPI Ticker (replace top cards with actionable KPIs)

File: src/features/dashboard/components/KpiTicker.tsx

Four KPIs with mini donut/sparkline + trend, clickable to deep link:

Occupancy occupancyPct ‚Üí route /portfolio/units?status=occupied

Rent-Ready / Vacant ready / vacant ‚Üí /portfolio/units?status=vacant

Collections (MTD) collectionsRatePct ‚Üí /accounting?scope=mtd&filter=unpaid

Critical WOs openCriticalWO ‚Üí /construction?priority=high

Show secondary numbers in small dim text (e.g., total units, billed/paid totals).

3.2 Google Maps (centerpiece)

New: src/features/dashboard/components/PortfolioGoogleMap.tsx

Use @vis.gl/react-google-maps (no Leaflet). Add VITE_GOOGLE_MAPS_API_KEY (fail gracefully if missing).

Style: dark map theme.

Pin shape: custom SVG ‚Äúhouse‚Äù icon.

Dynamic color:

Green: occupied + current

Yellow: vacant & rent-ready

Orange: vacant & not rent-ready

Red: occupied but delinquent

Clustering at low zoom (use @googlemaps/markerclusterer).

Click opens a custom InfoWindow with address, status badges, current tenant (if any), and actions:

‚ÄúView Property‚Äù ‚Üí /portfolio/properties?focus={id}

‚ÄúOpen Work Orders‚Äù ‚Üí /construction?property={id}

‚ÄúOpen Ledger‚Äù ‚Üí /accounting?property={id} (if delinquent)

3.3 Priority Action Feed (right column)

File: src/features/dashboard/components/PriorityActionFeed.tsx

Three sections (max 3 items each) with ActionButtons:

üÜò Delinquency Alerts: ‚ÄúSend Reminder‚Äù, ‚ÄúStart Eviction‚Äù

‚ö†Ô∏è Lease Renewals (‚â§45 days): ‚ÄúPrepare Renewal‚Äù, ‚ÄúDo Not Renew‚Äù

üõ†Ô∏è Maintenance Hotlist: ‚ÄúAssign Vendor‚Äù

Each item shows key facts + age/days. When empty, show helpful copy (no blank panels).

3.4 Financials & Leasing

File: src/features/dashboard/components/FinancialsAndLeasing.tsx

Left: Cash Flow (90 days) with Income (green bars), Expenses (neutral bars), and NOI (Altus Gold line). Tooltip: exact values; top-right range control (30/60/90).

Right: Leasing Funnel (30 days) ‚Äî Leads ‚Üí Tours ‚Üí Apps ‚Üí Signed with counts and step conversion %.

Wrap both in ChartContainer.tsx panel with title + controls.

3.5 Reusable UI

src/features/dashboard/components/ChartContainer.tsx: consistent panel header, controls slot, body; use .ecc-panel class.

src/features/dashboard/components/ActionButton.tsx: primary (gold) and secondary (outline), with focus states and disabled states.

Use skeleton loaders while data pending; use memo everywhere.

Phase 4 ‚Äî Dashboard Layout

File: src/features/dashboard/pages/DashboardPage.tsx

Layout (responsive CSS grid):

KpiTicker (full width)

Grid row: PortfolioGoogleMap (2/3 width) + PriorityActionFeed (1/3 width)

Financials & Leasing row (two equal columns)

Occupancy by City table (reuse existing breakdown panel but restyle with --panel-bg, right-aligned numbers, gold progress bar)

On small screens: stack vertically.

Phase 5 ‚Äî Performance & DX

All data hooks: AbortController cleanup, useMemo/useCallback.

Charts don‚Äôt render until data ready (skeleton placeholders).

Add ?debug=1 support to log dataset sizes, join match rates, and any empty series; never log in normal mode.

Zero console errors. Specifically fix any DOMException/Abort noise.

Phase 6 ‚Äî Acceptance Criteria

Visual / UX

No brown tint anywhere; all panels use --panel-bg.

Dates display as Mon D, YYYY.

KPIs clickable, with small sparkline/donut and trend.

Google Map with colored custom house pins, clustering, and actionable InfoWindows.

Action Feed items include action buttons with proper routes.

Cash Flow chart shows Income/Expenses/NOI; Leasing Funnel shows step counts and conversion %.

Occupancy by City: right-aligned numerics + gold progress bars.

Data

Live data only. No mock imports. Build should fail if a mock import is found.

Computations:

Occupancy: occupied/total

Rent-ready vacant: from Units (vacant + readiness flag)

Collections (MTD): payments received / charges billed (month-to-date)

NOI (MTD): income MTD ‚àí expenses MTD

Delinquency: tenant balance > 0 (or past due)

Hotlist WO: priority High/Critical or age > 7 days

Empty states show helpful copy (no ‚Äúblack/blank‚Äù panels).

Code

Typed components, memoized, styled via tokens.

No hard-coded colors outside token usage (except chart library color props where required).

Env vars: VITE_GOOGLE_MAPS_API_KEY is mandatory for map; show friendly inline empty state if missing.

Commit message

feat(dashboard): Genesis-grade live dashboard (no mocks); Google Maps with clustering and actionable InfoWindows; KPI ticker; Action Feed; Cashflow+NOI; Leasing funnel; neutral panels and global date format

Phase 7 ‚Äî Post-Deploy Checklist (paste back)

Screenshots of the dashboard at desktop width and narrow width.

Debug summary (?debug=1): counts for units/properties/leases, MTD billed/paid, open critical WOs, funnel counts.

File changes list (paths).

Confirmation that no mock imports exist anywhere in dashboard code.

Optional nice-to-haves (only if all above is perfect)

Saved dashboard ranges (‚ÄúThis Month‚Äù, ‚ÄúLast 90 Days‚Äù) persisted to query string.

Export buttons in chart overflow menus (CSV for cashflow, PNG for charts).

Map filter chips (Vacant, Delinquent, Rent-Ready) that also reflect in counts.

Env reminders:

VITE_SUPABASE_URL, VITE_SUPABASE_ANON_KEY (or your API base + token).

VITE_GOOGLE_MAPS_API_KEY (required; fail with helpful UI if missing).

Use the prompt exactly; report findings, then implement in small, auditable steps.