Fix: allow Replit’s dynamic host in Vite
1) Tell the Assistant to back up and patch vite.config.*
# Back up first
cp vite.config.ts vite.config.ts.bak 2>/dev/null || true
cp vite.config.js vite.config.js.bak 2>/dev/null || true
cp vite.config.mjs vite.config.mjs.bak 2>/dev/null || true


Use whichever vite.config.* your repo actually has. If it’s vite.config.ts (most likely), replace its contents with the block below. If it’s vite.config.js/mjs, use the matching JS version.

For TypeScript (vite.config.ts)
import { defineConfig } from "vite";
import react from "@vitejs/plugin-react";

// Allow all hosts so Replit's dynamic domain is accepted.
// Also make HMR tunnel-safe (wss:443) in proxied environments.
export default defineConfig({
  plugins: [react()],
  server: {
    host: true,
    port: 5000,
    strictPort: true,
    allowedHosts: true, // ✅ key line
    hmr: {
      protocol: "wss",
      clientPort: 443,
    },
  },
  preview: {
    host: true,
    port: 5000,
    strictPort: true,
    // (preview uses same checker as server in Vite 5)
    allowedHosts: true,
  },
});

For JavaScript (vite.config.js or vite.config.mjs)
import { defineConfig } from "vite";
import react from "@vitejs/plugin-react";

export default defineConfig({
  plugins: [react()],
  server: {
    host: true,
    port: 5000,
    strictPort: true,
    allowedHosts: true, // ✅ key line
    hmr: {
      protocol: "wss",
      clientPort: 443,
    },
  },
  preview: {
    host: true,
    port: 5000,
    strictPort: true,
    allowedHosts: true,
  },
});


Why allowedHosts: true? Replit hands you a fresh hostname like 258f1742-…worf.replit.dev. Whitelisting a single name won’t stick. true allows any host, which is correct for a proxied dev environment. (We’re still binding to port:5000 with strictPort.)

2) Restart the dev server on Replit
pkill -f vite || true
npm run dev

3) Verify

The “Blocked request. This host (…) is not allowed.” message should be gone.

App should load from your Replit URL (the long *.replit.dev host).

HMR should work over wss without mixed content warnings.

If you still see a host warning

Make sure you edited the actual config file in your repo (vite.config.ts vs js/mjs).

Confirm the dev server picked up changes (you restarted it).

If your Vite is <5 and doesn’t recognize allowedHosts, upgrade Vite or switch to the JS file and keep the same config (the error you pasted is Vite 5 style, so this is unlikely).

Want me to hand the Assistant a one-liner that detects and patches whichever vite.config.* exists?