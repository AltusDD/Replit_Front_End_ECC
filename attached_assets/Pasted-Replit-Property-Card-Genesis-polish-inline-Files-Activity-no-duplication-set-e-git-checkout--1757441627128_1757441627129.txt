Replit ‚Äî Property Card Genesis polish (inline Files + Activity, no duplication)
set -e
git checkout -b feat/property-card-polish || git checkout feat/property-card-polish
mkdir -p src/styles src/features/files src/features/activity

############################################
# 1) Dark theme widget styles (chips, headers)
############################################
cat > src/styles/card-widgets.css <<'CSS'
/* Card sections & headers */
.ecc-section-card { background:#0f0f10; border:1px solid #27272a; border-radius:14px; }
.ecc-section-head { display:flex; align-items:center; justify-content:space-between; padding:12px 16px; border-bottom:1px solid #27272a; }
.ecc-section-title { font-size:14px; font-weight:600; }

/* Tabs */
.ecc-tabs { display:flex; gap:6px; padding:8px 8px 0 8px; }
.ecc-tab { padding:6px 10px; border-radius:999px; background:#161617; border:1px solid #2a2a2e; font-size:12px; color:#c7c7c7; cursor:pointer; }
.ecc-tab[aria-selected="true"] { background:#1f1f22; color:#fff; border-color:#3a3a42; }
.ecc-tab[aria-disabled="true"] { opacity:.45; cursor:not-allowed; }

/* File rows */
.ecc-files-list { padding:8px 12px 12px; }
.ecc-file-row { display:flex; align-items:center; justify-content:space-between; padding:8px 10px; border:1px solid #242428; border-radius:10px; margin-top:8px; background:#121214;}
.ecc-file-row small { color:#9a9aa2; }

/* Activity timeline chips */
.ecc-activity { padding:8px 12px 12px; }
.ecc-chip { display:flex; align-items:center; gap:10px; padding:10px 12px; border-radius:12px; background:#111113; border:1px solid #242428; margin-top:8px; }
.ecc-chip.danger { box-shadow: inset 2px 0 0 #b4232a; }
.ecc-chip .meta { margin-left:auto; font-size:12px; color:#9a9aa2; }

/* Filter bar */
.ecc-filterbar { display:flex; gap:8px; padding:8px 12px; border-bottom:1px solid #27272a; }
.ecc-input, .ecc-select { height:32px; background:#121214; border:1px solid #2a2a2e; color:#e2e2e6; border-radius:8px; padding:0 10px; font-size:12px; }
.ecc-input::placeholder { color:#6f6f77; }

/* Page container (share with earlier patch) */
.ecc-enhancer-block { max-width:1200px; margin:16px auto; padding:0 16px; }
CSS

# Ensure loaded
if ! grep -q "card-widgets.css" src/main.tsx; then
  sed -i '1i import "./styles/card-widgets.css";' src/main.tsx
fi

############################################
# 2) FilesTab ‚Äì styled tabs, entity-aware, empty states
############################################
cat > src/features/files/FilesTab.tsx <<'TSX'
import React, { useEffect, useMemo, useState } from "react";

type Props = {
  doorloop: boolean;
  dropbox: boolean;
  entity: "properties" | "units" | "leases" | "tenants" | "owners";
  refId: string | number;
};

type ListedFile = { id?:string; name:string; size?:number; modified?:string; url?:string; source:"DL"|"DBX" };

async function getJSON(url:string){
  const r = await fetch(url);
  if (!r.ok) return { ok:false, status:r.status };
  try { return await r.json(); } catch { return { ok:true, items:[] }; }
}

export default function FilesTab({ doorloop, dropbox, entity, refId }: Props){
  const [tab, setTab] = useState<"dl"|"dbx">(doorloop ? "dl" : "dbx");
  const [query, setQuery] = useState("");
  const [dl, setDL] = useState<ListedFile[]>([]);
  const [dbx, setDBX] = useState<ListedFile[]>([]);
  const [loading, setLoading] = useState(false);

  // fetch lists
  useEffect(()=>{ (async()=>{
    setLoading(true);
    try{
      if (doorloop){
        const j:any = await getJSON(`/api/files/doorloop/list?table=${entity}&ref_id=${refId}`);
        const items = (j?.items||[]).map((f:any)=>({ name:f.name||f.path||"File", size:f.size, modified:f.modified, url:f.url, source:"DL" as const }));
        setDL(items);
      } else setDL([]);
      if (dropbox){
        const j:any = await getJSON(`/api/files/dropbox/list?table=${entity}&ref_id=${refId}`);
        const items = (j?.items||[]).map((f:any)=>({ name:f.name||f.path||"File", size:f.size, modified:f.client_modified||f.modified, url:f.url, source:"DBX" as const }));
        setDBX(items);
      } else setDBX([]);
    } finally { setLoading(false); }
  })(); }, [doorloop, dropbox, entity, refId]);

  const current = useMemo(()=> (tab==="dl" ? dl : dbx).filter(f => !query || f.name.toLowerCase().includes(query.toLowerCase())), [tab, dl, dbx, query]);

  return (
    <div className="ecc-section-card">
      <div className="ecc-section-head">
        <div className="ecc-section-title">Files</div>
        <div className="flex items-center gap-2">
          <div className="ecc-tabs">
            <button className="ecc-tab" aria-selected={tab==="dl"} aria-disabled={!doorloop} onClick={()=> doorloop && setTab("dl")}>DoorLoop</button>
            <button className="ecc-tab" aria-selected={tab==="dbx"} aria-disabled={!dropbox} onClick={()=> dropbox && setTab("dbx")}>Dropbox</button>
          </div>
        </div>
      </div>

      <div className="ecc-filterbar">
        <input className="ecc-input" placeholder="Search all files‚Ä¶" value={query} onChange={e=>setQuery(e.target.value)} />
      </div>

      <div className="ecc-files-list">
        {!doorloop && !dropbox ? (
          <div className="text-sm text-neutral-400">No file sources connected. Connect Dropbox or DoorLoop to manage files.</div>
        ) : loading ? (
          <div className="text-sm text-neutral-400">Loading files‚Ä¶</div>
        ) : current.length === 0 ? (
          <div className="text-sm text-neutral-400">No files.</div>
        ) : current.map((f, i) => (
          <div key={i} className="ecc-file-row">
            <div className="truncate">
              <div className="font-medium text-[13px] truncate">{f.name}</div>
              <small>{f.source}{f.modified ? ` ‚Ä¢ ${new Date(f.modified).toLocaleDateString()}` : ""}</small>
            </div>
            {f.url ? <a className="text-[12px] underline" href={f.url} target="_blank">Open</a> : <span className="text-[12px] text-neutral-500">No link</span>}
          </div>
        ))}
      </div>
    </div>
  );
}
TSX

############################################
# 3) ActivityFeed ‚Äì timeline chips, filters, empty state
############################################
cat > src/features/activity/ActivityFeed.tsx <<'TSX'
import React, { useEffect, useMemo, useState } from "react";

type Props = { table:"properties"|"units"|"leases"|"tenants"|"owners"; refId:string|number };

type EventRow = { id?:number; created_at?:string; event_type?:string; label?:string; source?:string; payload?:any };

async function getJSON(url:string){
  const r = await fetch(url);
  if (!r.ok) return { ok:false, status:r.status };
  try { return await r.json(); } catch { return { ok:true, items:[] }; }
}

export default function ActivityFeed({ table, refId }: Props){
  const [rows, setRows] = useState<EventRow[]>([]);
  const [loading, setLoading] = useState(false);
  const [src, setSrc] = useState<string>("all");
  const [from, setFrom] = useState<string>(""); // yyyy-mm-dd
  const [to, setTo] = useState<string>("");

  useEffect(()=>{ (async()=>{
    setLoading(true);
    try{
      // primary endpoint
      let j:any = await getJSON(`/api/audit/by-ref?table=${encodeURIComponent(table)}&ref_id=${encodeURIComponent(refId)}`);
      // tolerate 404 or legacy shapes
      const list:EventRow[] = (j?.items || j?.events || j?.data || (Array.isArray(j)?j:[])) as EventRow[];
      setRows(Array.isArray(list) ? list : []);
    } finally { setLoading(false); }
  })(); }, [table, refId]);

  const filtered = useMemo(()=>{
    return rows.filter(r=>{
      if (src !== "all" && (r.source||"").toLowerCase() !== src) return false;
      const d = r.created_at ? new Date(r.created_at) : null;
      if (from && d && d < new Date(from)) return false;
      if (to && d && d > new Date(to+"T23:59:59")) return false;
      return true;
    });
  }, [rows, src, from, to]);

  return (
    <div className="ecc-section-card">
      <div className="ecc-section-head">
        <div className="ecc-section-title">Activity</div>
        <div style={{fontSize:12, color:"#9a9aa2"}}>{rows.length ? `${rows.length} events` : ""}</div>
      </div>

      <div className="ecc-filterbar">
        <select className="ecc-select" value={src} onChange={e=>setSrc(e.target.value)}>
          <option value="all">All sources</option>
          <option value="doorloop">DoorLoop</option>
          <option value="system">System</option>
          <option value="m365">M365</option>
          <option value="corelogic">CoreLogic</option>
        </select>
        <input className="ecc-input" type="date" value={from} onChange={e=>setFrom(e.target.value)} />
        <input className="ecc-input" type="date" value={to} onChange={e=>setTo(e.target.value)} />
      </div>

      <div className="ecc-activity">
        {loading ? (
          <div className="text-sm text-neutral-400">Loading activity‚Ä¶</div>
        ) : filtered.length === 0 ? (
          <div className="text-sm text-neutral-400">No events.</div>
        ) : filtered.map((ev, i)=>(
          <div key={ev.id || i} className={`ecc-chip ${String(ev.event_type||"").includes("LEGAL") ? "danger" : ""}`}>
            <span>{iconFor(ev)}</span>
            <div className="text-[13px]">
              <div className="font-medium">{titleFor(ev)}</div>
              {ev.label ? <div className="text-neutral-400 text-[12px]">{ev.label}</div> : null}
            </div>
            <div className="meta">{ev.created_at ? new Date(ev.created_at).toLocaleString() : ""}</div>
          </div>
        ))}
      </div>
    </div>
  );
}

function titleFor(ev:EventRow){
  if (ev.event_type) return ev.event_type.replace(/_/g," ").toLowerCase().replace(/\b\w/g, c=>c.toUpperCase());
  return "Event";
}
function iconFor(ev:EventRow){
  const s=(ev.source||"").toLowerCase();
  if (s==="doorloop") return "üè∑Ô∏è";
  if (s==="system") return "‚öôÔ∏è";
  if (s==="m365") return "üìß";
  if (s==="corelogic") return "üß≠";
  return "‚Ä¢";
}
TSX

############################################
# 4) Property page ‚Äì embed Files/Activity directly (remove enhancer duplication)
############################################
applypatch <<'PATCH'
*** Begin Patch
*** Update File: src/pages/card/property/index.tsx
@@
-import { useIntegrations } from "../../../lib/useIntegrations";
-import CardEnhancer from "../../../features/_enhancer/CardEnhancer";
+import { useIntegrations } from "../../../lib/useIntegrations";
+import FilesTab from "../../../features/files/FilesTab";
+import ActivityFeed from "../../../features/activity/ActivityFeed";
 import SourceBadges from "../../../components/ui/SourceBadges";
@@
-  // Genesis hero + inline enhancer sections
+  // Genesis hero + inline files/activity
   return (
     <div className="ecc-enhancer-block">
       {/* HERO */}
       <div className="card bg-neutral-900 border border-neutral-800 mb-4">
         <div className="px-4 py-4 flex items-start justify-between">
@@
         </div>
       </div>
 
-      {/* INLINE Files + Activity via our enhancer (router-free, aligned) */}
-      <CardEnhancer />
+      <div className="grid grid-cols-1 lg:grid-cols-2 gap-4">
+        <FilesTab
+          doorloop={!!integrations?.doorloop}
+          dropbox={!!integrations?.dropbox}
+          entity="properties"
+          refId={prop.id}
+        />
+        <ActivityFeed table="properties" refId={prop.id} />
+      </div>
     </div>
   );
 }
*** End Patch
PATCH

git add -A
git commit -m "feat(property-card): inline Files & Activity with styled widgets; remove enhancer duplication" || true

What this does

Files & Activity are now part of the Property page layout (no floating enhancer).

Widgets are styled to match the dark theme with tabs, filters, and tidy empty states.

Activity gracefully handles your 404 audit endpoint and shows ‚ÄúNo events.‚Äù

Files call your DoorLoop list endpoint with table/ref_id so it can filter if supported.

Quick verify (tell Replit)

Restart the dev server.

Open /card/property/42?debug=1

You should see: a clean hero, Files on the left (DoorLoop tab selected), Activity on the right, both boxed in dark cards.

Collapse/expand the left sidebar; the layout should stay centered.

Optional: if you have a property with any audit events, try its ID‚Äîthe chips will appear.