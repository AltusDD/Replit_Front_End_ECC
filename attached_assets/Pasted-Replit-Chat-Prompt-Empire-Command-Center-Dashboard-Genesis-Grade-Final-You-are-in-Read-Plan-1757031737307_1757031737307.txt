Replit Chat Prompt — Empire Command Center: Dashboard (Genesis Grade, Final)

You are in Read → Plan → Diff → Surgical Write mode.

HARD GUARDRAILS (DO NOT BREAK)

Do not modify any Portfolio V3 pages, DataTables, or existing feature modules outside /features/dashboard and the minimal routing/nav required to expose /dashboard.

Do not change global theme files except to add dashboard-scoped CSS in src/styles/Dashboard.css.

Do not rename or remove existing exports/utilities. If you need a helper, create new dashboard-scoped utils.

Keep panel color = approved light grey (no brown tint). Use Altus Gold only for accents.

All code must be TypeScript strict, accessible (ARIA), and production-ready.

PHASE 0 — Quick Audit (no writes)

Inspect current /dashboard implementation and print a brief summary of what’s wrong based on the screenshot-like state we see now:

Missing/weak visual hierarchy, KPI formatting not human-friendly ($, %, thousands separators).

Charts cramped / axes unreadable / legends/tooltips missing, funnel not proportioned.

No map or map not prominent; Action Center texty/unstyled.

Dates not in Mon D, YYYY format.

Panels appear dark/brown; must be approved light grey for contrast.
Output this summary and your exact plan (files you’ll add/edit). Then proceed.

PHASE 1 — Dependencies (add only if missing)

Add (keep all existing deps):

recharts, react-leaflet, leaflet

date-fns (formatting)

zod (runtime validation for mock/adapter)

framer-motion (subtle polish)

@types/leaflet

Install without removing anything.

PHASE 2 — File & Module Structure (create/replace these only)

Create/Update exactly these files:

src/styles/Dashboard.css
src/features/dashboard/api/mock-data.ts
src/features/dashboard/hooks/useDashboardData.ts
src/features/dashboard/utils/formatDashboard.ts
src/features/dashboard/components/ChartContainer.tsx
src/features/dashboard/components/TrendIndicator.tsx
src/features/dashboard/components/ActionButton.tsx
src/features/dashboard/components/KpiBanner.tsx
src/features/dashboard/components/PortfolioMap.tsx
src/features/dashboard/components/ActionCenter.tsx
src/features/dashboard/components/FinancialSnapshot.tsx
src/features/dashboard/components/LeasingFunnel.tsx
src/features/dashboard/components/OccupancyBreakdown.tsx
src/features/dashboard/pages/DashboardPage.tsx
src/dev/auditDashboard.ts       (dev-only audit hook)


Surgical edits only:

src/App.tsx → add route /dashboard and redirect / → /dashboard.

Sidebar/nav component → add “Dashboard” link (reuse existing classes; no restyle; top-level only).

PHASE 3 — Styles (approved colors, no brown tint)

Implement src/styles/Dashboard.css with panel = approved light grey and Altus tokens:

:root {
  --altus-black: #0b0e12;
  --altus-panel: #2a2d31;      /* approved light grey for panels */
  --altus-panel-2: #2f353d;
  --altus-gold: #d6b36a;
  --altus-text: #d7dae0;
  --altus-muted: #a0a0a0;
  --altus-good: #2ea36a;
  --altus-bad: #d16464;
  --altus-outline: rgba(255,255,255,.08);
}

.dash-grid { display:grid; gap: 16px; }
.dash-card {
  background: var(--altus-panel);
  border: 1px solid var(--altus-outline);
  border-radius: 12px;
  box-shadow: 0 10px 24px rgba(0,0,0,.35);
}

.dash-title { font-weight:600; letter-spacing:.02em; color:var(--altus-text); }
.dash-subtle { color: var(--altus-muted); }

.kpi-grid { display:grid; grid-template-columns: repeat(5,1fr); gap: 12px; }
.kpi-card { position:relative; padding:14px 16px; min-height:86px; }
.kpi-value { font-size:22px; font-weight:700; }
.kpi-meta { display:flex; align-items:center; gap:8px; margin-top:6px; }

.sparkline { position:absolute; inset:0; opacity:.12; pointer-events:none; }

.progress { height:8px; background:#21262c; border-radius:999px; overflow:hidden; }
.progress__fill { height:100%; background: var(--altus-gold); }

@media (max-width: 1200px) { .kpi-grid { grid-template-columns: repeat(2, 1fr);} }


Use this panel color consistently across all widgets.

PHASE 4 — Formatting utils (dashboard-scoped)

src/features/dashboard/utils/formatDashboard.ts:

fmtMoney(n: number, decimals: 0|2 = 0): string → $1,268 or $85,086.19

fmtPct(n: number, decimals = 1): string → 94.2%

fmtDate(iso: string): string → Mon D, YYYY (e.g., Sep 4, 2025)

clamp01(n: number): number → returns 0..1
No changes to global utils—dashboard components use these.

PHASE 5 — Data layer (mock + adapter & validation)
5A) mock-data.ts

Provide rich data:

≥ 50 properties with: { id, address1, city, state, zip, lat, lng, status: 'occupied'|'vacant'|'delinquent', marketRent, currentRent, units }

leases (≥ 100): { id, tenantId, propertyId, unitLabel, startDate, endDate, status }

tenants (≥ 50): { id, name, propertyId, balanceDue, isDelinquent }

workOrders (≥ 12): { id, propertyId, priority: 'high'|'normal', createdAt, summary, assignedVendor? }

series: last 12 months (income cents, expenses cents, occupancyPct), and quarters (value, debt)

funnel: { applications, screenings, leases } for last 90 days
Add zod schemas and validate; log warnings on mismatch (do not crash).

5B) useDashboardData.ts

useDashboardData(range: '30d'|'90d'|'6m'|'12m'):

Abortable simulated latency (300–600ms).

Return { loading, error, data } where data contains:

entities: properties, tenants, leases, workOrders

series.months[], series.quarters[]

funnel

precomputed KPIs (DB-first):

occupancyPct

avgTurnDays

collectionRatePct

highPriorityWO

noiMTD (cents)

trend deltas for each KPI vs prior period (±%)
Adapter hook: if env VITE_USE_LIVE=1 is present later, expose an adapter function signature adaptFromLive(live: any): DashboardData (stub now). Never mutate portfolio modules.

PHASE 6 — Reusable components
6A) ActionButton.tsx

Props: { children; to?: string; onClick?: () => void; variant?: 'primary'|'secondary'|'danger'; size?: 'sm'|'md' }

Primary = Altus Gold background with dark text; Secondary = outline; Danger = soft red.

If to is provided, render wouter <Link>.

6B) TrendIndicator.tsx

Props: { value: number }

0 green ▲, <0 red ▼, =0 neutral •, with aria-label.

6C) ChartContainer.tsx

Props: { title, range?: '30d'|'90d'|'6m'|'12m', onRangeChange?: (r)=>void, rightSlot?: ReactNode, children }

Frame: .dash-card, header with title + range select, body area with padding; export a fixed height variant prop when needed.

PHASE 7 — Widgets (actionable, polished)
7A) KpiBanner.tsx

Five KPIs:

Portfolio Occupancy % (+ TrendIndicator, faint sparkline of occupancy)

Avg Turn Time 12 days (+ trend)

Rent Collection Rate % (+ trend)

High-Priority WOs (int)

NOI (MTD) $ (+ trend)

Each clickable (deep links):

Occupancy → /portfolio/units?status=vacant

Turn → /reports/turns

Collection → /portfolio/tenants?type=delinquent

WOs → /construction?priority=high

NOI → /reports/pnl?period=mtd

7B) PortfolioMap.tsx

react-leaflet map (lazy-load to avoid SSR issues).

Pin colors: green(occupied+current), yellow(vacant), red(delinquent).

Popup: address, status tag, current tenant, View Details link.

City filter + FitBounds on filter.

If maps cannot load, render graceful fallback message and count by status.

7C) ActionCenter.tsx

Three sections, max 3 items each:

Leases Expiring (≤45d): tenant, property, end date (Mon D, YYYY), actions: Contact Tenant, Start Renewal.

Top Delinquent Tenants: name, property, balance in red, actions: View Ledger, Send Reminder.

New High-Priority WOs: property + summary, action: Assign Vendor.
Actions log or navigate.

7D) FinancialSnapshot.tsx

Two side-by-side ChartContainers:

Income vs Expenses (Last 6 Months): Recharts BarChart; income green, expenses neutral grey; tooltips, legend, $ axis tick formatting.

Portfolio Value vs Debt (Quarterly): LineChart; shaded area under value; tooltips; legend.

7E) LeasingFunnel.tsx

Horizontal funnel (composed bars) Applications → Screenings → Leases, labels and conversion %; each segment clickable to filter view.

7F) OccupancyBreakdown.tsx

Table by city: Location | #Props | Occupied | Vacant | Occupancy % with a tiny progress bar; row click → /portfolio/properties?city=....

PHASE 8 — Page assembly

src/features/dashboard/pages/DashboardPage.tsx

Responsive grid:

Row 1: KpiBanner (full width)

Row 2: PortfolioMap (2/3) + ActionCenter (1/3)

Row 3: FinancialSnapshot (full width)

Row 4: LeasingFunnel (1/2) + OccupancyBreakdown (1/2)

Loading skeletons for each panel; non-blocking rendering.

Import Dashboard.css here.

PHASE 9 — Dev auditor (debug mode)

src/dev/auditDashboard.ts with runDashboardAudit():

On /dashboard?debug=1, console.table():

Properties with lat/lng (%), counts by status

Leases ending ≤45 days (count + first 5)

Tenants with balance > 0 (top 5)

High-priority WOs unassigned (count + first 5)

Series months coverage (count) and range labels
Never throw; catch and warn.

PHASE 10 — Finishing passes (what to fix from current screen)

Apply these explicit fixes:

Panels → use .dash-card with approved light grey (no brown tint).

KPI formatting → use fmtMoney/fmtPct; numbers with thousands separators; NOI uses 2 decimals; show trend arrow.

Dates everywhere → fmtDate(iso) → Mon D, YYYY.

Charts:

Add margins, readable ticks, tooltips, legends.

Set height: 280–320px per chart container; sparkline overlay for KPIs at ~96px height.

Funnel → proportional widths; show count + conversion under each step.

Occupancy table → right-align numerics; mini progress bar; click rows to deep link.

Action Center → tighten typography; make actions proper buttons (using ActionButton).

Map → ensure visible (≥ 420px height), clustered or performant on 50+ pins; fallback when offline.

Accessibility → keyboard focus ring; ARIA labels on buttons and KPI tiles.

Performance → memoize grouped data; lazy-load Leaflet; tree-shake Recharts imports.

PHASE 11 — Routing & Nav (surgical)

src/App.tsx: add <Route path="/dashboard" component={DashboardPage} /> and redirect / → /dashboard.

Sidebar: add Dashboard item linked to /dashboard using existing classnames (no new styles).

PHASE 12 — Verification & Deploy

Typecheck & build.

Open /dashboard and verify:

KPIs show formatted values and trends; tiles navigate.

Map shows colored pins; popups have View Details links.

Action Center shows 3/3/3 actionable items.

Financial charts render with tooltips/legends and correct $/% formatting.

Funnel is proportional with counts and conversion.

Occupancy table clickable; mini bars render.

Panels are approved light grey; Altus Gold used only for accents.

All dates are Mon D, YYYY.

Open /dashboard?debug=1 and paste the auditor’s console table to confirm coverage.

Commit message:
feat(dashboard): Genesis-grade Dashboard finalized (KPI sparkline, actionable map + center, financial charts, funnel, occupancy table, formatting + audit mode)

(Optional WOW toggles — behind flags, do not bloat)

Command Palette (Ctrl/Cmd+K) to jump to filtered views (/portfolio/units?status=vacant, /portfolio/tenants?type=delinquent, etc.).

Share/Export buttons per chart to export PNG/CSV (client-only).

Anomaly badges (tiny ⚠︎) if month-over-month variance > 20% on income/expenses.

Keep these behind VITE_DASH_EXTRAS=1. If flag is off, do nothing.

When done, print a short diff of files changed and a one-page “operator’s guide” for the Dashboard (widget purposes + deep links).