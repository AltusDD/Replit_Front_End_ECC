Replit — Genesis UI Polish Pack

Paste this in Build mode shell.

set -e
git checkout -b feat/genesis-ui-polish || git checkout feat/genesis-ui-polish

############################################
# 1) Design tokens + global Genesis styles
############################################
mkdir -p src/styles src/components/ui

cat > src/styles/genesis.css <<'CSS'
:root{
  --bg-0:#0b0b0c; --bg-1:#0f0f10; --bg-2:#111113;
  --bd-0:#1f1f23; --bd-1:#26262b; --bd-2:#2e2e35;
  --tx-0:#ffffff; --tx-1:#e6e6ea; --tx-2:#b5b5bf; --tx-3:#8a8a93;
  --gold:#f0c66e; --gold-600:#d8ae56;
  --accent:#8fb7ff;
  --radius-xl:14px; --radius-lg:12px; --radius-md:10px;
  --shadow-1:0 0 0 1px var(--bd-1), 0 8px 24px rgba(0,0,0,.35);
  --shadow-0:0 0 0 1px var(--bd-1);
  --pad-xy:16px;
}

html,body{background:var(--bg-0); color:var(--tx-1);}

.ecc-page { max-width:1200px; margin:20px auto; padding:0 16px; }

.card{ background:var(--bg-1); border:1px solid var(--bd-1); border-radius:var(--radius-xl); box-shadow:var(--shadow-0); }
.card-header{ padding:14px 16px; border-bottom:1px solid var(--bd-1); }
.card-body{ padding:14px 16px; }

.btn{ display:inline-flex; align-items:center; gap:8px; padding:8px 12px; border:1px solid var(--bd-2); border-radius:10px; background:#141416; color:var(--tx-1); font-size:12px; }
.btn:hover{ border-color:var(--bd-1); }
.btn:disabled,.btn[disabled]{ opacity:.5; cursor:not-allowed; }
.btn-gold{ background:linear-gradient(180deg, var(--gold), var(--gold-600)); color:#1a1200; border-color:#997b33; font-weight:600; }
.btn-sm{ padding:6px 10px; font-size:12px; }
.pill{ display:inline-flex; align-items:center; padding:4px 8px; border:1px solid var(--bd-2); border-radius:999px; background:#16161a; font-size:11px; color:var(--tx-2); }
.stack-8>*+*{ margin-top:8px; }
.row-8>*+*{ margin-left:8px; }

.h1{ font-size:22px; line-height:1.2; font-weight:700; color:var(--tx-0); }
.h2{ font-size:14px; font-weight:600; color:var(--tx-1); }
.meta{ font-size:12px; color:var(--tx-3); }

.fade-in{ animation:fi .18s ease-out both; } @keyframes fi{ from{opacity:0; transform:translateY(4px)} to{opacity:1; transform:none} }

.skel{ position:relative; overflow:hidden; background:#141416; border-radius:8px; }
.skel::after{ content:""; position:absolute; inset:0; background:linear-gradient(90deg, transparent, rgba(255,255,255,.06), transparent); transform:translateX(-100%); animation:sh 1.2s infinite; }
@keyframes sh{ to{ transform:translateX(100%);} }

.ecc-section{ background:var(--bg-1); border:1px solid var(--bd-1); border-radius:var(--radius-xl); }
.ecc-section-head{ display:flex; align-items:center; justify-content:space-between; padding:12px 14px; border-bottom:1px solid var(--bd-1); }
.ecc-section-title{ font-size:13px; font-weight:600; }

.ecc-tabs{ display:flex; gap:6px; }
.ecc-tab{ padding:6px 10px; border-radius:999px; font-size:12px; background:#151518; border:1px solid var(--bd-2); color:var(--tx-2); }
.ecc-tab[aria-selected="true"]{ background:#1b1b20; color:var(--tx-1); border-color:var(--bd-1); }

.ecc-input,.ecc-select{ height:32px; padding:0 10px; background:#131316; color:var(--tx-1); border:1px solid var(--bd-2); border-radius:8px; font-size:12px; }
.ecc-filter{ padding:10px 14px; border-bottom:1px solid var(--bd-1); display:flex; gap:8px; }

.ecc-file-row{ display:flex; justify-content:space-between; align-items:center; padding:10px 12px; border:1px solid var(--bd-2); border-radius:10px; background:#121214; }
.ecc-file-row small{ color:var(--tx-3); }

.ecc-chip{ display:flex; align-items:flex-start; gap:10px; padding:10px 12px; border:1px solid var(--bd-2); border-radius:12px; background:#121214; }
.ecc-chip .meta{ margin-left:auto; }
.ecc-chip.danger{ box-shadow: inset 2px 0 0 #b4232a; }
CSS

# Ensure global import
if ! grep -q 'styles/genesis.css' src/main.tsx; then
  sed -i '1i import "./styles/genesis.css";' src/main.tsx
fi

############################################
# 2) Shared CardHero component
############################################
cat > src/components/ui/CardHero.tsx <<'TSX'
import React from "react";
import SourceBadges from "./SourceBadges"; // alias: we’ll re-export existing one if path differs

type Actions = Array<{label:string; href?:string; disabled?:boolean; onClick?():void}>;
type Props = {
  title: string;
  subtitle?: string;
  badges?: { doorloop?: boolean; corelogic?: boolean; m365?: boolean; dropbox?: boolean };
  actions?: Actions;
};

export default function CardHero({ title, subtitle, badges, actions }: Props){
  return (
    <div className="card fade-in" style={{marginBottom:12}}>
      <div className="card-body" style={{padding:'14px 16px'}}>
        <div style={{display:'flex', alignItems:'flex-start', justifyContent:'space-between', gap:12}}>
          <div className="min-w-0">
            <div className="h1 truncate">{title}</div>
            {subtitle ? <div className="meta" style={{marginTop:4}}>{subtitle}</div> : null}
            <div style={{marginTop:8}}>
              <SourceBadges
                doorloop={!!badges?.doorloop}
                corelogic={!!badges?.corelogic}
                m365={!!badges?.m365}
                dropbox={!!badges?.dropbox}
              />
            </div>
          </div>
          {actions?.length ? (
            <div className="row-8" style={{display:'flex', alignItems:'center', flexWrap:'wrap'}}>
              {actions.map((a,i)=> a.href
                ? <a key={i} className={`btn btn-sm ${a.disabled?'opacity-50 cursor-not-allowed':''}`} href={a.disabled? undefined : a.href}>{a.label}</a>
                : <button key={i} className="btn btn-sm" onClick={a.onClick} disabled={a.disabled}>{a.label}</button>
              )}
            </div>
          ) : null}
        </div>
      </div>
    </div>
  );
}
TSX

# In case SourceBadges lives elsewhere, create a thin re-export to current component
if [ ! -f src/components/ui/SourceBadges.tsx ] && [ -f src/components/ui/SourceBadges/index.tsx ]; then
  cat > src/components/ui/SourceBadges.tsx <<'TSX'
export { default } from "./SourceBadges/index";
TSX
fi

############################################
# 3) Tidy FilesTab + ActivityFeed visuals (keep your logic)
############################################
applypatch <<'PATCH'
*** Begin Patch
*** Update File: src/features/files/FilesTab.tsx
@@
-    <div className="ecc-section-card">
-      <div className="ecc-section-head">
-        <div className="ecc-section-title">Files</div>
+    <div className="ecc-section">
+      <div className="ecc-section-head">
+        <div className="ecc-section-title">Files</div>
         <div className="flex items-center gap-2">
           <div className="ecc-tabs">
             <button className="ecc-tab" aria-selected={tab==="dl"} aria-disabled={!doorloop} onClick={()=> doorloop && setTab("dl")}>DoorLoop</button>
             <button className="ecc-tab" aria-selected={tab==="dbx"} aria-disabled={!dropbox} onClick={()=> dropbox && setTab("dbx")}>Dropbox</button>
           </div>
         </div>
       </div>
-      <div className="ecc-filterbar">
+      <div className="ecc-filter">
         <input className="ecc-input" placeholder="Search all files…" value={query} onChange={e=>setQuery(e.target.value)} />
       </div>
-      <div className="ecc-files-list">
+      <div style="padding:10px 14px" className="stack-8">
         {!doorloop && !dropbox ? (
           <div className="text-sm text-neutral-400">No file sources connected. Connect Dropbox or DoorLoop to manage files.</div>
         ) : loading ? (
           <div className="text-sm text-neutral-400">Loading files…</div>
         ) : current.length === 0 ? (
           <div className="text-sm text-neutral-400">No files.</div>
         ) : current.map((f, i) => (
-          <div key={i} className="ecc-file-row">
+          <div key={i} className="ecc-file-row">
             <div className="truncate">
               <div className="font-medium text-[13px] truncate">{f.name}</div>
               <small>{f.source}{f.modified ? ` • ${new Date(f.modified).toLocaleDateString()}` : ""}</small>
             </div>
             {f.url ? <a className="text-[12px] underline" href={f.url} target="_blank">Open</a> : <span className="text-[12px] text-neutral-500">No link</span>}
           </div>
         ))}
       </div>
     </div>
*** End Patch
PATCH

applypatch <<'PATCH'
*** Begin Patch
*** Update File: src/features/activity/ActivityFeed.tsx
@@
-  return (
-    <div className="ecc-section-card">
-      <div className="ecc-section-head">
+  return (
+    <div className="ecc-section">
+      <div className="ecc-section-head">
         <div className="ecc-section-title">Activity</div>
         <div style={{fontSize:12, color:"#9a9aa2"}}>{rows.length ? `${rows.length} events` : ""}</div>
       </div>
-      <div className="ecc-filterbar">
+      <div className="ecc-filter">
         <select className="ecc-select" value={src} onChange={e=>setSrc(e.target.value)}>
           <option value="all">All sources</option>
           <option value="doorloop">DoorLoop</option>
           <option value="system">System</option>
           <option value="m365">M365</option>
           <option value="corelogic">CoreLogic</option>
         </select>
         <input className="ecc-input" type="date" value={from} onChange={e=>setFrom(e.target.value)} />
         <input className="ecc-input" type="date" value={to} onChange={e=>setTo(e.target.value)} />
       </div>
-      <div className="ecc-activity">
+      <div style="padding:10px 14px" className="stack-8">
         {loading ? (
           <div className="text-sm text-neutral-400">Loading activity…</div>
         ) : filtered.length === 0 ? (
           <div className="text-sm text-neutral-400">No events.</div>
         ) : filtered.map((ev, i)=>(
           <div key={ev.id || i} className={`ecc-chip ${String(ev.event_type||"").includes("LEGAL") ? "danger" : ""}`}>
             <span>{iconFor(ev)}</span>
             <div className="text-[13px]">
               <div className="font-medium">{titleFor(ev)}</div>
               {ev.label ? <div className="text-neutral-400 text-[12px]">{ev.label}</div> : null}
             </div>
             <div className="meta">{ev.created_at ? new Date(ev.created_at).toLocaleString() : ""}</div>
           </div>
         ))}
       </div>
     </div>
*** End Patch
PATCH

############################################
# 4) Use CardHero on all four card pages
############################################
applypatch <<'PATCH'
*** Begin Patch
*** Update File: src/pages/card/property/index.tsx
@@
-import SourceBadges from "../../../components/ui/SourceBadges";
+import CardHero from "../../../components/ui/CardHero";
@@
-  return (
-    <div className="ecc-enhancer-block">
-      {/* HERO */}
-      <div className="card bg-neutral-900 border border-neutral-800 mb-4">
-        <div className="px-4 py-4 flex items-start justify-between">
-          <div className="min-w-0">
-            {/* Subtle debug badge instead of loud banner */}
-            {isDebug ? <div className="text-[10px] text-neutral-500 mb-1">debug: property #{prop.id}</div> : null}
-            <h1 className="text-xl font-semibold truncate">{title || `Property #${prop.id}`}</h1>
-            <div className="text-xs text-neutral-500 mt-1">
-              ID: {prop.id}
-              {prop.city || prop.state || prop.postal_code ? (
-                <> · {[prop.city, prop.state].filter(Boolean).join(", ")} {prop.postal_code||""}</>
-              ) : null}
-            </div>
-            <div className="mt-2">
-              <SourceBadges
-                doorloop={!!integrations?.doorloop}
-                corelogic={!!integrations?.corelogic}
-                m365={!!integrations?.m365}
-                dropbox={!!integrations?.dropbox}
-              />
-            </div>
-          </div>
-          <div className="flex items-center gap-2 ml-4">
-            <a className={`btn btn-sm ${telHref?'':'opacity-50 cursor-not-allowed'}`} href={telHref} title={telHref? 'Call via system dialer' : 'No phone on file'}>Call</a>
-            <a className={`btn btn-sm ${m365 && teamsHref?'':'opacity-50 cursor-not-allowed'}`} href={m365 && teamsHref ? teamsHref : undefined} title={m365? (teamsHref?'Open Teams chat':'No email on file') : 'Microsoft 365 not configured'}>Message (Teams)</a>
-            <a className={`btn btn-sm ${mailHref?'':'opacity-50 cursor-not-allowed'}`} href={mailHref} title={mailHref?'Compose email':'No email on file'}>Email</a>
-          </div>
-        </div>
-      </div>
+  return (
+    <div className="ecc-page">
+      <CardHero
+        title={title || `Property #${prop.id}`}
+        subtitle={`ID: ${prop.id}${(prop.city||prop.state||prop.postal_code)?` · ${[prop.city,prop.state].filter(Boolean).join(", ")} ${prop.postal_code||""}`:""}`}
+        badges={{doorloop:!!integrations?.doorloop, corelogic:!!integrations?.corelogic, m365:!!integrations?.m365, dropbox:!!integrations?.dropbox}}
+        actions={[
+          {label:"Call", href: telHref, disabled: !telHref},
+          {label:"Message (Teams)", href: (m365 && teamsHref) ? teamsHref : undefined, disabled: !(m365 && teamsHref)},
+          {label:"Email", href: mailHref, disabled: !mailHref},
+        ]}
+      />
@@
-      <div className="grid grid-cols-1 lg:grid-cols-2 gap-4">
+      <div className="grid grid-cols-1 lg:grid-cols-2 gap-4 fade-in">
         <FilesTab
           doorloop={!!integrations?.doorloop}
           dropbox={!!integrations?.dropbox}
           entity="properties"
           refId={prop.id}
         />
         <ActivityFeed table="properties" refId={prop.id} />
       </div>
     </div>
   );
*** End Patch
PATCH

applypatch <<'PATCH'
*** Begin Patch
*** Update File: src/pages/card/unit/index.tsx
@@
-import SourceBadges from "../../../components/ui/SourceBadges";
+import CardHero from "../../../components/ui/CardHero";
@@
-  return (
-    <div className="ecc-enhancer-block">
-      <div className="card bg-neutral-900 border border-neutral-800 mb-4">
-        <div className="px-4 py-4 flex items-start justify-between">
-          <div className="min-w-0">
-            <h1 className="text-xl font-semibold truncate">{title||`Unit #${rec.id}`}</h1>
-            <div className="text-xs text-neutral-500 mt-1">ID: {rec.id}{rec.status?<> · {rec.status}</>:null}</div>
-            <div className="mt-2"><SourceBadges doorloop={!!integrations?.doorloop} corelogic={!!integrations?.corelogic} m365={!!integrations?.m365} dropbox={!!integrations?.dropbox}/></div>
-          </div>
-        </div>
-      </div>
+  return (
+    <div className="ecc-page">
+      <CardHero
+        title={title||`Unit #${rec.id}`}
+        subtitle={`ID: ${rec.id}${rec.status?` · ${rec.status}`:""}`}
+        badges={{doorloop:!!integrations?.doorloop, corelogic:!!integrations?.corelogic, m365:!!integrations?.m365, dropbox:!!integrations?.dropbox}}
+      />
       <div className="grid grid-cols-1 lg:grid-cols-2 gap-4">
         <FilesTab doorloop={!!integrations?.doorloop} dropbox={!!integrations?.dropbox} entity="units" refId={rec.id}/>
         <ActivityFeed table="units" refId={rec.id}/>
       </div>
     </div>
   );
*** End Patch
PATCH

applypatch <<'PATCH'
*** Begin Patch
*** Update File: src/pages/card/lease/index.tsx
@@
-import SourceBadges from "../../../components/ui/SourceBadges";
+import CardHero from "../../../components/ui/CardHero";
@@
-  return (
-    <div className="ecc-enhancer-block">
-      <div className="card bg-neutral-900 border border-neutral-800 mb-4">
-        <div className="px-4 py-4 flex items-start justify-between">
-          <div className="min-w-0">
-            <h1 className="text-xl font-semibold truncate">{title||`Lease #${rec.id}`}</h1>
-            <div className="text-xs text-neutral-500 mt-1">ID: {rec.id}</div>
-            <div className="mt-2"><SourceBadges doorloop={!!integrations?.doorloop} corelogic={!!integrations?.corelogic} m365={!!integrations?.m365} dropbox={!!integrations?.dropbox}/></div>
-          </div>
-        </div>
-      </div>
+  return (
+    <div className="ecc-page">
+      <CardHero
+        title={title||`Lease #${rec.id}`}
+        subtitle={`ID: ${rec.id}`}
+        badges={{doorloop:!!integrations?.doorloop, corelogic:!!integrations?.corelogic, m365:!!integrations?.m365, dropbox:!!integrations?.dropbox}}
+      />
       <div className="grid grid-cols-1 lg:grid-cols-2 gap-4">
         <FilesTab doorloop={!!integrations?.doorloop} dropbox={!!integrations?.dropbox} entity="leases" refId={rec.id}/>
         <ActivityFeed table="leases" refId={rec.id}/>
       </div>
     </div>
   );
*** End Patch
PATCH

applypatch <<'PATCH'
*** Begin Patch
*** Update File: src/pages/card/tenant/index.tsx
@@
-import SourceBadges from "../../../components/ui/SourceBadges";
+import CardHero from "../../../components/ui/CardHero";
@@
-  return (
-    <div className="ecc-enhancer-block">
-      <div className="card bg-neutral-900 border border-neutral-800 mb-4">
-        <div className="px-4 py-4 flex items-start justify-between">
-          <div className="min-w-0">
-            <h1 className="text-xl font-semibold truncate">{title}</h1>
-            <div className="text-xs text-neutral-500 mt-1">ID: {rec.id}</div>
-            <div className="mt-2"><SourceBadges doorloop={!!integrations?.doorloop} corelogic={!!integrations?.corelogic} m365={!!integrations?.m365} dropbox={!!integrations?.dropbox}/></div>
-          </div>
-          <div className="flex items-center gap-2 ml-4">
-            <a className={`btn btn-sm ${telHref?'':'opacity-50 cursor-not-allowed'}`} href={telHref}>Call</a>
-            <a className={`btn btn-sm ${m365&&teamsHref?'':'opacity-50 cursor-not-allowed'}`} href={m365&&teamsHref?teamsHref:undefined}>Message (Teams)</a>
-            <a className={`btn btn-sm ${mailHref?'':'opacity-50 cursor-not-allowed'}`} href={mailHref}>Email</a>
-          </div>
-        </div>
-      </div>
+  return (
+    <div className="ecc-page">
+      <CardHero
+        title={title}
+        subtitle={`ID: ${rec.id}`}
+        badges={{doorloop:!!integrations?.doorloop, corelogic:!!integrations?.corelogic, m365:!!integrations?.m365, dropbox:!!integrations?.dropbox}}
+        actions={[
+          {label:"Call", href: telHref, disabled: !telHref},
+          {label:"Message (Teams)", href: (m365 && teamsHref) ? teamsHref : undefined, disabled: !(m365 && teamsHref)},
+          {label:"Email", href: mailHref, disabled: !mailHref},
+        ]}
+      />
       <div className="grid grid-cols-1 lg:grid-cols-2 gap-4">
         <FilesTab doorloop={!!integrations?.doorloop} dropbox={!!integrations?.dropbox} entity="tenants" refId={rec.id}/>
         <ActivityFeed table="tenants" refId={rec.id}/>
       </div>
     </div>
   );
*** End Patch
PATCH

git add -A
git commit -m "ui(genesis): design tokens, shared CardHero, refined Files & Activity visuals, consistent page container" || true
echo "✅ Genesis UI Polish Pack applied. Restart dev server and reload card pages."

What improves (visually)

Consistent page container width and margins (.ecc-page) so cards are centered and balanced.

Standard CardHero with strong title, subdued subtitle, and right-aligned actions.

Unified badges, buttons, tabs, filters, timeline chips.

Dark palette tokens and subtle shadows for depth.

Small fade-in motion and skeleton utility (ready for when we wire loading states).

Quick check (60 seconds)

Reload /card/property/42, /card/lease/1, /card/unit/1, /card/tenant/1.

Look for: tight hero; tabs and filters clean; chips compact; typography balanced.

No stray “DL” text lines; only SourceBadges indicate provenance.

Buttons show as clear pills; disabled states are subtle and informative.