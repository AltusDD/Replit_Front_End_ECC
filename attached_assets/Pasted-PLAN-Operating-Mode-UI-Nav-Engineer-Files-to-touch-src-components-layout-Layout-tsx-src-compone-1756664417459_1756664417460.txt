PLAN

Operating Mode: UI-Nav Engineer
Files to touch:

src/components/layout/Layout.tsx

src/components/layout/navConfig.ts

src/components/Sidebar.tsx

src/styles/_ecc-override.css

src/main.tsx (ensure CSS import and router wrapper)

Risk: Low. All changes are localized and idempotent.
Rollback: restore *.bak created below.

BACKUP (Assistant: run these in the shell)
mkdir -p .archive
for f in src/components/layout/Layout.tsx src/components/layout/navConfig.ts src/components/Sidebar.tsx src/styles/_ecc-override.css src/main.tsx; do
  [ -f "$f" ] && cp "$f" "$f.bak"
done
zip -qr ".archive/nav-refresh-$(date +%Y%m%d-%H%M%S).zip" src/components src/styles || true

CHANGESET
1) src/components/layout/navConfig.ts

<proposed_file_replace file_path="src/components/layout/navConfig.ts" change_summary="Define canonical nav structure with parent icons and children">
import { ReactNode } from "react";
import {
LayoutDashboard,
Home,
Building2,
Layers3,
FileText,
Users,
UserRound,
KeyRound,
ClipboardList,
DollarSign,
Wrench,
Megaphone,
BadgeDollarSign,
} from "lucide-react";

export type NavChild = {
label: string;
to: string;
icon?: ReactNode;
};

export type NavSection = {
id: string;
title: string;
icon: ReactNode;
children: NavChild[];
};

export const NAV_SECTIONS: NavSection[] = [
{
id: "dashboard",
title: "Dashboard",
icon: <LayoutDashboard size={18} />,
children: [
{ label: "Home", to: "/dashboard", icon: <Home size={16} /> },
],
},
{
id: "portfolio",
title: "Portfolio v3",
icon: <Building2 size={18} />,
children: [
{ label: "Properties", to: "/portfolio/properties", icon: <Layers3 size={16} /> },
{ label: "Units", to: "/portfolio/units", icon: <KeyRound size={16} /> },
{ label: "Leases", to: "/portfolio/leases", icon: <FileText size={16} /> },
{ label: "Tenants", to: "/portfolio/tenants", icon: <Users size={16} /> },
{ label: "Owners", to: "/portfolio/owners", icon: <UserRound size={16} /> },
],
},
{
id: "cards",
title: "Cards",
icon: <ClipboardList size={18} />,
children: [
{ label: "Overview", to: "/cards/overview", icon: <ClipboardList size={16} /> },
{ label: "Delinquencies", to: "/cards/delinquencies", icon: <BadgeDollarSign size={16} /> },
{ label: "Vacancy", to: "/cards/vacancy", icon: <FileText size={16} /> },
],
},
{
id: "operations",
title: "Operations",
icon: <DollarSign size={18} />,
children: [
{ label: "Accounting", to: "/ops/accounting", icon: <DollarSign size={16} /> },
{ label: "Leasing", to: "/ops/leasing", icon: <KeyRound size={16} /> },
{ label: "Maintenance", to: "/ops/maintenance", icon: <Wrench size={16} /> },
{ label: "Marketing", to: "/ops/marketing", icon: <Megaphone size={16} /> },
],
},
];

// Extend easily: push more sections/children here in the same format.
</proposed_file_replace>

2) src/components/Sidebar.tsx

<proposed_file_replace file_path="src/components/Sidebar.tsx" change_summary="Rebuild sidebar: brand header, collapse/pin, hover flyout, a11y, active highlighting">
import React from "react";
import { NavLink, useLocation } from "react-router-dom";
import { NAV_SECTIONS } from "./layout/navConfig";
import { Pin, PinOff } from "lucide-react";

const PIN_KEY = "ecc.sidebar.pinned";

function usePinned(): [boolean, (v: boolean) => void] {
const [pinned, setPinned] = React.useState<boolean>(() => {
const raw = localStorage.getItem(PIN_KEY);
return raw ? raw === "true" : true; // default pinned
});
React.useEffect(() => localStorage.setItem(PIN_KEY, String(pinned)), [pinned]);
return [pinned, setPinned];
}

export default function Sidebar() {
const [pinned, setPinned] = usePinned();
const { pathname } = useLocation();
const collapsed = !pinned;

return (
<aside
className={[
"ecc-sidebar",
pinned ? "is-pinned" : "is-collapsed",
].join(" ")}
data-ecc="sidebar"
aria-label="Primary"
>
<div className="ecc-sidebar__header">
<a className="ecc-brand" href="/" aria-label="Altus home">
{/* Try logo in public/, otherwise fallback to text */}
<img
src="/altus-mark.svg"
alt="Altus"
className="ecc-brand__logo"
onError={(e) => {
(e.currentTarget as HTMLImageElement).style.display = "none";
}}
/>
<span className="ecc-brand__text">Altus</span>
</a>

    <button
      className="ecc-pin"
      onClick={() => setPinned(!pinned)}
      aria-pressed={pinned}
      aria-label={pinned ? "Unpin sidebar" : "Pin sidebar"}
      title={pinned ? "Unpin" : "Pin"}
    >
      {pinned ? <Pin size={14} /> : <PinOff size={14} />}
      <span className="ecc-pin__label">{pinned ? "Unpin" : "Pin"}</span>
    </button>
  </div>

  <nav className="ecc-nav" role="navigation">
    {NAV_SECTIONS.map((section) => {
      const isActiveSection = section.children.some((c) =>
        pathname.startsWith(c.to)
      );
      return (
        <div key={section.id} className="ecc-group" data-active={isActiveSection || undefined}>
          <div className="ecc-group__title">
            <span className="ecc-group__icon">{section.icon}</span>
            <span className="ecc-group__text">{section.title}</span>
          </div>

          <ul className="ecc-items" role="list">
            {section.children.map((child) => (
              <li key={child.to} className="ecc-item" data-collapsed={collapsed || undefined}>
                <NavLink
                  to={child.to}
                  className={({ isActive }) =>
                    [
                      "ecc-link",
                      isActive ? "is-active" : undefined,
                    ]
                      .filter(Boolean)
                      .join(" ")
                  }
                  end
                >
                  <span className="ecc-link__icon">{child.icon}</span>
                  <span className="ecc-link__text">{child.label}</span>
                </NavLink>

                {/* Flyout when collapsed */}
                {collapsed && (
                  <div className="ecc-flyout">
                    <div className="ecc-flyout__header">
                      <span className="ecc-group__icon">{section.icon}</span>
                      <span className="ecc-group__text">{section.title}</span>
                    </div>
                    <ul className="ecc-flyout__list" role="list">
                      {section.children.map((fo) => (
                        <li key={fo.to}>
                          <NavLink
                            to={fo.to}
                            className={({ isActive }) =>
                              ["ecc-flyout__link", isActive ? "is-active" : undefined]
                                .filter(Boolean)
                                .join(" ")
                            }
                            end
                          >
                            <span className="ecc-link__icon">{fo.icon}</span>
                            <span className="ecc-link__text">{fo.label}</span>
                          </NavLink>
                        </li>
                      ))}
                    </ul>
                  </div>
                )}
              </li>
            ))}
          </ul>
        </div>
      );
    })}
  </nav>
</aside>


);
}
</proposed_file_replace>

3) src/components/layout/Layout.tsx

<proposed_file_replace file_path="src/components/layout/Layout.tsx" change_summary="Wire sidebar + content area; maintain outlet rendering">
import React from "react";
import { Outlet } from "react-router-dom";
import Sidebar from "../Sidebar";

export default function Layout() {
return (
<div className="ecc-shell" data-ecc="layout">
<Sidebar />
<main className="ecc-content" role="main">
<Outlet />
</main>
</div>
);
}
</proposed_file_replace>

4) src/styles/_ecc-override.css

<proposed_file_replace file_path="src/styles/_ecc-override.css" change_summary="Brand theme + sidebar, collapse + hover flyout, active states">
:root {
--ecc-bg: #0e1116;
--ecc-panel: #141922;
--ecc-border: rgba(255,255,255,0.08);
--ecc-muted: rgba(255,255,255,0.65);
--ecc-text: #eef2f7;
--ecc-accent: #f0c23d; /* Altus gold */
--ecc-accent-2: #525bff;
--ecc-radius: 14px;
--ecc-w: 300px;
--ecc-w-collapsed: 68px;
--ecc-z-flyout: 50;
}

.ecc-shell {
display: grid;
grid-template-columns: var(--ecc-w) 1fr;
min-height: 100dvh;
background: var(--ecc-bg);
color: var(--ecc-text);
}
.ecc-content { padding: 24px; }

.ecc-sidebar {
position: sticky;
top: 0;
height: 100dvh;
background: linear-gradient(180deg, #10151e 0%, #0d1118 100%);
border-right: 1px solid var(--ecc-border);
transition: width .18s ease;
width: var(--ecc-w);
overflow: hidden;
}
.ecc-sidebar.is-collapsed { width: var(--ecc-w-collapsed); }
.ecc-sidebar.is-collapsed ~ .ecc-content { padding-left: 24px; }

.ecc-sidebar__header {
display: flex; align-items: center; justify-content: space-between;
padding: 16px 14px 8px 14px;
}
.ecc-brand {
display: inline-flex; align-items: center; gap: 10px;
text-decoration: none; color: var(--ecc-text);
}
.ecc-brand__logo { width: 28px; height: 28px; }
.ecc-brand__text { font-weight: 700; letter-spacing: .3px; }

.ecc-pin {
display: inline-flex; align-items: center; gap: 6px;
background: #0f141c; color: var(--ecc-muted);
border: 1px solid var(--ecc-border);
padding: 6px 10px; border-radius: 999px;
cursor: pointer;
}
.ecc-pin:hover { color: var(--ecc-text); border-color: rgba(255,255,255,.16); }
.ecc-pin__label { font-size: 12px; }

.ecc-nav { padding: 8px 10px 18px 10px; overflow-y: auto; height: calc(100dvh - 56px); }
.ecc-group {
background: var(--ecc-panel);
border: 1px solid var(--ecc-border);
border-radius: var(--ecc-radius);
padding: 10px; margin: 10px 4px 14px 4px;
}
.ecc-group[data-active] { box-shadow: inset 0 0 0 1px rgba(240,194,61,.25); }

.ecc-group__title {
display:flex; align-items:center; gap:10px;
font-size: 12px; letter-spacing: .6px; text-transform: uppercase;
color: var(--ecc-muted);
padding: 4px 6px 8px 6px;
}
.ecc-group__icon { display:inline-flex; width:18px; color: var(--ecc-muted); }
.ecc-group__text { white-space: nowrap; }

.ecc-items { list-style: none; margin: 0; padding: 4px; }
.ecc-item { position: relative; }

.ecc-link {
display:flex; align-items:center; gap:10px;
padding: 10px 10px; border-radius: 10px;
color: var(--ecc-muted); text-decoration: none;
outline: none; border: 1px solid transparent;
}
.ecc-link:hover { color: var(--ecc-text); background: rgba(255,255,255,.04); }
.ecc-link.is-active {
color: var(--ecc-text);
background: rgba(240,194,61,.09);
border-color: rgba(240,194,61,.35);
box-shadow: 0 0 0 1px rgba(240,194,61,.15) inset;
}
.ecc-link__icon { width: 18px; display: inline-flex; color: var(--ecc-muted); }
.ecc-link.is-active .ecc-link__icon { color: var(--ecc-accent); }
.ecc-link__text { white-space: nowrap; }

.ecc-sidebar.is-collapsed .ecc-group__text,
.ecc-sidebar.is-collapsed .ecc-link__text,
.ecc-sidebar.is-collapsed .ecc-pin__label,
.ecc-sidebar.is-collapsed .ecc-brand__text {
display: none;
}

/* Collapsed pill layout */
.ecc-sidebar.is-collapsed .ecc-group { padding: 8px; }
.ecc-sidebar.is-collapsed .ecc-link { justify-content: center; padding: 12px 8px; }

/* Flyout */
.ecc-item[data-collapsed] .ecc-flyout {
position: absolute; left: calc(100% + 8px); top: -8px;
width: 240px; background: var(--ecc-panel);
border: 1px solid var(--ecc-border);
border-radius: var(--ecc-radius); padding: 8px; display: none;
z-index: var(--ecc-z-flyout);
}
.ecc-item[data-collapsed]:hover .ecc-flyout { display: block; }
.ecc-flyout__header {
display:flex; align-items:center; gap:10px; color: var(--ecc-muted);
font-size: 12px; letter-spacing:.6px; text-transform:uppercase; padding: 6px;
}
.ecc-flyout__list { list-style:none; margin:0; padding: 6px; }
.ecc-flyout__link {
display:flex; align-items:center; gap:10px;
color: var(--ecc-muted); text-decoration:none;
padding: 8px 10px; border-radius: 10px;
}
.ecc-flyout__link:hover { background: rgba(255,255,255,.05); color: var(--ecc-text); }
.ecc-flyout__link.is-active { background: rgba(240,194,61,.1); color: var(--ecc-text); }
</proposed_file_replace>

5) src/main.tsx (safe ensure: Router + CSS import)

<proposed_file_replace file_path="src/main.tsx" change_summary="Ensure CSS is loaded and Router is active">
import React from "react";
import ReactDOM from "react-dom/client";
import { createBrowserRouter, RouterProvider } from "react-router-dom";
import Layout from "./components/layout/Layout";
import "./styles/_ecc-override.css";

// NOTE: Add or adjust your route elements as needed
const router = createBrowserRouter([
{
path: "/",
element: <Layout />,
children: [
{ path: "/dashboard", element: <div>ECC dashboard is live.</div> },
// Stubs so links don’t 404 while we wire pages:
{ path: "/portfolio/properties", element: <div>Properties</div> },
{ path: "/portfolio/units", element: <div>Units</div> },
{ path: "/portfolio/leases", element: <div>Leases</div> },
{ path: "/portfolio/tenants", element: <div>Tenants</div> },
{ path: "/portfolio/owners", element: <div>Owners</div> },
{ path: "/cards/overview", element: <div>Cards Overview</div> },
{ path: "/cards/delinquencies", element: <div>Delinquencies</div> },
{ path: "/cards/vacancy", element: <div>Vacancy</div> },
{ path: "/ops/accounting", element: <div>Accounting</div> },
{ path: "/ops/leasing", element: <div>Leasing</div> },
{ path: "/ops/maintenance", element: <div>Maintenance</div> },
{ path: "/ops/marketing", element: <div>Marketing</div> },
{ path: "*", element: <div style={{ padding: 24 }}>Not Found</div> },
],
},
]);

ReactDOM.createRoot(document.getElementById("root")!).render(
<React.StrictMode>
<RouterProvider router={router} />
</React.StrictMode>
);
</proposed_file_replace>