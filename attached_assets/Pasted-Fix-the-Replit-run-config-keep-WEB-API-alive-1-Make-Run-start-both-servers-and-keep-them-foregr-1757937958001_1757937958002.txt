Fix the Replit run config (keep WEB+API alive)
1) Make “Run” start both servers and keep them foreground

Ensure these package.json scripts exist exactly (adjust if names differ, but keep the shape):

{
  "scripts": {
    "guardrail": "node scripts/guardrail-check.mjs",
    "dev:web": "vite",
    "dev:api": "tsx server/index.ts",
    "dev": "npm run guardrail && concurrently -k -n WEB,API -c blue,magenta \"npm:dev:web\" \"npm:dev:api\""
  }
}


-k in concurrently ensures if one process dies, the other is cancelled. That’s what we want in dev.

2) Tell Replit what to run

Create or update a .replit at the repo root with this minimal config:

run = "bash -lc 'npm run dev'"
entrypoint = "package.json"


This makes the green “Run” button execute npm run dev and keep both Vite (5173) and API (8787) running in the foreground so Replit doesn’t kill them.

3) Do not use Workflows to run the server

Use Workflows for one-off tasks (e.g., lint, tests, migrations).

Use the Run button to start long-lived dev servers.

If you must create a workflow for start, it has to run exactly npm run dev and never return (i.e., a long-running step). Otherwise Workflows will exit and kill the processes.

Sanity checks (in order)

Click Run (not a workflow). You should see:

[EnvLock] …

[Dev API] Listening on :8787

VITE v5.x ready … ➜ Local: http://localhost:5173/

From the shell:

# prove API stays up
curl -s http://localhost:8787/api/health
curl -s http://localhost:8787/api/diag/env

# discover real IDs in THIS DB
curl -s http://localhost:8787/api/rpc/diag/ids || curl -s http://localhost:8787/api/diag/ids


With those IDs, hit the five RPCs:

curl -s "http://localhost:8787/api/rpc/get_property_card?id=<P>"
curl -s "http://localhost:8787/api/rpc/get_unit_card?id=<U>"
curl -s "http://localhost:8787/api/rpc/get_lease_card?id=<L>"
curl -s "http://localhost:8787/api/rpc/get_owner_card?id=<O>"
curl -s "http://localhost:8787/api/rpc/get_tenant_card?id=<T>"


In the browser (the Vite UI), visit:

/card/property/<P>

/card/unit/<U>

/card/lease/<L>

/card/owner/<O>

/card/tenant/<T>

Why this fixes it

Workflows are job runners; they exit, which kills your servers.

The Run button uses .replit to start a long-lived foreground command (npm run dev), so both WEB and API persist.

Vite proxies /api → :8787, so the app works as designed. Diagnostics hitting :8787 directly are only for local shell proof.

One last note (env)

Your EnvLock shows ANON_KEY: 'MISSING'. That’s fine for the server (it uses SERVICE_ROLE), but if the browser ever needs Supabase (e.g., public fetches), set:

NEXT_PUBLIC_SUPABASE_URL=...
NEXT_PUBLIC_SUPABASE_ANON_KEY=...


(We’ve kept everything BFF-side so you shouldn’t need it for the asset cards, but it’s good hygiene.)

If “Run” shows the three lines above and the curls succeed, you’re done. If “Run” still stops on its own, paste the last 30 lines of the Run console and I’ll give you a one-file micro-patch to keep the process pinned.