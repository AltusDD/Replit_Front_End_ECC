Here’s the minimal, safe path that touches infra only (no app code, no sidebar files):

A) Quick-run (bypass Start button)

In the Replit Shell:

pkill -f vite || true
npm run dev


If you see Vite say “➜ Local: http://localhost:5000”
, your app is live at the public Replit URL. If that works, your code is fine—the Start button just isn’t wired.

B) Wire the Start button (infra only)

Paste this once in the Shell (it only sets run command + port; does not touch your nav files):

set -e

# 1) Kill any stuck vite
pkill -f vite || true

# 2) Ensure vite scripts exist (no code changes)
node - <<'NODE'
const fs = require('fs');
const p = JSON.parse(fs.readFileSync('package.json','utf8'));
p.scripts = p.scripts || {};
p.scripts.dev = "vite --host --port 5000";
p.scripts.build = p.scripts.build || "vite build";
p.scripts.preview = "vite preview --host --port 5000";
fs.writeFileSync('package.json', JSON.stringify(p, null, 2));
console.log("package.json scripts set → dev/build/preview");
NODE

# 3) Minimal vite config (infra)
[ -f vite.config.ts ] || cat > vite.config.ts <<'TS'
import { defineConfig } from "vite";
import react from "@vitejs/plugin-react";
export default defineConfig({
  plugins: [react()],
  server: { host: true, port: 5000, strictPort: true },
  preview: { host: true, port: 5000, strictPort: true },
});
TS

# 4) Tell Replit what to run
cat > .replit <<'INI'
run = "npm run dev"
hidden = [".cache", ".vite", "dist", "node_modules"]
INI

# 5) Make sure Node is available (no app code touched)
if [ ! -f replit.nix ]; then
  cat > replit.nix <<'NIX'
{ pkgs }: { deps = [ pkgs.nodejs_20 ]; }
NIX
fi

# 6) Start
npm run dev

C) If Start still doesn’t light up

Sometimes Replit needs one nudge:

Click the square Stop button once.

Click Run again (it should now use .replit → npm run dev).

If it still refuses, keep the Shell running npm run dev — that serves the public URL just fine.

D) Quick sanity checks (no code changes)

If anything seems off, run these and paste outputs if you want me to read them:

node -v && npm -v
cat .replit
node -e "console.log(require('./package.json').scripts)"
rg -n "(react-router-dom|<Sidebar|class(Name)?=['\"]sidebar)" src || true


The rg check just confirms we’re not accidentally mounting a second rail or reintroducing react-router-dom.