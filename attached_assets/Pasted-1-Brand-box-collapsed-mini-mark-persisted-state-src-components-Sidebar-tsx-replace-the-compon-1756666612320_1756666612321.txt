1) Brand box + collapsed mini-mark + persisted state

src/components/Sidebar.tsx (replace the component with this)

import { Link, useLocation } from "wouter";
import { useEffect, useState } from "react";
import { NAV_SECTIONS, type NavItem } from "./layout/navConfig";
import { Pin, PinOff } from "lucide-react";

const LS = {
  get<T>(k: string, d: T): T {
    try { const v = localStorage.getItem(k); return v ? JSON.parse(v) : d; } catch { return d; }
  },
  set<T>(k: string, v: T) { try { localStorage.setItem(k, JSON.stringify(v)); } catch {} },
};

function ItemIcon({ item }: { item: NavItem }) {
  const Ico = item.icon;
  return Ico ? <Ico className="ecc-link__icon" /> : null;
}

function NavLinkItem({ item }: { item: NavItem }) {
  const [location] = useLocation();
  const active = location === item.href;
  return (
    <Link href={item.href}>
      <a className={`ecc-link ${active ? "is-active" : ""}`}>
        <ItemIcon item={item} />
        <span className="ecc-link__label">{item.label}</span>
      </a>
    </Link>
  );
}

export default function Sidebar() {
  const [collapsed, setCollapsed] = useState<boolean>(LS.get("ecc:nav:collapsed", false));
  const [pinned, setPinned] = useState<boolean>(LS.get("ecc:nav:pinned", true));

  useEffect(() => LS.set("ecc:nav:collapsed", collapsed), [collapsed]);
  useEffect(() => LS.set("ecc:nav:pinned", pinned), [pinned]);

  return (
    <aside className={`ecc-sidebar ${collapsed ? "ecc--collapsed" : ""}`}>
      <div className="ecc-sidebar__inner">
        {/* Brand */}
        <div className="ecc-sidebar__brand">
          <div className="ecc-logo-box">
            {/* full logo when expanded */}
            <img
              src="/brand/altus-logo.png"
              alt="Altus Realty Group"
              className="ecc-logo"
              loading="eager"
            />
            {/* compact shield when collapsed (use .jpg if that’s your filename) */}
            <img
              src="/brand/altus-mark.png"
              alt=""
              className="ecc-logo-mini-img"
              aria-hidden="true"
            />
          </div>

          <button className="ecc-pin" title={pinned ? "Unpin" : "Pin"} onClick={() => setPinned(v => !v)}>
            {pinned ? <Pin className="w-4 h-4" /> : <PinOff className="w-4 h-4" />}
          </button>
        </div>

        {/* Groups */}
        <nav className="ecc-groups" aria-label="Primary">
          {NAV_SECTIONS.map((section) => (
            <div key={section.id} className="ecc-group">
              <div className="ecc-group__title">
                {section.icon ? <section.icon className="ecc-group__icon" /> : null}
                <span>{section.title}</span>
              </div>

              <div className="ecc-group__list">
                {section.items.map((it) => (
                  <NavLinkItem key={it.href} item={it} />
                ))}
              </div>

              {/* Flyout visible only when collapsed */}
              <div className="ecc-flyout">
                <div className="ecc-flyout__header">{section.title}</div>
                <div className="ecc-flyout__list">
                  {section.items.map((it) => (
                    <NavLinkItem key={`${section.id}:${it.href}`} item={it} />
                  ))}
                </div>
              </div>
            </div>
          ))}
        </nav>

        {/* Collapse control */}
        <div className="ecc-collapse">
          <button onClick={() => setCollapsed(v => !v)} aria-pressed={collapsed}>
            {collapsed ? "Expand" : "Collapse"}
          </button>
        </div>
      </div>
    </aside>
  );
}


Also ensure the override CSS is loaded once:

src/main.tsx (top-level imports)

import "./styles/_ecc-override.css";

2) Constrain the logo + fly-out/collapse styles

Append these rules to src/styles/_ecc-override.css (or update existing):

/* Sidebar sizing */
.ecc-sidebar { width: 280px; background: #0f1216; border-right: 1px solid rgba(255,255,255,.06); transition: width .18s ease; }
.ecc--collapsed.ecc-sidebar { width: 68px; }
.ecc-sidebar__inner { height: 100%; padding: 12px; display: flex; flex-direction: column; gap: 12px; }

/* Brand area */
.ecc-sidebar__brand { display:flex; align-items:center; justify-content:space-between; gap:8px; padding:6px 4px 2px; }
.ecc-logo-box {
  width: 180px; max-width: 100%;
  height: 44px; padding: 4px 8px;
  border-radius: 12px; border: 1px solid rgba(255,255,255,.08);
  background: rgba(255,255,255,.02);
  display:flex; align-items:center; justify-content:center; overflow:hidden;
}
.ecc-logo { width: 100%; height: 100%; object-fit: contain; }
.ecc-logo-mini-img { width: 28px; height: 28px; object-fit: contain; display: none; }
.ecc-pin { background: transparent; border: 0; color: #cfcfcf; cursor: pointer; padding: 4px; }

/* When collapsed, show the mini mark and hide the full logo */
.ecc--collapsed .ecc-logo { display: none; }
.ecc--collapsed .ecc-logo-mini-img { display: block; }

/* Groups & links */
.ecc-group { position: relative; padding: 8px; border-radius: 12px; }
.ecc-group__title { display:flex; align-items:center; gap:.5rem; color:#dcdcdc; opacity:.9; font-weight:600; padding:2px 8px 8px; }
.ecc-group__icon { width: 16px; height:16px; opacity:.85; }
.ecc-group__list { display:grid; gap:4px; }

.ecc-link { display:flex; align-items:center; gap:.625rem; padding:.5rem .75rem; border-radius:.75rem; color:#c8d0d8; border:1px solid transparent; }
.ecc-link:hover { background: rgba(255,255,255,.04); border-color: rgba(255,255,255,.06); }
.ecc-link.is-active { outline:2px solid #ffc658; color:#fff; }
.ecc-link__icon { width:18px; height:18px; }

/* Collapsed behavior */
.ecc--collapsed .ecc-group__title,
.ecc--collapsed .ecc-link .ecc-link__label { display:none; }
.ecc--collapsed .ecc-group__list { display:none; }
.ecc--collapsed .ecc-link { justify-content:center; padding:.5rem; }

/* Flyout appears on hover when collapsed */
.ecc-flyout { display:none; position:absolute; left:72px; top:8px; background:#0f1216; border:1px solid rgba(255,255,255,.08);
  padding:8px; border-radius:12px; min-width:220px; z-index:30; box-shadow:0 8px 24px rgba(0,0,0,.35); }
.ecc--collapsed .ecc-group:hover .ecc-flyout { display:block; }
.ecc-flyout__header { font-weight:600; color:#e9e9e9; margin:4px 8px 8px; }
.ecc-flyout__list { display:grid; gap:4px; }

.ecc-collapse { margin-top:auto; padding:8px; }

3) Define the sections + icons (fixes “Icons is not defined” + missing parents/children)

Create/replace src/components/layout/navConfig.ts:

import type { LucideIcon } from "lucide-react";
import {
  Home, LayoutDashboard, FolderTree, Building2, DoorOpen, FileText,
  Users, Crown, LayoutGrid, AlertCircle, HomeOff,
  Calculator, FileSignature, Wrench, Megaphone
} from "lucide-react";

export type NavItem = { label: string; href: string; icon?: LucideIcon };
export type NavSection = { id: string; title: string; icon?: LucideIcon; items: NavItem[] };

export const NAV_SECTIONS: NavSection[] = [
  {
    id: "dashboard",
    title: "Dashboard",
    icon: LayoutDashboard,
    items: [{ label: "Home", href: "/dashboard", icon: Home }],
  },
  {
    id: "portfolio",
    title: "Portfolio v3",
    icon: FolderTree,
    items: [
      { label: "Properties", href: "/properties", icon: Building2 },
      { label: "Units", href: "/units", icon: DoorOpen },
      { label: "Leases", href: "/leases", icon: FileText },
      { label: "Tenants", href: "/tenants", icon: Users },
      { label: "Owners", href: "/owners", icon: Crown },
    ],
  },
  {
    id: "cards",
    title: "Cards",
    icon: LayoutGrid,
    items: [
      { label: "Overview", href: "/cards/overview", icon: LayoutGrid },
      { label: "Delinquencies", href: "/cards/delinquencies", icon: AlertCircle },
      { label: "Vacancy", href: "/cards/vacancy", icon: HomeOff },
    ],
  },
  {
    id: "ops",
    title: "Operations",
    icon: FolderTree,
    items: [
      { label: "Accounting", href: "/ops/accounting", icon: Calculator },
      { label: "Leasing", href: "/ops/leasing", icon: FileSignature },
      { label: "Maintenance", href: "/ops/maintenance", icon: Wrench },
      { label: "Marketing", href: "/ops/marketing", icon: Megaphone },
    ],
  },
];


You already installed lucide-react via pnpm, so these icons will resolve and eliminate the “Icons is not defined” error.
The named export NAV_SECTIONS is provided here (fixes “does not provide an export named ‘NAV_SECTIONS’”).

4) Place the compact mark

Save the shield art you shared as /public/brand/altus-mark.png.
If you keep it as .jpg, just change the src in Sidebar.tsx to /brand/altus-mark.jpg.

5) Quick verification checklist

Reload: the big logo sits neatly inside the brand box; sidebar width stable.

Click Collapse: the brand switches to the shield mini mark; group labels hide; hovering a group shows the fly-out with its items.

Refresh: collapsed/pinned state persists (via localStorage).

No “Icons is not defined” or “NAV_SECTIONS” errors in the console.

If any routes in the list aren’t wired yet, tell me which ones and I’ll add the route stubs so navigation lands somewhere meaningful.