Replit — “Unblock & Fallback” Fix Pack (copy/paste into Replit Chat)

Mode: Read–Write (allow code edits)
Goal: Remove the “Owner ID Required” overlay, enable typeahead-by-default, and add a resilient API fallback for entity cards so they work whether the backend uses /entities/<plural>/<id> or /entities/<plural>?id=<id>.

You are acting as our ECC UI maintainer. Make the following code changes with clean diffs and no unrelated edits.

## 1) Owner Transfer — remove hard gate and show form by default
File: src/features/owners/routes/OwnerTransferPage.tsx
- Today it blocks the page unless ?id=OWNER_ID is present and renders an overlay.
- Change behavior to:
  - If `id` param exists: load that owner’s context as before.
  - If `id` is missing: DO NOT render the overlay. Render the normal page with:
    - Two typeaheads: "Source Owner" and "Target Owner"
    - A small alert text at the top: “Tip: include ?id=<sourceOwnerId> to prefill source context.”
  - Ensure subsequent actions (initiate/approve/authorize/execute) still work when the source owner is chosen via typeahead.

Acceptance:
- Visiting /owners/transfer (no query) shows the full transfer page with typeaheads and buttons enabled (they can be no-ops until owners are selected).
- Visiting /owners/transfer?id=1 keeps the existing prefill behavior.

## 2) Cards API — add plural/path <-> plural/query fallback
We must support both:
- /api/entities/<plural>/<id>
- /api/entities/<plural>?id=<id>

Create (or update) a small helper:
File: src/lib/api.ts

Add:
export async function fetchEntity(entityPlural: string, id: string) {
  const base = import.meta.env.VITE_API_BASE_URL || "";
  const tryUrls = [
    `${base}/api/entities/${entityPlural}/${id}`,
    `${base}/api/entities/${entityPlural}?id=${encodeURIComponent(id)}`
  ];
  let lastErr: any;
  for (const url of tryUrls) {
    try {
      const r = await fetch(url);
      if (r.ok) return await r.json();
    } catch (e) { lastErr = e; }
  }
  throw lastErr || new Error("Failed to fetch entity");
}

Then update the card hooks/pages to use it:

- src/pages/card/property/api.ts (or the property hook location)
  -> use fetchEntity("properties", id)

- src/pages/card/unit/api.ts
  -> use fetchEntity("units", id)

- src/pages/card/lease/api.ts
  -> use fetchEntity("leases", id)

- src/pages/card/tenant/api.ts
  -> use fetchEntity("tenants", id)

- src/pages/card/owner/api.ts
  -> use fetchEntity("owners", id)

If a page currently inlines fetch() with a hardcoded path, swap it to the helper.

Acceptance:
- /card/property/42, /card/unit/45, /card/lease/1, /card/tenant/1, /card/owner/1
  no longer show “Failed to load …”. They render with stub JSON (e.g., “Unit #45”) if the backend returns minimal data.

## 3) Small UX polish requested earlier
- Ensure inner card panels use our light grey token (bg-[var(--ecc-gray-850,#f8f9fa)] and matching subtle border) like we applied on Owner Transfer.
- Do not change layouts or spacing; just ensure consistency.

## Output
Return a short summary of changed files and a test checklist I can follow in the browser.