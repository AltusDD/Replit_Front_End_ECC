What to do (copy-paste to Replit A)

Goal: Use a Node version that exists on this channel, and make sure npm is on PATH. We’ll pin Node 18 (meets Vite ≥18 requirement) and explicitly add npm.

1) Write clean configs (infra only)
set -euxo pipefail

# Backups
cp -f replit.nix replit.nix.bak 2>/dev/null || true
cp -f .replit .replit.bak 2>/dev/null || true
cp -f package.json package.json.bak 2>/dev/null || true

# Replit Nix env: Node 18 + npm (both exist on legacy channels)
cat > replit.nix <<'NIX'
{ pkgs }: {
  deps = [
    pkgs.nodejs_18
    pkgs.nodePackages.npm
  ];
}
NIX

# Run button: use npm; packager uses npm too
cat > .replit <<'INI'
run = "npm run dev"
hidden = [".cache", ".vite", "dist", "node_modules"]

[packager]
install = "npm ci || npm i"
INI

# Ensure scripts are present (don’t touch other fields)
node - <<'NODE'
const fs = require('fs');
const p = JSON.parse(fs.readFileSync('package.json','utf8'));
p.scripts = Object.assign({
  "dev": "vite --host --port 5000",
  "build": "vite build",
  "preview": "vite preview --host 0.0.0.0 --port 5000"
}, p.scripts || {});
fs.writeFileSync('package.json', JSON.stringify(p, null, 2));
console.log("package.json scripts verified.");
NODE

2) Rebuild & start

After saving replit.nix, Replit will show a Rebuild environment banner. Click Rebuild.

Then in the Shell:

# Kill any stray Vite
pkill -f vite || true

# Avoid mixed managers
rm -f pnpm-lock.yaml yarn.lock || true

# Confirm Node & npm exist now
node -v
npm -v

# Install if needed, then start
[ -d node_modules ] || npm ci || npm i
npm run dev

3) You should see:

A version for both node -v and npm -v (no “command not found”).

Vite listening on http://0.0.0.0:5000/.

The Run button works (it runs npm run dev from .replit).

Why this fixes it

Your channel doesn’t have nodejs-20_x. Pinning nodejs_18 avoids the missing-attr error but still satisfies Vite (Node ≥ 18).

Adding pkgs.nodePackages.npm guarantees npm on PATH, so the earlier bash: npm: command not found can’t occur.

Setting [packager].install ensures Replit uses npm for dependency installs, matching the run command.

If anything still fails, paste the last ~30 lines from the Shell (especially the outputs of node -v, npm -v, and the first error after npm run dev) and I’ll zero in on it.