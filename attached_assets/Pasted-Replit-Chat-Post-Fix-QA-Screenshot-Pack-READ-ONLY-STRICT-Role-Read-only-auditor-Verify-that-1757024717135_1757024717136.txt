Replit Chat — Post-Fix QA & Screenshot Pack (READ-ONLY, STRICT)

Role
Read-only auditor. Verify that all five Portfolio V3 pages render with real data and Genesis behaviors. Do not change code in this step.

Guardrails

No code edits.

No formatting.

No package changes.

Only read, run, and report.

Do

Build + typecheck.

Hit each page route: /portfolio/properties, /units, /leases, /tenants, /owners.

For each page, capture:

One full-page screenshot (top of page showing KPIs + table header + first ~10 rows).

A DOM snapshot proving: zebra banding present, sticky headers, pagination at bottom with options [25,50,100,150,200], per-column filter controls visible, double-click handler bound on rows (report selector used).

Hit API endpoints and show the first item keys (no PII values):

/api/portfolio/properties, /units, /leases, /tenants, /owners

For each page output a data presence checklist (✅/❌):

Properties: zip, units, occPct, active

Units: property, unit, beds, baths, sqft, marketRent

Leases: property.name, unit.label, tenants[], rent, start, end, status

Tenants: name, type (prospect/lease/secondary), email, phone, property.name, unit.label

Owners: company (bold in table), email, phone, active

Confirm:

$0 shows as $0 (not “—”) in leases/tenants balances/rent.

StatusTag shows inactive in red/bad.

Row double-click navigates to the card route (report event binding).

Post a single Markdown report with 5 screenshots + pass/fail table. If anything fails, list the failing row keys + page.

Begin QA now; do not edit code.

2) Replit Chat — If QA finds blanks → Apply Minimal Fixes (STRICT EDIT LIST)

Role
Make only the smallest changes needed to fill missing fields surfaced in QA. Keep theme, layout, nav, and DataTable API untouched.

Hard Guardrails

Edit only these files if needed:

src/utils/format.ts (money/shortDate only)

src/pages/portfolio/columns.tsx (row mappers & renderers only)

src/pages/portfolio/{properties,units,leases,tenants,owners}/index.tsx (ID normalization + enrichment lookups only)

No other files. No refactors.

Fix order

Field path fallbacks (ZIP, owners company/email/phone, units label/numerics) inside columns.tsx mappers.

Cross-entity joins: ensure normalizeId() on all map keys/gets in page index.tsx files.

Lease enrichment: guarantee property.name, unit.label, tenants[] built (primary + secondary).

Tenant type: set type to prospect_tenant / lease_tenant / secondary_tenant reliably.

Formatters: ensure money(0) -> "$0"; shortDate(null|""|"0000-00-00") -> "—" only for truly missing.

Deliverables

Diff summary (files + lines).

One example shaped row per page (keys only).

Two screenshots: (a) Owners (bold COMPANY), (b) Leases with multi-tenant + unit label.

Single commit:

git add -A
git commit -m "Portfolio V3: fill residual blanks from QA (field fallbacks, joins, lease/tenant enrichment). No theme/layout changes."

3) Shell — 1-click API smoke (optional)

Paste in Replit shell to confirm non-empty columns quickly:

set -e

check () {
  url="$1"; shift
  echo "— $url"
  json="$(curl -s "$url" || true)"
  node -e '
    const d = JSON.parse(process.argv[1]||"[]");
    const item = d[0]||{};
    const want = (process.argv.slice(2));
    const miss = want.filter(k=>!(k in item));
    console.log("keys:", Object.keys(item).slice(0,20).join(", "));
    if (miss.length) { console.log("MISSING FIELDS (top-level):", miss.join(", ")); }
  ' "$json" "$@"
  echo
}

check http://localhost:8787/api/portfolio/properties zip units occupancy_rate active
check http://localhost:8787/api/portfolio/units property_id unit_number beds baths sq_ft rent_amount status
check http://localhost:8787/api/portfolio/leases property_id unit_id primary_tenant_id start_date end_date rent_cents status
check http://localhost:8787/api/portfolio/tenants display_name email phone type
check http://localhost:8787/api/portfolio/owners company company_name email phone active


(Just informational; QA report is the source of truth.)

What I’ll look for when you paste back the QA report

All five screenshots show: zebra banding, uppercase headers, pagination control at the bottom with [25,50,100,150,200], per-column filters, and no console errors.

Data presence checklist is ✅ across the board (especially ZIP, owners contact, unit label, multi-tenant names).

$0 renders as $0, and inactive badge is red/bad.

If anything is ❌, run the “Minimal Fixes” prompt block and I’ll review the diff it produces.