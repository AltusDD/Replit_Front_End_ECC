# 1) Create the ECC theme (CSS variables; no Tailwind)
mkdir -p src/styles
cat > src/styles/theme.css <<'CSS'
:root{
  --bg:#0b0d10;
  --text:#e7eaee;
  --muted:#a7b0bb;
  --panel:#12161b;
  --border:#26303b;

  --info:#3b82f6;
  --success:#16a34a;
  --warn:#f59e0b;
  --danger:#ef4444;
}

*{box-sizing:border-box}
html,body,#root{height:100%}
body{
  margin:0;
  font:14px/1.45 ui-sans-serif,system-ui,-apple-system,Segoe UI,Roboto,Inter,Arial,"Apple Color Emoji","Segoe UI Emoji";
  color:var(--text);
  background:var(--bg);
}
h1,h2,h3{margin:0 0 12px}
a{color:var(--info);text-decoration:none}
a:hover{text-decoration:underline}
input,button{
  font:inherit;
}
button{
  background:var(--info);
  color:white;
  border:0;
  border-radius:8px;
  padding:10px 14px;
  cursor:pointer;
}
.code{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace}
.panel{
  background:var(--panel);
  border:1px solid var(--border);
  border-radius:10px;
  padding:14px;
}
CSS

# 2) Replace index.html with a Vite React entry that mounts #root
cat > index.html <<'HTML'
<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Empire Command Center</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.tsx"></script>
  </body>
</html>
HTML

# 3) Ensure ErrorBoundary exists (simple, safe)
mkdir -p src/components
cat > src/components/ErrorBoundary.tsx <<'TS'
import React from 'react';

type P = { children: React.ReactNode };
type S = { error: Error | null };

export default class ErrorBoundary extends React.Component<P, S> {
  constructor(p:P){ super(p); this.state={error:null}; }
  static getDerivedStateFromError(error:Error){ return { error }; }
  componentDidCatch(e:Error, info:any){ console.error('App error:', e, info); }
  render(){
    if (this.state.error) {
      return (
        <div className="panel">
          <h2>Something went wrong</h2>
          <pre className="code">{String(this.state.error)}</pre>
        </div>
      );
    }
    return this.props.children;
  }
}
TS

# 4) Restart the dev server
pkill -f vite >/dev/null 2>&1 || true
npm run dev
